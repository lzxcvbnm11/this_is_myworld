/*****************************************************************************  File Name : hmi_engine.h Organization : Zhuli Electronics Co.Ltd in Shanghai (www.shzldz.com) ******************************************************************************/ #ifndef HMI_ENGINE_H #define HMI_ENGINE_H  #include "hmi_element_id.h" #include "hmi_system.h" #include "hmi_engine_cfg.h"   #ifndef HMI_ENGINE_C #define EXTERN extern #else #define EXTERN #endif  #define HMI_YES 1 #define HMI_NO 0  /*load*/ //#define HMI_LOAD_SEGMENT 0 //#define HMI_REMOVE_SEGMENT 1 #define HMI_LOAD_IMAGE 0xfd #define HMI_REMOVE_IMAGE 0xfc   #define HMI_LOAD_RES_ALL_INIT 1 #define HMI_LOAD_RES_ALL_AT_USED 2  #define HMI_LOAD_RES_ONLY_ROTATION 3  #define HMI_LOAD_RES_SEGMEN 4 #define HMI_LOAD_SOURCE_MODE HMI_LOAD_RES_SEGMEN  #define HMI_LOAD_FONT NO   /*Video format and channel*/ #define HMI_VIDEO_CHANNEL1 0x00 #define HMI_VIDEO_CHANNEL2 0x10 #define HMI_VIDEO_CHANNEL3 0x20 #define HMI_VIDEO_CHANNEL4 0x30 #define HMI_VIDEO_WINDOW 0x80  #define HMI_VIDEO_CVBS 0 #define HMI_VIDEO_RGB888 1 #define HMI_VIDEO_RGB565 2 #define HMI_VIDEO_RGB555 3 #define HMI_RGB666 4 #define HMI_YUV_ITU656 5 #define HMI_YUV8 6 #define HMI_YUV16 7  #define HMI_VIDEO_FORMAT_BIT 0x0f #define HMI_VIDEO_CHANNEL_BIT 0x30  #define HMI_VIDEO_ENABLE_BIT 0x01 #define HMI_VIDEO_DISABLE_STATUS 0x00 #define HMI_VIDEO_ENABLE_STATUS 0x01 #define HMI_VIDEO_ENABLE_CREATE_BIT 0x03 #define HMI_VIDEO_CREATE_STATUS 0x02   #define HMI_VIDEO_XY_FLAG 0x80 #define HMI_VIDEO_WH_FLAG 0x40 #define HMI_VIDEO_CREATE_FLAG 0x20 #define HMI_VIDEO_ENABLE_FLAG 0x10  #define HMI_VIDEO_PLAY_STATUS_BIT 0xf0 #define HMI_VIDEO_PAUSE_STATUS 0x0f #define HMI_VIDEO_PLAY_STATUS 0x1f #define HMI_VIDEO_PRE_1_STATUS 0x2f #define HMI_VIDEO_PRE_2_STATUS 0x3f  #define HMI_VIDEO_BCK_1_STATUS 0x4f #define HMI_VIDEO_BCK_2_STATUS 0x5f  #define HMI_VIDEO_CAPTURE_EN (HMI_ALL_OBJECT+1) #define HMI_VIDEO_CAPTURE_DIS (HMI_ALL_OBJECT+2) #define HMI_VIDEO_CAPTURE_DESTORY (HMI_ALL_OBJECT+3) #define HMI_VIDEO_CAPTURE_INIT (HMI_ALL_OBJECT+4)  #define HMI_BLUR_FLAG BIT0  #define HMI_BMP_TRAIL BIT0  #define HMI_CUBE_3D_MODE BIT2 #define HMI_CUBE_3D_MODE_MASK 0x01  #define HMI_SURFACE_SIDE_MASK 0x3 #define HMI_SURFACE_CCW 0x0 #define HMI_SURFACE_CW 0x1 #define HMI_SURFACE_DOUBLE_SIDE 0x2   #define HMI_CUBE_ROTATION_MASK 0xf0  #define HMI_CUBE_ROTATION_MODE 0x01 #define HMI_CUBE_ROTATION_PRESET1 0x10 #define HMI_CUBE_ROTATION_USERDEFINE 0x20  /*Clear text,Refresh Text*/ #define HMI_CLEAR_TXT 0xff #define HMI_REFRESH_TXT 0xfe  /*Get Screen coordinate x,y*/ #define HMI_GET_OBJECT_SCREEN_COOR(pfarther_rect,pobject_rect,phmi_temp_rect) \ phmi_temp_rect->x=pfarther_rect->x+pobject_rect->x; \ phmi_temp_rect->y=pfarther_rect->y+pobject_rect->y; \ phmi_temp_rect->w=pobject_rect->w; \ phmi_temp_rect->h=pobject_rect->h   #define HMI_GET_OBJECT_SCREEN_COOR2(pfarther_rect,pobject_rect,phmi_temp_rect) \ (phmi_temp_rect)->x=(pfarther_rect)->x+(pobject_rect)->x; \ (phmi_temp_rect)->y=(pfarther_rect)->y+(pobject_rect)->y;   /*element prop id order*/ #define HMI_ELEMENT_X 0 #define HMI_ELEMENT_Y 1 #define HMI_ELEMENT_W 2 #define HMI_ELEMENT_H 3 #define HMI_ELEMENT_ALPHA 4 #define HMI_ELEMENT_FCOLOR 4 #define HMI_ELEMENT_C1 4 #define HMI_ELEMENT_C2 5 #define HMI_ELEMENT_ANGEL 5 /**angel rect**/ #define HMI_MIN_RECT_W 2 #define HMI_MIN_RECT_H 2 #define HMI_MIN_RECT_HALF_W 1 #define HMI_MIN_RECT_HALF_H 1 /*old angel -current angel*/ #define HMI_DEL_ANGLE 30 #define HMI_DEL_ANGLE_OFFSET_W 10  /*set page tree max depth*/ #define HMI_PAGE_MAX_DEPTH 0xff #define HMI_PAGE_ALL_LAYER HMI_PAGE_MAX_DEPTH /*all layer*/ #define HMI_PAGE_BEGIN_DEPTH (0xfe) /*Image Format*/ #define HMI_1BPP (1) #define HMI_2BPP (2) #define HMI_4BPP (3) #define HMI_8BPP (4) #define HMI_RGB565 (5) #define HMI_BGR565 (6) #define HMI_RGB555 (7) #define HMI_ARGB1555 (8) #define HMI_RGBA5551 (9) #define HMI_BGR555 (10) #define HMI_RGB888 (11) #define HMI_BGR888 (12) #define HMI_ARGB888 (13) #define HMI_ABGR888 (14) #define HMI_RGBA8888 (15) #define HMI_ARGB8888 (16)  /*FrameBuffer busy flag*/ #define HMI_FRAMEBUFFER_FREE (0x00) #define HMI_FRAMEBUFFER_BUSY (0x01) /*Scroll bar format*/ #define HMI_BEGIN_USED 0x40  #define HMI_FULL_USED 0x20 #define HMI_CURVALUE_USED 0x10 #define HMI_EMPTY_USED 0x08 #define HMI_END_USED 0x04 #define HMI_HORZ_BAR_USED 0x02 #define HMI_SCROLLBAR_RESEVED 0x01 /*Gradient Fill*/ #define HMI_GRADIENT_HORZ_FILL (0) #define HMI_GRADIENT_VERT_FILL (1)  /*Text Align*/ #define HMI_TEXT_PROP_ALIGN_MASK (0x03)  #define HMI_TEXT_PROP_ALIGN_LEFT (0x00) #define HMI_TEXT_PROP_ALIGN_RIGHT (0x01)  #define HMI_TEXT_PROP_ALIGN_CENTRE (0x02) #define HMI_TEXT_PROP_ALIGN_UNUSED (0x03) /*Text drawmode*/ #define HMI_TEXT_PROP_DRAW_MASK (0x0C)  #define HMI_TEXT_PROP_DRAW_NORMAL (0x00) #define HMI_TEXT_PROP_DRAW_REVERSE (0x04) #define HMI_TEXT_PROP_DRAW_TRANSP (0x08) #define HMI_TEXT_PROP_DRAW_UNUSED (0x0C) /*Text clip*/ #define HMI_TEXT_PROP_CLIP_MASK (0x30)  #define HMI_TEXT_PROP_CLIP_NORMAL (0x00)  #define HMI_TEXT_PROP_CLIP_FIT (0x10)  #define HMI_TEXT_PROP_CLIP_APPEND (0x20)  #define HMI_TEXT_PROP_CLIP_NO_CLIP (0x30)  /*Text scroll*/ #define HMI_TEXT_PROP_SCROLABLE (0x40)  #define HMI_TEXT_PROP_UNUSED (0x80)  /*Button status*/ #define HMI_BUTTON_NORMAL_INDEX (0x00) #define HMI_BUTTON_PRESS_INDEX (0x01) #define HMI_BUTTON_HIGHTLIGHT_INDEX (0x02) #define HMI_BUTTON_DISABLE_INDEX (0x03) /*ImageList play*/ #define HMI_IMAGELIST_NEXT (0xFF) #define HMI_IMAGELIST_PRE (0xFE) /*Image compress*/ #define HMI_ALPHA_IMAGE_FLAG (0x80) #define HMI_IMAGE_COMPRESS_NONE (0)  #define HMI_IMAGE_COMPRESS_NO_LOSS (1)  #define HMI_IMAGE_COMPRESS_LOSSY (2) #define HMI_IMAGE_COMPRESS_JPG (3) #define HMI_IMAGE_COMPRESS_RLE (4) #define HMI_IMAGE_COMPRESS_1BPP (5) #define HMI_IMAGE_COMPRESS_2BPP (6) #define HMI_IMAGE_COMPRESS_4BPP (7)  /*Image rotation*/ #define HMI_ROTATION_IMAGE_FLAG (0x40)  /*Page refresh*/ #define HMI_REMOVE_PAGE_BIT (0)  #define HMI_ACTIVE_PAGE_BIT (1) #define HMI_REFRESH_PAGE_BIT (0xFF)  /*Dirty zone*/ #define HMI_GET_DIRTY_ZONE (0) #define HMI_DRAW_PAGE (1) /*tw max width and max heigh*/ #define HMI_TW_IMG_MAX_WIDTH 2048 #define HMI_TW_IMG_MAX_HEIGH 2048  #define HMI_RGL_ALLPHA(color) ((color&0xFF000000)>>24) #define HMI_RGL_SET_ALPHA(alpha,color) ((alpha<<24)|(color&0x00ffffff))  /*Text Align marco*/ #define HMI_TEXT_PROP_ALIGN_IS_LEFT(prop) ((prop & HMI_TEXT_PROP_ALIGN_MASK ) == 0) #define HMI_TEXT_PROP_ALIGN_IS_RIGHT(prop) ((prop & HMI_TEXT_PROP_ALIGN_MASK) == HMI_TEXT_PROP_ALIGN_RIGHT) #define HMI_TEXT_PROP_ALIGN_IS_CENTRE(prop) ((prop & HMI_TEXT_PROP_ALIGN_MASK ) == HMI_TEXT_PROP_ALIGN_CENTRE) /*Text draw mode marco*/ #define HMI_TEXT_PROP_IS_DRAW_NORMAL(prop) ((prop & HMI_TEXT_PROP_DRAW_MASK) == 0) #define HMI_TEXT_PROP_IS_DRAW_REVERSE(prop) ((prop & HMI_TEXT_PROP_DRAW_MASK) == HMI_TEXT_PROP_DRAW_REVERSE) #define HMI_TEXT_PROP_IS_DRAW_TRANSP(prop) ((prop & HMI_TEXT_PROP_DRAW_MASK) == HMI_TEXT_PROP_DRAW_TRANSP) /*Text clip marco*/ #define HMI_TEXT_PROP_IS_CLIP_NORMAL(prop) ((prop & HMI_TEXT_PROP_CLIP_MASK) == 0) #define HMI_TEXT_PROP_IS_CLIP_FIT(prop) ((prop & HMI_TEXT_PROP_CLIP_MASK) == HMI_TEXT_PROP_CLIP_FIT) #define HMI_TEXT_PROP_IS_CLIP_APPEND(prop) ((prop & HMI_TEXT_PROP_CLIP_MASK) == HMI_TEXT_PROP_CLIP_APPEND) #define HMI_TEXT_PROP_IS_CLIP_NONE(prop) ((prop & HMI_TEXT_PROP_CLIP_MASK) == HMI_TEXT_PROP_CLIP_NO_CLIP) /*Text scroll marco*/ #define HMI_TEXT_PROP_IS_SCROLABLE(prop) ((prop & HMI_TEXT_PROP_SCROLABLE) != 0)   /*Dynamic object*/  #define HMI_PAGE_DXY_MAX_ID HMI_DXY_PAGES_NUMBER #define HMI_PAGE_SXY_MAX_ID HMI_PAGE_DXY_MAX_ID + HMI_SXY_PAGES_NUMBER #define HMI_VIDEO_PAGE_DXY_MIN_ID HMI_NDXY_PAGES_NUMBER #define HMI_IS_PAGE(ID) (ID<HMI_PAGE_SXY_MAX_ID)  #define HMI_IS_DXY_PAGE(ID) (ID<HMI_PAGE_DXY_MAX_ID)  #if HMI_DXY_PAGES_NUMBER > 0 #define HMI_IS_SXY_PAGE(ID) ((ID>=HMI_PAGE_DXY_MAX_ID)&&(ID<HMI_PAGE_SXY_MAX_ID)) #else #define HMI_IS_SXY_PAGE(ID) (ID<HMI_PAGE_SXY_MAX_ID) #endif #define HMI_VIDEO_PAGE_SXY_MIN_ID HMI_PAGE_DXY_MAX_ID+HMI_NSXY_PAGES_NUMBER  #define HMI_IS_VIDEO_DXY_PAGE(ID) ((ID>=HMI_VIDEO_PAGE_DXY_MIN_ID)&&(ID<HMI_PAGE_DXY_MAX_ID)) #define HMI_IS_VIDEO_SXY_PAGE(ID) ((ID>=HMI_VIDEO_PAGE_SXY_MIN_ID)&&(ID<HMI_PAGE_SXY_MAX_ID))  #define HMI_IS_NORMAL_DXY_PAGE(ID) ((ID>=0)&&(ID<HMI_VIDEO_PAGE_DXY_MIN_ID)) #define HMI_IS_NORMAL_SXY_PAGE(ID) ((ID>=HMI_PAGE_DXY_MAX_ID)&&(ID<HMI_VIDEO_PAGE_DXY_MIN_ID))   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr dxy ImageList*/ #define HMI_DYN_IMAGELIST_DXY_MAX_ID HMI_PAGE_SXY_MAX_ID +HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_IMAGELIST_DXY(ID) ((ID>=HMI_PAGE_SXY_MAX_ID)&&(ID<HMI_DYN_IMAGELIST_DXY_MAX_ID))  #define HMI_DYN_IMAGELIST_SXY_MAX_ID HMI_DYN_IMAGELIST_DXY_MAX_ID+HMI_SXY_IMAGELIST_NUMBER #define HMI_IS_DYN_IMAGELIST_SXY(ID) ((ID>=HMI_DYN_IMAGELIST_DXY_MAX_ID)&&(ID<HMI_DYN_IMAGELIST_SXY_MAX_ID)) /*dxy ScrollBar*/ #define HMI_DYN_SCROLLBAR_DXY_MAX_ID HMI_DYN_IMAGELIST_SXY_MAX_ID+HMI_DXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_SCROLLBAR_DXY(ID) ((ID>=HMI_DYN_IMAGELIST_SXY_MAX_ID)&&(ID<HMI_DYN_SCROLLBAR_DXY_MAX_ID))  #define HMI_DYN_SCROLLBAR_SXY_MAX_ID HMI_DYN_SCROLLBAR_DXY_MAX_ID+HMI_SXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_SCROLLBAR_SXY(ID) ((ID>=HMI_DYN_SCROLLBAR_DXY_MAX_ID)&&(ID<HMI_DYN_SCROLLBAR_SXY_MAX_ID)) /*dxy Button*/ #define HMI_DYN_BUTTON_DXY_MAX_ID HMI_DYN_SCROLLBAR_SXY_MAX_ID+HMI_DXY_BUTTON_NUMBER #define HMI_IS_DYN_BUTTON_DXY(ID) ((ID>=HMI_DYN_SCROLLBAR_SXY_MAX_ID)&&(ID<HMI_DYN_BUTTON_DXY_MAX_ID))  #define HMI_DYN_BUTTON_SXY_MAX_ID HMI_DYN_BUTTON_DXY_MAX_ID +HMI_SXY_BUTTON_NUMBER #define HMI_IS_DYN_BUTTON_SXY(ID) ((ID>=HMI_DYN_BUTTON_DXY_MAX_ID)&&(ID<HMI_DYN_BUTTON_SXY_MAX_ID)) /*edit Text*/ #define HMI_DYN_TEXTS_MAX_ID HMI_DYN_BUTTON_SXY_MAX_ID +HMI_DYN_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_TEXTS(ID) ((ID>=HMI_DYN_BUTTON_SXY_MAX_ID)&&(ID<HMI_DYN_TEXTS_MAX_ID)) /*dxy text*/ #define HMI_DYN_TEXTS_DXY_MAX_ID HMI_DYN_BUTTON_SXY_MAX_ID +HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_TEXT_DXY(ID) ((ID>=HMI_DYN_BUTTON_SXY_MAX_ID)&&(ID<HMI_DYN_TEXTS_DXY_MAX_ID))  #define HMI_DYN_TEXTS_DXY_DYN_FONT_MAX_ID HMI_DYN_BUTTON_SXY_MAX_ID +HMI_EDIT_TEXT_DXY_DYN_FONT_NUM #define HMI_IS_DYN_TEXT_DXY_DYN_FONT(ID) ((ID>=HMI_DYN_BUTTON_SXY_MAX_ID)&&(ID<HMI_DYN_TEXTS_DXY_DYN_FONT_MAX_ID))  #define HMI_DYN_TEXTS_SXY_MAX_ID HMI_DYN_TEXTS_DXY_MAX_ID +HMI_S_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_TEXT_SXY(ID) ((ID>=HMI_DYN_TEXTS_DXY_MAX_ID)&&(ID<HMI_DYN_TEXTS_SXY_MAX_ID))  #define HMI_DYN_TEXTS_SXY_DYN_FONT_MAX_ID HMI_DYN_TEXTS_DXY_MAX_ID +HMI_EDIT_TEXT_SXY_DYN_FONT_NUM #define HMI_IS_DYN_TEXT_SXY_DYN_FONT(ID) ((ID>=HMI_DYN_TEXTS_DXY_MAX_ID)&&(ID<HMI_DYN_TEXTS_SXY_DYN_FONT_MAX_ID))  /*Dyn container*/ #define HMI_DYN_CONTAINERS_MAX_ID HMI_DYN_TEXTS_MAX_ID +HMI_DYN_CONTAINERS_NUMBER #define HMI_IS_DYN_CONTAINER(ID) ((ID>=HMI_DYN_TEXTS_MAX_ID)&&(ID<HMI_DYN_CONTAINERS_MAX_ID)) /*Dxy nfill*/ #define HMI_DYN_NFILL_MAX_ID HMI_DYN_CONTAINERS_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_NFILL(ID) ((ID>=HMI_DYN_CONTAINERS_MAX_ID)&&(ID<HMI_DYN_NFILL_MAX_ID)) /*Dxy Gfill*/ #define HMI_DYN_GFILL_MAX_ID HMI_DYN_NFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_GFILL(ID) ((ID>=HMI_DYN_NFILL_MAX_ID)&&(ID<HMI_DYN_GFILL_MAX_ID)) /*Dxy CUBE*/ #define HMI_DYN_CUBE_MAX_ID HMI_DYN_GFILL_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_CUBE(ID) ((ID>=HMI_DYN_GFILL_MAX_ID)&&(ID<HMI_DYN_CUBE_MAX_ID))  /*Language*/ #define HMI_DYN_LANGUAGE_MAX_ID HMI_DYN_CUBE_MAX_ID +HMI_DYN_LANGUAGE_NUMBER #define HMI_IS_DYN_LANGUAGE(ID) ((ID>=HMI_DYN_CUBE_MAX_ID)&&(ID<HMI_DYN_LANGUAGE_MAX_ID)) /*dxy container */ #define HMI_DYN_XY_CONTAINER_MAX_ID HMI_DYN_LANGUAGE_MAX_ID +HMI_DXY_CONTAINERS_NUMBER #define HMI_IS_DYN_XY_CONTAINER(ID) ((ID>=HMI_DYN_LANGUAGE_MAX_ID)&&(ID<HMI_DYN_XY_CONTAINER_MAX_ID)) /*dxy Image */ #define HMI_DYN_XY_BITMAP_MAX_ID HMI_DYN_XY_CONTAINER_MAX_ID +HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_XY_BITMAP(ID) ((ID>=HMI_DYN_XY_CONTAINER_MAX_ID)&&(ID<HMI_DYN_XY_BITMAP_MAX_ID)) /*uneditable text dynamic x,y */ #define HMI_UNEDIT_TEXT_DYN_XY_MAX_ID HMI_DYN_XY_BITMAP_MAX_ID +HMI_UNEDIT_TEXTS_DYN_XY_NUMBER #define HMI_IS_UNEDIT_TEXT_DYN_XY(ID) ((ID>=HMI_DYN_XY_BITMAP_MAX_ID)&&(ID<HMI_UNEDIT_TEXT_DYN_XY_MAX_ID)) /*uneditable text static x,y */ #define HMI_UNEDIT_TEXT_STATIC_XY_MAX_ID HMI_UNEDIT_TEXT_DYN_XY_MAX_ID +HMI_UNEDIT_TEXTS_STATIC_XY_NUMBER #define HMI_IS_UNEDIT_TEXT_STATIC_XY(ID) ((ID>=HMI_UNEDIT_TEXT_DYN_XY_MAX_ID)&&(ID<HMI_UNEDIT_TEXT_STATIC_XY_MAX_ID))  /*uneditable text dynamic x,y dynfont */ #define HMI_UNEDIT_TEXT_DYN_XY_DYN_FONT_MAX_ID HMI_DYN_XY_BITMAP_MAX_ID +HMI_UNEDIT_TEXT_DXY_DYN_FONT_NUM #define HMI_IS_UNEDIT_TEXT_DYN_XY_DYN_FONT(ID) ((ID>=HMI_DYN_XY_BITMAP_MAX_ID)&&(ID<HMI_UNEDIT_TEXT_DYN_XY_DYN_FONT_MAX_ID)) /*uneditable text dynamic x,y static font */  /*uneditable text static x,y */ #define HMI_UNEDIT_TEXT_STATIC_XY_DYN_FONT_MAX_ID HMI_UNEDIT_TEXT_DYN_XY_MAX_ID +HMI_UNEDIT_TEXT_SXY_DYN_FONT_NUM #define HMI_IS_UNEDIT_TEXT_STATIC_XY_DYN_FONT(ID) ((ID>=HMI_UNEDIT_TEXT_DYN_XY_MAX_ID)&&(ID<HMI_UNEDIT_TEXT_STATIC_XY_DYN_FONT_MAX_ID))  /*uneditable text */ #define HMI_STATIC_TEXTS_MAX_ID HMI_DYN_XY_BITMAP_MAX_ID +HMI_STATIC_TEXTS_NUMBER #define HMI_IS_STATIC_TEXTS(ID) ((ID>=HMI_DYN_XY_BITMAP_MAX_ID)&&(ID<HMI_STATIC_TEXTS_MAX_ID))  /*SEGMENT*/ #define HMI_SEGMENT_MAX_ID HMI_UNEDIT_TEXT_STATIC_XY_MAX_ID + HMI_SEGMENT_MAX #define HMI_IS_SEGMENT(ID) ((ID>=HMI_UNEDIT_TEXT_STATIC_XY_MAX_ID)&&(ID<HMI_SEGMENT_MAX_ID))   #define HMI_DYN_ELEMENT_END_ID (HMI_SEGMENT_MAX_ID) #define HMI_IS_DYN_ELEMENT(ID) (ID<HMI_DYN_ELEMENT_END_ID)  /*Dynamic element property ID*/ /*Dxy container x,y,w,h,*/ #define HMI_DYN_X_CONTAINER_MAX_ID HMI_DYN_ELEMENT_END_ID+HMI_DXY_CONTAINERS_NUMBER #define HMI_IS_DYN_X_CONTAINER(ID) ((ID>=HMI_DYN_ELEMENT_END_ID)&&(ID<HMI_DYN_X_CONTAINER_MAX_ID))  #define HMI_DYN_Y_CONTAINER_MAX_ID HMI_DYN_X_CONTAINER_MAX_ID +HMI_DXY_CONTAINERS_NUMBER #define HMI_IS_DYN_Y_CONTAINER(ID) ((ID>=HMI_DYN_X_CONTAINER_MAX_ID)&&(ID<HMI_DYN_Y_CONTAINER_MAX_ID))  #define HMI_DYN_W_CONTAINER_MAX_ID HMI_DYN_Y_CONTAINER_MAX_ID +HMI_DXY_CONTAINERS_NUMBER #define HMI_IS_DYN_W_CONTAINER(ID) ((ID>=HMI_DYN_Y_CONTAINER_MAX_ID)&&(ID<HMI_DYN_W_CONTAINER_MAX_ID))  #define HMI_DYN_H_CONTAINER_MAX_ID HMI_DYN_W_CONTAINER_MAX_ID +HMI_DXY_CONTAINERS_NUMBER #define HMI_IS_DYN_H_CONTAINER(ID) ((ID>=HMI_DYN_W_CONTAINER_MAX_ID)&&(ID<HMI_DYN_H_CONTAINER_MAX_ID)) #define HMI_DXY_CONTAINER_PRO2DXY_CONTAINER(ID) (ID+HMI_DYN_LANGUAGE_MAX_ID)  /*dxy container property x,y,w,h range*/ #define HMI_IS_DYN_XY_CONTAINER_PROPERTY(ID) ((ID>=HMI_SEGMENT_MAX_ID)&&(ID<HMI_DYN_H_CONTAINER_MAX_ID))  /*Dxy image x,y,w,h,alpha,angel*/ #define HMI_DYN_X_BITMAP_MAX_ID HMI_DYN_H_CONTAINER_MAX_ID +HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_X_BITMAP(ID) ((ID>=HMI_DYN_H_CONTAINER_MAX_ID)&&(ID<HMI_DYN_X_BITMAP_MAX_ID))  #define HMI_DYN_Y_BITMAP_MAX_ID HMI_DYN_X_BITMAP_MAX_ID +HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_Y_BITMAP(ID) ((ID>=HMI_DYN_X_BITMAP_MAX_ID)&&(ID<HMI_DYN_Y_BITMAP_MAX_ID))  #define HMI_DYN_W_BITMAP_MAX_ID HMI_DYN_Y_BITMAP_MAX_ID +HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_W_BITMAP(ID) ((ID>=HMI_DYN_Y_BITMAP_MAX_ID)&&(ID<HMI_DYN_W_BITMAP_MAX_ID))  #define HMI_DYN_H_BITMAP_MAX_ID HMI_DYN_W_BITMAP_MAX_ID +HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_H_BITMAP(ID) ((ID>=HMI_DYN_W_BITMAP_MAX_ID)&&(ID<HMI_DYN_H_BITMAP_MAX_ID))  #define HMI_DYN_ALPHA_BITMAP_MAX_ID HMI_DYN_H_BITMAP_MAX_ID +HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_ALPHA_BITMAP(ID) ((ID>=HMI_DYN_H_BITMAP_MAX_ID)&&(ID<HMI_DYN_ALPHA_BITMAP_MAX_ID))  #define HMI_DYN_ANGEL_BITMAP_MAX_ID HMI_DYN_ALPHA_BITMAP_MAX_ID+HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_ANGEL_BITMAP(ID) ((ID>=HMI_DYN_ALPHA_BITMAP_MAX_ID)&&(ID<HMI_DYN_ANGEL_BITMAP_MAX_ID))  #define HMI_DYN_BLUR_BITMAP_MAX_ID HMI_DYN_ANGEL_BITMAP_MAX_ID+HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_BLUR_BITMAP(ID) ((ID>=HMI_DYN_ANGEL_BITMAP_MAX_ID)&&(ID<HMI_DYN_BLUR_BITMAP_MAX_ID))  #define HMI_DYN_TRAIL_BITMAP_MAX_ID HMI_DYN_BLUR_BITMAP_MAX_ID+HMI_DXY_BITMAPS_NUMBER #define HMI_IS_DYN_TRAIL_BITMAP(ID) ((ID>=HMI_DYN_BLUR_BITMAP_MAX_ID)&&(ID<HMI_DYN_TRAIL_BITMAP_MAX_ID))  /*dxy image property x,y,w,h,alpha,angel range*/ #define HMI_IS_DYN_XY_BITMAP_PROPERTY(ID) ((ID>=HMI_DYN_H_CONTAINER_MAX_ID)&&(ID<HMI_DYN_TRAIL_BITMAP_MAX_ID)) #define HMI_DXY_BITMAP_PRO2DXY_BITMAP(ID) (ID+(HMI_DYN_XY_CONTAINER_MAX_ID))   /*Dxy page x,y,w,h*/ #define HMI_DYN_X_PAGES_MAX_ID HMI_DYN_TRAIL_BITMAP_MAX_ID+HMI_DXY_PAGES_NUMBER #define HMI_IS_DYN_X_PAGES(ID) ((ID>=HMI_DYN_TRAIL_BITMAP_MAX_ID)&&(ID<HMI_DYN_X_PAGES_MAX_ID))  #define HMI_DYN_Y_PAGES_MAX_ID HMI_DYN_X_PAGES_MAX_ID +HMI_DXY_PAGES_NUMBER #define HMI_IS_DYN_Y_PAGES(ID) ((ID>=HMI_DYN_X_PAGES_MAX_ID)&&(ID<HMI_DYN_Y_PAGES_MAX_ID))  #define HMI_DYN_W_PAGES_MAX_ID HMI_DYN_Y_PAGES_MAX_ID +HMI_DXY_PAGES_NUMBER #define HMI_IS_DYN_W_PAGES(ID) ((ID>=HMI_DYN_Y_PAGES_MAX_ID)&&(ID<HMI_DYN_W_PAGES_MAX_ID))  #define HMI_DYN_H_PAGES_MAX_ID HMI_DYN_W_PAGES_MAX_ID +HMI_DXY_PAGES_NUMBER #define HMI_IS_DYN_H_PAGES(ID) ((ID>=HMI_DYN_W_PAGES_MAX_ID)&&(ID<HMI_DYN_H_PAGES_MAX_ID))  #define HMI_DYN_ALPHA_PAGES_MAX_ID HMI_DYN_H_PAGES_MAX_ID +HMI_DXY_PAGES_NUMBER #define HMI_IS_DYN_ALPHA_PAGES(ID) ((ID>=HMI_DYN_H_PAGES_MAX_ID)&&(ID<HMI_DYN_ALPHA_PAGES_MAX_ID))  /*dxy imagelist property x,y,w,h,alpha range*/ #define HMI_IS_DYN_XY_PAGE_PROPERTY(ID) ((ID>=HMI_DYN_TRAIL_BITMAP_MAX_ID)&&(ID<HMI_DYN_ALPHA_PAGES_MAX_ID)) #define HMI_DXY_PAGE_PRO2DXY_PAGE(ID) (ID+0)   /*Dxy imagelist x,y,w,h,alpha,angel*/ #define HMI_DYN_X_IMAGELIST_MAX_ID HMI_DYN_ALPHA_PAGES_MAX_ID +HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_X_IMAGELIST(ID) ((ID>=HMI_DYN_ALPHA_PAGES_MAX_ID)&&(ID<HMI_DYN_X_IMAGELIST_MAX_ID))  #define HMI_DYN_Y_IMAGELIST_MAX_ID HMI_DYN_X_IMAGELIST_MAX_ID +HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_Y_IMAGELIST(ID) ((ID>=HMI_DYN_X_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_Y_IMAGELIST_MAX_ID))  #define HMI_DYN_W_IMAGELIST_MAX_ID HMI_DYN_Y_IMAGELIST_MAX_ID +HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_W_IMAGELIST(ID) ((ID>=HMI_DYN_Y_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_W_IMAGELIST_MAX_ID))  #define HMI_DYN_H_IMAGELIST_MAX_ID HMI_DYN_W_IMAGELIST_MAX_ID +HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_H_IMAGELIST(ID) ((ID>=HMI_DYN_W_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_H_IMAGELIST_MAX_ID))  #define HMI_DYN_ALPHA_IMAGELIST_MAX_ID HMI_DYN_H_IMAGELIST_MAX_ID +HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_ALPHA_IMAGELIST(ID) ((ID>=HMI_DYN_H_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_ALPHA_IMAGELIST_MAX_ID)) #if 0 #define HMI_DYN_ANGEL_IMAGELIST_MAX_ID HMI_DYN_ALPHA_IMAGELIST_MAX_ID+HMI_DXY_IMAGELIST_NUMBER #define HMI_IS_DYN_ANGEL_IMAGELIST(ID) ((ID>=HMI_DYN_ALPHA_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_ANGEL_IMAGELIST_MAX_ID)) #endif /*dxy imagelist property x,y,w,h,alpha range*/ #define HMI_IS_DYN_XY_IMGLIST_PROPERTY(ID) ((ID>=HMI_DYN_ALPHA_PAGES_MAX_ID)&&(ID<HMI_DYN_ALPHA_IMAGELIST_MAX_ID)) #define HMI_DXY_IMGLIST_PRO2DXY_IMGLIST(ID) (ID+(HMI_PAGE_SXY_MAX_ID))  /*Dxy scrollbar x,y,w,h,alpha,angel*/  #define HMI_DYN_X_SCROLLBAR_MAX_ID HMI_DYN_ALPHA_IMAGELIST_MAX_ID +HMI_DXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_X_SCROLLBAR(ID) ((ID>=HMI_DYN_ALPHA_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_X_SCROLLBAR_MAX_ID))  #define HMI_DYN_Y_SCROLLBAR_MAX_ID HMI_DYN_X_SCROLLBAR_MAX_ID +HMI_DXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_Y_SCROLLBAR(ID) ((ID>=HMI_DYN_X_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_Y_SCROLLBAR_MAX_ID))  #define HMI_DYN_W_SCROLLBAR_MAX_ID HMI_DYN_Y_SCROLLBAR_MAX_ID +HMI_DXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_W_SCROLLBAR(ID) ((ID>=HMI_DYN_Y_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_W_SCROLLBAR_MAX_ID))  #define HMI_DYN_H_SCROLLBAR_MAX_ID HMI_DYN_W_SCROLLBAR_MAX_ID +HMI_DXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_H_SCROLLBAR(ID) ((ID>=HMI_DYN_W_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_H_SCROLLBAR_MAX_ID))  #define HMI_DYN_ALPHA_SCROLLBAR_MAX_ID HMI_DYN_H_SCROLLBAR_MAX_ID +HMI_DXY_SCROLLBAR_NUMBER #define HMI_IS_DYN_ALPHA_SCROLLBAR(ID) ((ID>=HMI_DYN_H_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_ALPHA_SCROLLBAR_MAX_ID)) #if 0 #define HMI_DYN_ANGNEL_SCROLLBAR_MAX_ID HMI_DYN_ALPHA_SCROLLBAR_MAX_ID #define HMI_IS_DYN_ANGNEL_SCROLLBAR(ID) ((ID>=HMI_DYN_ALPHA_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_ANGNEL_SCROLLBAR_MAX_ID)) #endif /*dxy scrollbar property x,y,w,h,alpha range*/ #define HMI_IS_DYN_XY_SCROLLBAR_PROPERTY(ID) ((ID>=HMI_DYN_ALPHA_IMAGELIST_MAX_ID)&&(ID<HMI_DYN_ALPHA_SCROLLBAR_MAX_ID)) #define HMI_DXY_SCROLLBAR_PRO2DXY_SCROLLBAR(ID) (ID+HMI_DYN_IMAGELIST_SXY_MAX_ID)   /*Dxy button x,y,w,h,alpha*/ #define HMI_DYN_X_BUTTON_MAX_ID HMI_DYN_ALPHA_SCROLLBAR_MAX_ID+HMI_DXY_BUTTON_NUMBER #define HMI_IS_DYN_X_BUTTON(ID) ((ID>=HMI_DYN_ALPHA_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_X_BUTTON_MAX_ID))  #define HMI_DYN_Y_BUTTON_MAX_ID HMI_DYN_X_BUTTON_MAX_ID +HMI_DXY_BUTTON_NUMBER #define HMI_IS_DYN_Y_BUTTON(ID) ((ID>=HMI_DYN_X_BUTTON_MAX_ID)&&(ID<HMI_DYN_Y_BUTTON_MAX_ID))  #define HMI_DYN_W_BUTTON_MAX_ID HMI_DYN_Y_BUTTON_MAX_ID +HMI_DXY_BUTTON_NUMBER #define HMI_IS_DYN_W_BUTTON(ID) ((ID>=HMI_DYN_Y_BUTTON_MAX_ID)&&(ID<HMI_DYN_W_BUTTON_MAX_ID))  #define HMI_DYN_H_BUTTON_MAX_ID HMI_DYN_W_BUTTON_MAX_ID +HMI_DXY_BUTTON_NUMBER #define HMI_IS_DYN_H_BUTTON(ID) ((ID>=HMI_DYN_W_BUTTON_MAX_ID)&&(ID<HMI_DYN_H_BUTTON_MAX_ID))  #define HMI_DYN_ALPHA_BUTTON_MAX_ID HMI_DYN_H_BUTTON_MAX_ID +HMI_DXY_BUTTON_NUMBER #define HMI_IS_DYN_ALPHA_BUTTON(ID) ((ID>=HMI_DYN_H_BUTTON_MAX_ID)&&(ID<HMI_DYN_ALPHA_BUTTON_MAX_ID)) /*dxy button property x,y,w,h,alpha range*/ #define HMI_IS_DYN_XY_BUTTON_PROPERTY(ID) ((ID>=HMI_DYN_ALPHA_SCROLLBAR_MAX_ID)&&(ID<HMI_DYN_ALPHA_BUTTON_MAX_ID)) #define HMI_DXY_BUTTON_PRO2DXY_BUTTON(ID) (ID+HMI_DYN_SCROLLBAR_SXY_MAX_ID)   /*Unedit dxy x,y,w,h,color,alpha*/  #define HMI_DYN_X_UNEDIT_MAX_ID HMI_DYN_ALPHA_BUTTON_MAX_ID+HMI_UNEDIT_TEXTS_DYN_XY_NUMBER #define HMI_IS_DYN_X_UNEDIT(ID) ((ID>=HMI_DYN_ALPHA_BUTTON_MAX_ID)&&(ID<HMI_DYN_X_UNEDIT_MAX_ID))  #define HMI_DYN_Y_UNEDIT_MAX_ID HMI_DYN_X_UNEDIT_MAX_ID +HMI_UNEDIT_TEXTS_DYN_XY_NUMBER #define HMI_IS_DYN_Y_UNEDIT(ID) ((ID>=HMI_DYN_X_UNEDIT_MAX_ID)&&(ID<HMI_DYN_Y_UNEDIT_MAX_ID))  #define HMI_DYN_W_UNEDIT_MAX_ID HMI_DYN_Y_UNEDIT_MAX_ID +HMI_UNEDIT_TEXTS_DYN_XY_NUMBER #define HMI_IS_DYN_W_UNEDIT(ID) ((ID>=HMI_DYN_Y_UNEDIT_MAX_ID)&&(ID<HMI_DYN_W_UNEDIT_MAX_ID))  #define HMI_DYN_H_UNEDIT_MAX_ID HMI_DYN_W_UNEDIT_MAX_ID +HMI_UNEDIT_TEXTS_DYN_XY_NUMBER #define HMI_IS_DYN_H_UNEDIT(ID) ((ID>=HMI_DYN_W_UNEDIT_MAX_ID)&&(ID<HMI_DYN_H_UNEDIT_MAX_ID))  #define HMI_DYN_COLOR_UNEDIT_MAX_ID HMI_DYN_H_UNEDIT_MAX_ID +HMI_UNEDIT_TEXTS_DYN_XY_NUMBER #define HMI_IS_DYN_COLOR_UNEDIT(ID) ((ID>=HMI_DYN_H_UNEDIT_MAX_ID)&&(ID<HMI_DYN_COLOR_UNEDIT_MAX_ID)) #if 0 #define HMI_DYN_ALPHA_UNEDIT_MAX_ID (HMI_DYN_COLOR_UNEDIT_MAX_ID) #define HMI_IS_DYN_ALPHA_UNEDIT(ID) ((ID>=HMI_DYN_COLOR_UNEDIT_MAX_ID)&&(ID<HMI_DYN_ALPHA_UNEDIT_MAX_ID)) #endif /*Uedit dxy property x,y,w,h range*/ #define HMI_IS_DYN_XY_STEXT_PROPERTY(ID) ((ID>=HMI_DYN_ALPHA_BUTTON_MAX_ID)&&(ID<HMI_DYN_COLOR_UNEDIT_MAX_ID)) #define HMI_DXY_STEXT_PRO2DXY_STEXT(ID) (ID+HMI_DYN_XY_BITMAP_MAX_ID)    /*Edit dxy x,y,w,h,color,alpha*/  #define HMI_DYN_X_DTEXT_MAX_ID HMI_DYN_COLOR_UNEDIT_MAX_ID+HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_X_DTEXT(ID) ((ID>=HMI_DYN_COLOR_UNEDIT_MAX_ID)&&(ID<HMI_DYN_X_DTEXT_MAX_ID))  #define HMI_DYN_Y_DTEXT_MAX_ID HMI_DYN_X_DTEXT_MAX_ID +HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_Y_DTEXT(ID) ((ID>=HMI_DYN_X_DTEXT_MAX_ID)&&(ID<HMI_DYN_Y_DTEXT_MAX_ID))  #define HMI_DYN_W_DTEXT_MAX_ID HMI_DYN_Y_DTEXT_MAX_ID +HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_W_DTEXT(ID) ((ID>=HMI_DYN_Y_DTEXT_MAX_ID)&&(ID<HMI_DYN_W_DTEXT_MAX_ID))  #define HMI_DYN_H_DTEXT_MAX_ID HMI_DYN_W_DTEXT_MAX_ID +HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_H_DTEXT(ID) ((ID>=HMI_DYN_W_DTEXT_MAX_ID)&&(ID<HMI_DYN_H_DTEXT_MAX_ID))  #define HMI_DYN_DCOLOR_DTEXT_MAX_ID HMI_DYN_H_DTEXT_MAX_ID +HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_DYN_DCOLOR_DTEXT(ID) ((ID>=HMI_DYN_H_DTEXT_MAX_ID)&&(ID<HMI_DYN_DCOLOR_DTEXT_MAX_ID))  /*Edit dxy property x,y,w,h range*/ #define HMI_IS_DYN_XY_DTEXT_PROPERTY(ID) ((ID>=HMI_DYN_COLOR_UNEDIT_MAX_ID)&&(ID<HMI_DYN_DCOLOR_DTEXT_MAX_ID)) #define HMI_DXY_DTEXT_PRO2DXY_DTEXT(ID) (ID+HMI_DYN_BUTTON_SXY_MAX_ID)   /*Dyn fill x,y,w,h,color,alpha,z*/  #define HMI_DYN_X_NFILL_MAX_ID HMI_DYN_DCOLOR_DTEXT_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_X_NFILL(ID) ((ID>=HMI_DYN_DCOLOR_DTEXT_MAX_ID)&&(ID<HMI_DYN_X_NFILL_MAX_ID))  #define HMI_DYN_Y_NFILL_MAX_ID HMI_DYN_X_NFILL_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_Y_NFILL(ID) ((ID>=HMI_DYN_X_NFILL_MAX_ID)&&(ID<HMI_DYN_Y_NFILL_MAX_ID))  #define HMI_DYN_W_NFILL_MAX_ID HMI_DYN_Y_NFILL_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_W_NFILL(ID) ((ID>=HMI_DYN_Y_NFILL_MAX_ID)&&(ID<HMI_DYN_W_NFILL_MAX_ID))  #define HMI_DYN_H_NFILL_MAX_ID HMI_DYN_W_NFILL_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_H_NFILL(ID) ((ID>=HMI_DYN_W_NFILL_MAX_ID)&&(ID<HMI_DYN_H_NFILL_MAX_ID))  #define HMI_DYN_COLOR_NFILL_MAX_ID HMI_DYN_H_NFILL_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_COLOR_NFILL(ID) ((ID>=HMI_DYN_H_NFILL_MAX_ID)&&(ID<HMI_DYN_COLOR_NFILL_MAX_ID))  #define HMI_DYN_Z_NFILL_MAX_ID HMI_DYN_COLOR_NFILL_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER #define HMI_IS_DYN_Z_NFILL(ID) ((ID>=HMI_DYN_COLOR_NFILL_MAX_ID)&&(ID<HMI_DYN_Z_NFILL_MAX_ID))   #if 0 #define HMI_DYN_ALPHA_NFILL_MAX_ID (HMI_DYN_Z_NFILL_MAX_ID +HMI_DYN_FILL_PAGES_NUMBER)  #define HMI_IS_DYN_ALPHA_NFILL(ID) ((ID>=HMI_DYN_Z_NFILL_MAX_ID)&&(ID<HMI_DYN_ALPHA_NFILL_MAX_ID)) #endif /*dxy nfill property x,y,w,h range*/ #define HMI_IS_DYN_XY_FILL_PROPERTY(ID) ((ID>=HMI_DYN_DCOLOR_DTEXT_MAX_ID)&&(ID<HMI_DYN_Z_NFILL_MAX_ID)) #define HMI_DXY_FILL_PRO2DXY_FILL(ID) (ID+HMI_DYN_CONTAINERS_MAX_ID)   /*Dyn gridient fill x,y,w,h,color1,color2,alpha*/ #define HMI_DYN_X_GFILL_MAX_ID HMI_DYN_Z_NFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_X_GFILL(ID) ((ID>=HMI_DYN_Z_NFILL_MAX_ID)&&(ID<HMI_DYN_X_GFILL_MAX_ID))  #define HMI_DYN_Y_GFILL_MAX_ID HMI_DYN_X_GFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_Y_GFILL(ID) ((ID>=HMI_DYN_X_GFILL_MAX_ID)&&(ID<HMI_DYN_Y_GFILL_MAX_ID))  #define HMI_DYN_W_GFILL_MAX_ID HMI_DYN_Y_GFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_W_GFILL(ID) ((ID>=HMI_DYN_Y_GFILL_MAX_ID)&&(ID<HMI_DYN_W_GFILL_MAX_ID))  #define HMI_DYN_H_GFILL_MAX_ID HMI_DYN_W_GFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_H_GFILL(ID) ((ID>=HMI_DYN_W_GFILL_MAX_ID)&&(ID<HMI_DYN_H_GFILL_MAX_ID))  #define HMI_DYN_C1_GFILL_MAX_ID HMI_DYN_H_GFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_C1_GFILL(ID) ((ID>=HMI_DYN_H_GFILL_MAX_ID)&&(ID<HMI_DYN_C1_GFILL_MAX_ID))  #define HMI_DYN_C2_GFILL_MAX_ID HMI_DYN_C1_GFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_C2_GFILL(ID) ((ID>=HMI_DYN_C1_GFILL_MAX_ID)&&(ID<HMI_DYN_C2_GFILL_MAX_ID))  #define HMI_DYN_Z_GFILL_MAX_ID HMI_DYN_C2_GFILL_MAX_ID +HMI_DYN_GFILL_NUMBER #define HMI_IS_DYN_Z_GFILL(ID) ((ID>=HMI_DYN_C2_GFILL_MAX_ID)&&(ID<HMI_DYN_Z_GFILL_MAX_ID))  #if 0 #define HMI_DYN_ALPHA_GFILL_MAX_ID (HMI_DYN_C2_GFILL_MAX_ID) #define HMI_IS_DYN_ALPHA_GFILL(ID) ((ID>=HMI_DYN_C2_GFILL_MAX_ID)&&(ID<HMI_DYN_ALPHA_GFILL_MAX_ID)) #endif /*dxy Gfill property x,y,w,h range*/ #define HMI_IS_DYN_XY_GFILL_PROPERTY(ID) ((ID>=HMI_DYN_Z_NFILL_MAX_ID)&&(ID<HMI_DYN_Z_GFILL_MAX_ID)) #define HMI_DXY_GFILL_PRO2DXY_GFILL(ID) (ID+HMI_DYN_NFILL_MAX_ID)   /*Dyn CUBE x,y,w,h*/ #define HMI_DYN_X_CUBE_MAX_ID HMI_DYN_Z_GFILL_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_X_CUBE(ID) ((ID>=HMI_DYN_Z_GFILL_MAX_ID)&&(ID<HMI_DYN_X_CUBE_MAX_ID))  #define HMI_DYN_Y_CUBE_MAX_ID HMI_DYN_X_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_Y_CUBE(ID) ((ID>=HMI_DYN_X_CUBE_MAX_ID)&&(ID<HMI_DYN_Y_CUBE_MAX_ID))  #define HMI_DYN_W_CUBE_MAX_ID HMI_DYN_Y_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_W_CUBE(ID) ((ID>=HMI_DYN_Y_CUBE_MAX_ID)&&(ID<HMI_DYN_W_CUBE_MAX_ID))  #define HMI_DYN_H_CUBE_MAX_ID HMI_DYN_W_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_H_CUBE(ID) ((ID>=HMI_DYN_W_CUBE_MAX_ID)&&(ID<HMI_DYN_H_CUBE_MAX_ID))  #define HMI_DYN_BUMP_CUBE_MAX_ID HMI_DYN_H_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_BUMP_CUBE(ID) ((ID>=HMI_DYN_H_CUBE_MAX_ID)&&(ID<HMI_DYN_BUMP_CUBE_MAX_ID))  #define HMI_DYN_ANGEL_CUBE_MAX_ID HMI_DYN_BUMP_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_ANGEL_CUBE(ID) ((ID>=HMI_DYN_BUMP_CUBE_MAX_ID)&&(ID<HMI_DYN_ANGEL_CUBE_MAX_ID))  #define HMI_DYN_PRI_AXIS_CUBE_MAX_ID HMI_DYN_ANGEL_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_PRI_AXIS_CUBE(ID) ((ID>=HMI_DYN_ANGEL_CUBE_MAX_ID)&&(ID<HMI_DYN_PRI_AXIS_CUBE_MAX_ID))  #define HMI_DYN_Z_CUBE_MAX_ID HMI_DYN_PRI_AXIS_CUBE_MAX_ID +HMI_DXY_CUBE_NUMBER #define HMI_IS_DYN_Z_CUBE(ID) ((ID>=HMI_DYN_PRI_AXIS_CUBE_MAX_ID)&&(ID<HMI_DYN_Z_CUBE_MAX_ID))   /*dxy Gfill property x,y,w,h range*/ #define HMI_IS_DYN_XY_CUBE_PROPERTY(ID) ((ID>=HMI_DYN_Z_GFILL_MAX_ID)&&(ID<HMI_DYN_Z_CUBE_MAX_ID)) #define HMI_DXY_CUBED_PRO2DXY_CUBE(ID) (ID+HMI_DYN_GFILL_MAX_ID)   /*Editable text dyn xy .scroll*/ #define HMI_EDIT_DXY_TEXT_SCROLL_MAX_ID HMI_DYN_Z_CUBE_MAX_ID +HMI_DYN_XY_EDIT_TEXTS_NUMBER #define HMI_IS_EDIT_DXY_TEXT_SCROLL(ID) ((ID>=HMI_DYN_Z_CUBE_MAX_ID)&&(ID<HMI_EDIT_DXY_TEXT_SCROLL_MAX_ID))  /*Editable text static xy.scroll*/ #define HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID HMI_EDIT_DXY_TEXT_SCROLL_MAX_ID+HMI_S_XY_EDIT_TEXTS_NUMBER #define HMI_IS_EDIT_SXY_TEXT_SCROLL(ID) ((ID>=HMI_EDIT_DXY_TEXT_SCROLL_MAX_ID)&&(ID<HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID))  /*Editable text scroll range*/ #define HMI_IS_EDITSCROLL_PROPERTY(ID) ((ID>=HMI_DYN_Z_CUBE_MAX_ID)&&(ID<HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID)) #define HMI_EDITSCROLL_PRO2EDITSCROLL(ID) (ID+HMI_DYN_BUTTON_SXY_MAX_ID)   /*element property x,y,w,h,alpha,angel*/  #define HMI_ELEMENT_PROPER_MAX_ID HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID #define HMI_IS_ELEMENT_PROPER(ID) ((ID>=HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID)&&(ID<HMI_ELEMENT_PROPER_MAX_ID))  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr fill ID*/ #define HMI_SXY_FILL_PAGES_MAX_ID HMI_ELEMENT_PROPER_MAX_ID +HMI_STATIC_FILL_PAGES_NUMBER #define HMI_IS_SXY_FILL_PAGES(ID) ((ID>=HMI_ELEMENT_PROPER_MAX_ID)&&(ID<HMI_SXY_FILL_PAGES_MAX_ID))  /*Static gridient fill ID*/ #define HMI_SXY_GFILL_PAGES_MAX_ID HMI_SXY_FILL_PAGES_MAX_ID+HMI_STATIC_GFILL_NUMBER #define HMI_IS_SXY_GFILL_PAGES(ID) ((ID>=HMI_SXY_FILL_PAGES_MAX_ID)&&(ID<HMI_SXY_GFILL_PAGES_MAX_ID)) /*Sxy CUBE*/ #define HMI_SXY_CUBE_MAX_ID HMI_SXY_GFILL_PAGES_MAX_ID +HMI_SXY_CUBE_NUMBER #define HMI_IS_SXY_CUBE(ID) ((ID>=HMI_SXY_GFILL_PAGES_MAX_ID)&&(ID<HMI_SXY_CUBE_MAX_ID))  /*Static image static x,y*/ #define HMI_S_XY_BITMAP_MAX_ID HMI_SXY_CUBE_MAX_ID +HMI_SXY_BITMAPS_NUMBER #define HMI_IS_S_XY_BITMAP(ID) ((ID>=HMI_SXY_CUBE_MAX_ID)&&(ID<HMI_S_XY_BITMAP_MAX_ID))  /*Static container static xy*/ #define HMI_CONTAINERS_SXY_MAX_ID HMI_S_XY_BITMAP_MAX_ID +HMI_SXY_CONTAINERS_NUMBER #define HMI_IS_CONTAINERS_SXY(ID) ((ID>=HMI_S_XY_BITMAP_MAX_ID)&&(ID<HMI_CONTAINERS_SXY_MAX_ID))   /*Language number*/ #define HMI_NB_LANGUAGE_MAX_ID HMI_CONTAINERS_SXY_MAX_ID +HMI_LANGUAGE_NUMBER #define HMI_IS_NB_LANGUAGE(ID) ((ID>=HMI_CONTAINERS_SXY_MAX_ID)&&(ID<HMI_NB_LANGUAGE_MAX_ID))  /*All dyn object ID*/ #define HMI_DYN_OBJECT_MAX_ID (HMI_DYN_Z_CUBE_MAX_ID)  /*Dyn element Max ID*/ #define HMI_ELEMENT_PROPERTY_END_ID (HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID)  /*Get element offset index*/ #define HMI_GET_PAGE_DXY_ID_INDEX(x) (x) #define HMI_GET_VPAGE_DXY_ID_INDEX(x) (x-(HMI_VIDEO_PAGE_DXY_MIN_ID)) #define HMI_GET_PAGE_SXY_ID_INDEX(x) (x-(HMI_PAGE_DXY_MAX_ID)) #define HMI_GET_VPAGE_SXY_ID_INDEX(x) (x-(HMI_VIDEO_PAGE_SXY_MIN_ID)) #define HMI_GET_DYN_IMAGELIST_DXY_ID_INDEX(x) (x-(HMI_PAGE_SXY_MAX_ID)) #define HMI_GET_DYN_IMAGELIST_SXY_ID_INDEX(x) (x-(HMI_DYN_IMAGELIST_DXY_MAX_ID)) #define HMI_GET_DYN_SCROLLBAR_DXY_ID_INDEX(x) (x-(HMI_DYN_IMAGELIST_SXY_MAX_ID)) #define HMI_GET_DYN_SCROLLBAR_SXY_ID_INDEX(x) (x-(HMI_DYN_SCROLLBAR_DXY_MAX_ID)) #define HMI_GET_DYN_BUTTON_DXY_ID_INDEX(x) (x-(HMI_DYN_SCROLLBAR_SXY_MAX_ID)) #define HMI_GET_DYN_BUTTON_SXY_ID_INDEX(x) (x-(HMI_DYN_BUTTON_DXY_MAX_ID)) #define HMI_GET_DYN_TEXTS_INDEX(x) (x-(HMI_DYN_BUTTON_SXY_MAX_ID)) /*x,y,w,h,color at dxy array and sxy array*/ #define HMI_GET_DYN_TEXTS_DXY_POS_INDEX(x) (x-(HMI_DYN_BUTTON_SXY_MAX_ID)) #define HMI_GET_DYN_TEXTS_SXY_POS_INDEX(x) (x-(HMI_DYN_TEXTS_DXY_MAX_ID)) /*dyn font at dxy array and sxy array*/ #define HMI_GET_DYN_TEXTS_DXY_DYN_FONT_POS_INDEX(x) (x-(HMI_DYN_BUTTON_SXY_MAX_ID)) #define HMI_GET_DYN_TEXTS_SXY_DYN_FONT_POS_INDEX(x) (x-(HMI_DYN_TEXTS_DXY_MAX_ID))  #define HMI_GET_DYN_CONTAINERS_ID_INDEX(x) (x-(HMI_DYN_TEXTS_MAX_ID)) #define HMI_GET_DYN_NFILL_INDEX(x) (x-(HMI_DYN_CONTAINERS_MAX_ID)) #define HMI_GET_DYN_GFILL_INDEX(x) (x-(HMI_DYN_NFILL_MAX_ID)) #define HMI_GET_DYN_CUBE_INDEX(x) (x-(HMI_DYN_GFILL_MAX_ID)) #define HMI_GET_DYN_LANGUAGE_INDEX(x) (x-(HMI_DYN_CUBE_MAX_ID)) #define HMI_GET_DYN_XY_CONTAINER_INDEX(x) (x-(HMI_DYN_LANGUAGE_MAX_ID)) #define HMI_GET_DYN_XY_BITMAP_INDEX(x) (x-(HMI_DYN_XY_CONTAINER_MAX_ID)) #define HMI_GET_UNEDIT_INDEX(x) (x-(HMI_DYN_XY_BITMAP_MAX_ID)) #define HMI_GET_STATIC_TEXT_ID_INDEX(x) HMI_GET_UNEDIT_INDEX(x) /*unedit dxy and unedit sxy x,y,w,h,color save two array HMI_Data/ HMI_Source/ HMI_Tool/  #define HMI_GET_DYN_XY_UNEDIT_POS_COLOR_INDEX(x) (x-(HMI_DYN_XY_BITMAP_MAX_ID)) #define HMI_GET_S_XY_UNEDIT_POS_COLOR_INDEX(x) (x-(HMI_UNEDIT_TEXT_DYN_XY_MAX_ID))  /*Dyn font for unedit dxy and unedit sxy . save two array HMI_Data/ HMI_Source/ HMI_Tool/  #define HMI_GET_DYN_XY_UNEDIT_DYN_FONT_INDEX(x) (x-(HMI_DYN_XY_BITMAP_MAX_ID)) #define HMI_GET_S_XY_UNEDIT_DYN_FONT_INDEX(x) (x-(HMI_UNEDIT_TEXT_DYN_XY_MAX_ID))  /*SEGMENT*/ #define HMI_GET_SEGMENT_INDEX(x) (x-(HMI_UNEDIT_TEXT_STATIC_XY_MAX_ID))  #define HMI_GET_DYN_X_CONTAINER_INDEX(x) (x-(HMI_SEGMENT_MAX_ID)) #define HMI_GET_DYN_Y_CONTAINER_INDEX(x) (x-(HMI_DYN_X_CONTAINER_MAX_ID)) #define HMI_GET_DYN_W_CONTAINER_INDEX(x) (x-(HMI_DYN_Y_CONTAINER_MAX_ID)) #define HMI_GET_DYN_H_CONTAINER_INDEX(x) (x-(HMI_DYN_W_CONTAINER_MAX_ID))  #define HMI_GET_DYN_X_BITMAPS_INDEX(x) (x-(HMI_DYN_H_CONTAINER_MAX_ID)) #define HMI_GET_DYN_Y_BITMAPS_INDEX(x) (x-(HMI_DYN_X_BITMAP_MAX_ID)) #define HMI_GET_DYN_W_BITMAPS_INDEX(x) (x-(HMI_DYN_Y_BITMAP_MAX_ID)) #define HMI_GET_DYN_H_BITMAPS_INDEX(x) (x-(HMI_DYN_W_BITMAP_MAX_ID)) #define HMI_GET_DYN_ALPHA_BITMAPS_INDEX(x) (x-(HMI_DYN_H_BITMAP_MAX_ID)) #define HMI_GET_DYN_ANGEL_BITMAPS_INDEX(x) (x-(HMI_DYN_ALPHA_BITMAP_MAX_ID)) #define HMI_GET_DYN_BLUR_BITMAPS_INDEX(x) (x-(HMI_DYN_ANGEL_BITMAP_MAX_ID)) #define HMI_GET_DYN_TRAIL_BITMAPS_INDEX(x) (x-(HMI_DYN_BLUR_BITMAP_MAX_ID))  #define HMI_GET_DYN_X_PAGES_INDEX(x) (x-(HMI_DYN_TRAIL_BITMAP_MAX_ID)) #define HMI_GET_DYN_Y_PAGES_INDEX(x) (x-(HMI_DYN_X_PAGES_MAX_ID)) #define HMI_GET_DYN_W_PAGES_INDEX(x) (x-(HMI_DYN_Y_PAGES_MAX_ID)) #define HMI_GET_DYN_H_PAGES_INDEX(x) (x-(HMI_DYN_W_PAGES_MAX_ID)) #define HMI_GET_DYN_ALPHA_PAGES_INDEX(x) (x-(HMI_DYN_H_PAGES_MAX_ID))  #define HMI_GET_DYN_X_IMAGELIST_INDEX(x) (x-(HMI_DYN_ALPHA_PAGES_MAX_ID)) #define HMI_GET_DYN_Y_IMAGELIST_INDEX(x) (x-(HMI_DYN_X_IMAGELIST_MAX_ID)) #define HMI_GET_DYN_W_IMAGELIST_INDEX(x) (x-(HMI_DYN_Y_IMAGELIST_MAX_ID)) #define HMI_GET_DYN_H_IMAGELIST_INDEX(x) (x-(HMI_DYN_W_IMAGELIST_MAX_ID)) #define HMI_GET_DYN_ALPHA_IMAGELIST_INDEX(x) (x-(HMI_DYN_H_IMAGELIST_MAX_ID))  #define HMI_GET_DYN_X_SCROLLBAR_INDEX(x) (x-(HMI_DYN_ALPHA_IMAGELIST_MAX_ID)) #define HMI_GET_DYN_Y_SCROLLBAR_INDEX(x) (x-(HMI_DYN_X_SCROLLBAR_MAX_ID)) #define HMI_GET_DYN_W_SCROLLBAR_INDEX(x) (x-(HMI_DYN_Y_SCROLLBAR_MAX_ID)) #define HMI_GET_DYN_H_SCROLLBAR_INDEX(x) (x-(HMI_DYN_W_SCROLLBAR_MAX_ID)) #define HMI_GET_DYN_ALPHA_SCROLLBAR_INDEX(x) (x-(HMI_DYN_H_SCROLLBAR_MAX_ID))  #define HMI_GET_DYN_X_BUTTON_INDEX(x) (x-(HMI_DYN_ALPHA_SCROLLBAR_MAX_ID)) #define HMI_GET_DYN_Y_BUTTON_INDEX(x) (x-(HMI_DYN_X_BUTTON_MAX_ID)) #define HMI_GET_DYN_W_BUTTON_INDEX(x) (x-(HMI_DYN_Y_BUTTON_MAX_ID)) #define HMI_GET_DYN_H_BUTTON_INDEX(x) (x-(HMI_DYN_W_BUTTON_MAX_ID)) #define HMI_GET_DYN_ALPHA_BUTTON_INDEX(x) (x-(HMI_DYN_H_BUTTON_MAX_ID))  #define HMI_GET_DYN_X_STEXT_ID_INDEX(x) (x-(HMI_DYN_ALPHA_BUTTON_MAX_ID)) #define HMI_GET_DYN_Y_STEXT_ID_INDEX(x) (x-(HMI_DYN_X_UNEDIT_MAX_ID)) #define HMI_GET_DYN_W_STEXT_ID_INDEX(x) (x-(HMI_DYN_Y_UNEDIT_MAX_ID)) #define HMI_GET_DYN_H_STEXT_ID_INDEX(x) (x-(HMI_DYN_W_UNEDIT_MAX_ID)) #define HMI_GET_DYN_DCOLOR_STEXT_ID_INDEX(x) (x-(HMI_DYN_H_UNEDIT_MAX_ID))  #define HMI_GET_DYN_X_DTEXT_ID_INDEX(x) (x-(HMI_DYN_COLOR_UNEDIT_MAX_ID)) #define HMI_GET_DYN_Y_DTEXT_ID_INDEX(x) (x-(HMI_DYN_X_DTEXT_MAX_ID)) #define HMI_GET_DYN_W_DTEXT_ID_INDEX(x) (x-(HMI_DYN_Y_DTEXT_MAX_ID)) #define HMI_GET_DYN_H_DTEXT_ID_INDEX(x) (x-(HMI_DYN_W_DTEXT_MAX_ID)) #define HMI_GET_DYN_DCOLOR_DTEXT_ID_INDEX(x) (x-(HMI_DYN_H_DTEXT_MAX_ID))  #define HMI_GET_DYN_X_NFILL_ID_INDEX(x) (x-(HMI_DYN_DCOLOR_DTEXT_MAX_ID)) #define HMI_GET_DYN_Y_NFILL_ID_INDEX(x) (x-(HMI_DYN_X_NFILL_MAX_ID)) #define HMI_GET_DYN_W_NFILL_ID_INDEX(x) (x-(HMI_DYN_Y_NFILL_MAX_ID)) #define HMI_GET_DYN_H_NFILL_ID_INDEX(x) (x-(HMI_DYN_W_NFILL_MAX_ID)) #define HMI_GET_DYN_COLOR_NFILL_ID_INDEX(x) (x-(HMI_DYN_H_NFILL_MAX_ID)) #define HMI_GET_DYN_Z_NFILL_ID_INDEX(x) (x-(HMI_DYN_COLOR_NFILL_MAX_ID))  #define HMI_GET_DYN_X_GFILL_ID_INDEX(x) (x-(HMI_DYN_Z_NFILL_MAX_ID)) #define HMI_GET_DYN_Y_GFILL_ID_INDEX(x) (x-(HMI_DYN_X_GFILL_MAX_ID)) #define HMI_GET_DYN_W_GFILL_ID_INDEX(x) (x-(HMI_DYN_Y_GFILL_MAX_ID)) #define HMI_GET_DYN_H_GFILL_ID_INDEX(x) (x-(HMI_DYN_W_GFILL_MAX_ID)) #define HMI_GET_DYN_C1_GFILL_ID_INDEX(x) (x-(HMI_DYN_H_GFILL_MAX_ID)) #define HMI_GET_DYN_C2_GFILL_ID_INDEX(x) (x-(HMI_DYN_C1_GFILL_MAX_ID)) #define HMI_GET_DYN_Z_GFILL_ID_INDEX(x) (x-(HMI_DYN_C2_GFILL_MAX_ID))  #define HMI_GET_DYN_X_CUBE_ID_INDEX(x) (x-(HMI_DYN_Z_GFILL_MAX_ID)) #define HMI_GET_DYN_Y_CUBE_ID_INDEX(x) (x-(HMI_DYN_X_CUBE_MAX_ID)) #define HMI_GET_DYN_W_CUBE_ID_INDEX(x) (x-(HMI_DYN_Y_CUBE_MAX_ID)) #define HMI_GET_DYN_H_CUBE_ID_INDEX(x) (x-(HMI_DYN_W_CUBE_MAX_ID)) #define HMI_GET_DYN_BUMP_CUBE_ID_INDEX(x) (x-(HMI_DYN_H_CUBE_MAX_ID)) #define HMI_GET_DYN_ANGEL_CUBE_ID_INDEX(x) (x-(HMI_DYN_BUMP_CUBE_MAX_ID)) #define HMI_GET_DYN_PRI_AXIS_CUBE_ID_INDEX(x) (x-(HMI_DYN_ANGEL_CUBE_MAX_ID)) #define HMI_GET_DYN_Z_CUBE_ID_INDEX(x) (x-(HMI_DYN_PRI_AXIS_CUBE_MAX_ID))    #define HMI_GET_DYN_TEXT_DXY_SCROLL_ID_INDEX(x) (x-(HMI_DYN_Z_CUBE_MAX_ID)) #define HMI_GET_DYN_TEXT_SXY_SCROLL_ID_INDEX(x) (x-(HMI_EDIT_DXY_TEXT_SCROLL_MAX_ID)) /*Edit text scroll*/ #define HMI_GET_SCROLL_TEXT_ID_INDEX(ID) (ID-(HMI_DYN_Z_CUBE_MAX_ID))  /*Get static fill*/ #define HMI_GET_SXY_FILL_PAGES_ID_INDEX(x) (x-(HMI_EDIT_SXY_TEXT_SCROLL_MAX_ID)) #define HMI_GET_SXY_GFILL_PAGES_ID_INDEX(x) (x-(HMI_SXY_FILL_PAGES_MAX_ID)) /*Get cube sxy index*/ #define HMI_GET_SXY_CUBE_ID_INDEX(x) (x-(HMI_SXY_GFILL_PAGES_MAX_ID)) /*Get image sxy index*/ #define HMI_GET_SXY_BITMAPS_ID_INDEX(x) (x-(HMI_SXY_CUBE_MAX_ID)) /*Get static container sxy index*/ #define HMI_GET_CONTAINERS_SXY_ID_INDEX(x) (x-(HMI_S_XY_BITMAP_MAX_ID)) /*Get language index*/ #define HMI_GET_NB_LANGUAGE_ID_INDEX(x) (x-(HMI_CONTAINERS_SXY_MAX_ID))  /*Need review*/ #define HMI_GET_SCROLL_PROP_EDIT_TEXT_ID_INDEX(x) (x-(HMI_DYN_BUTTON_SXY_MAX_ID))  /*EVENT ACTION*/ //#define HMI_EVENT_ACT_OFFSET_INDEX /*absolute*/ (HMI_CONTAINERS_SXY_MAX_ID+HMI_LANGUAGE_NUMBER) #define HMI_EVENT_ACT_BEGIN_INDEX /*absolute*/ hmi_event_act_begin_index/*(HMI_CONTAINERS_SXY_MAX_ID+HMI_LANGUAGE_NUMBER)*/ #define HMI_EVENT_MAX_ID HMI_EVENT_ACT_BEGIN_INDEX+HMI_ALL_EVENT_NUMBER #define IS_EVENT(ID) ((ID>=HMI_EVENT_ACT_BEGIN_INDEX)&&(ID<HMI_EVENT_MAX_ID)) #define HMI_ACTION_GROUP_MAX_ID /*absolute*/ HMI_EVENT_MAX_ID+HMI_ACTION_GROUP_NUMBER #define HMI_ACTION_MAX_ID /*absolute*/ HMI_ACTION_GROUP_MAX_ID+HMI_ALL_ACTION_NUMBER #define IS_GROUP(ID) ((ID>=HMI_EVENT_MAX_ID)&&(ID<HMI_ACTION_GROUP_MAX_ID))  #define HMI_GET_EVENT_ID_INDEX(x) (x-(HMI_EVENT_ACT_BEGIN_INDEX)) #define HMI_GET_ACTION_GROUP_ID_INDEX(x) (x-(HMI_EVENT_MAX_ID)) #define HMI_GET_ACTION_ID_INDEX(x) /*-absoulate*/ (x-(HMI_ACTION_GROUP_MAX_ID)) /*Max ID offset from action begin*/ #define HMI_EVENT_STAND_MAX_ID /*relative*/ HMI_EVENT_STAND_NUMBER #define HMI_EVENT_CUSTOM_MAX_ID /*relative*/ HMI_EVENT_STAND_MAX_ID+HMI_EVENT_CUSTOM_NUMBER  #define HMI_GET_EVENT_STAND_ID_INDEX(x) (x) #define HMI_GET_EVENT_CUSTOM_ID_INDEX(x) (x-(HMI_EVENT_STAND_MAX_ID)) /*Stand event*/ #define HMI_EVENT_STAND_RUN_MAX_ID /*relative*/ (HMI_EVENT_STAND_RUN_NUMBER)  #define HMI_EVENT_STAND_PROG_CTRL_MAX_ID /*relative*/ HMI_EVENT_STAND_RUN_MAX_ID+HMI_EVENT_PROG_CONTROL_NUMBER #define HMI_EVENT_STAND_PRESS_MAX_ID /*relative*/ HMI_EVENT_STAND_PROG_CTRL_MAX_ID+HMI_EVENT_STAND_PRESS_NUMBER #define HMI_EVENT_STAND_UP_MAX_ID /*relative*/ HMI_EVENT_STAND_PRESS_MAX_ID+HMI_EVENT_STAND_UP_NUMBER #define HMI_EVENT_STAND_LONG_PRESS_MAX_ID /*relative*/ HMI_EVENT_STAND_UP_MAX_ID+HMI_EVENT_STAND_LONG_PRESS_NUMBER #define HMI_EVENT_STAND_REPEAT_MAX_ID /*relative*/ HMI_EVENT_STAND_LONG_PRESS_MAX_ID+HMI_EVENT_REPEAT_NUMBER #define HMI_EVENT_STAND_PAGE_ON_MAX_ID /*relative*/ HMI_EVENT_STAND_REPEAT_MAX_ID+HMI_EVENT_PAGE_ON_NUMBER #define HMI_EVENT_STAND_PAGE_OFF_MAX_ID /*relative*/ HMI_EVENT_STAND_PAGE_ON_MAX_ID+HMI_EVENT_PAGE_OFF_NUMBER /*Timer and set action*/ #define HMI_EVENT_TIMER_OFFSET_INDEX /*absolute*/ HMI_ACTION_GROUP_MAX_ID #define HMI_TIMER_ACTION_ABS_MAX_ID /*absolute*/ HMI_ACTION_GROUP_MAX_ID+HMI_TIMER_ACTION_NUMBER   #define HMI_TIMER_ACTION_MAX_ID /*relative*/ HMI_TIMER_ACTION_NUMBER  #define HMI_SET_ACTION_MAX_ID /*relative*/ HMI_TIMER_ACTION_MAX_ID +HMI_SET_ACTION_NUMBER  #define HMI_GET_TIMER_ACTION_ID_INDEX(x) (x) #define HMI_GET_SET_ACTION_ID_INDEX(x) /*-relative*/ (x-(HMI_TIMER_ACTION_MAX_ID)) /*Timer repeat,one time,duration,dyn duration*/ #define HMI_TIMER_ACTION_BEGIN_INDEX /*absolute*/ HMI_ACTION_GROUP_MAX_ID #define HMI_TIMER_ACTION_REPEAT_MAX_ID /*relative*/ HMI_TIMER_ACTION_REPEAT_NUMBER #define HMI_IS_TIMER_ACTION_REPEAT(ID) ((ID>=HMI_TIMER_ACTION_BEGIN_INDEX)&&(ID<HMI_TIMER_ACTION_REPEAT_MAX_ID))  #define HMI_TIMER_ACTION_ONETIME_MAX_ID /*relative*/ HMI_TIMER_ACTION_REPEAT_MAX_ID+HMI_TIMER_ACTION_ONETIME_NUMBER #define HMI_IS_TIMER_ACTION_ONETIME(ID) ((ID>=HMI_TIMER_ACTION_REPEAT_MAX_ID)&&(ID<HMI_TIMER_ACTION_ONETIME_MAX_ID))  #define HMI_TIMER_ACTION_DURATION_MAX_ID /*relative*/ HMI_TIMER_ACTION_ONETIME_MAX_ID+HMI_TIMER_ACTION_DURATION_NUMBER #define HMI_TIMER_ACTION_S_DURATION_MAX_ID /*relative*/ HMI_TIMER_ACTION_ONETIME_MAX_ID+HMI_S_TIMER_ACTION_DURATION_NUMBER #define HMI_TIMER_ACTION_D_DURATION_MAX_ID /*relative*/ HMI_TIMER_ACTION_S_DURATION_MAX_ID+HMI_DYN_TIMER_ACTION_DURATION_NUMBER #define HMI_IS_TIMER_ACTION_S_DURATION(ID) /*relative*/ ((ID>=HMI_TIMER_ACTION_ONETIME_MAX_ID)&&(ID<HMI_TIMER_ACTION_S_DURATION_MAX_ID)) #define HMI_IS_TIMER_ACTION_D_DURATION(ID) /*relative*/ ((ID>=HMI_TIMER_ACTION_S_DURATION_MAX_ID)&&(ID<HMI_TIMER_ACTION_D_DURATION_MAX_ID)) #define HMI_IS_TIMER_ACTION_DURATION(ID) ((ID>=HMI_TIMER_ACTION_ONETIME_MAX_ID)&&(ID<HMI_TIMER_ACTION_D_DURATION_MAX_ID))  #define HMI_IS_TIMER_ACTION_S_DURATION_NO_OFFSET(ID) ((ID>=HMI_TIMER_ACTION_ONETIME_MAX_ID+HMI_TIMER_ACTION_BEGIN_INDEX)&&(HMI_TIMER_ACTION_S_DURATION_MAX_ID+HMI_TIMER_ACTION_BEGIN_INDEX)) #define HMI_IS_TIMER_ACTION_D_DURATION_NO_OFFSET(ID) ((ID>=HMI_TIMER_ACTION_S_DURATION_MAX_ID+HMI_TIMER_ACTION_BEGIN_INDEX)&&(ID<HMI_TIMER_ACTION_D_DURATION_MAX_ID+HMI_TIMER_ACTION_BEGIN_INDEX)) #define HMI_IS_TIMER_ACTION_DURATION_NO_OFFSET(ID) ((ID>=HMI_TIMER_ACTION_ONETIME_MAX_ID+HMI_TIMER_ACTION_BEGIN_INDEX)&&(ID<HMI_TIMER_ACTION_D_DURATION_MAX_ID+HMI_TIMER_ACTION_BEGIN_INDEX))   #define HMI_GET_TIMER_ACTION_REPEAT_ID_INDEX(x) (x) #define HMI_GET_TIMER_ACTION_ONETIME_ID_INDEX(x) (x-(HMI_TIMER_ACTION_REPEAT_MAX_ID)) #define HMI_GET_TIMER_ACTION_DURATION_ID_INDEX(x) (x-(HMI_TIMER_ACTION_ONETIME_MAX_ID)) #define HMI_GET_TIMER_ACTION_S_DURATION_ID_INDEX(x) (x-(HMI_TIMER_ACTION_ONETIME_MAX_ID)) #define HMI_GET_TIMER_ACTION_D_DURATION_ID_INDEX(x) (x-(HMI_TIMER_ACTION_S_DURATION_MAX_ID)) /*Set action*/  /*Set pos*/ //#define HMI_SET_ACT_OFFSET_INDEX HMI_EVENT_TIMER_OFFSET_INDEX+HMI_TIMER_ACTION_NUMBER #define HMI_SET_POS_BEGIN_INDEX /*absolute*/ HMI_TIMER_ACTION_BEGIN_INDEX+HMI_TIMER_ACTION_D_DURATION_MAX_ID/*timer offset is 0*/ #define HMI_SET_POS_MAX_ID /*absolute*/ HMI_SET_POS_BEGIN_INDEX+HMI_SET_POS_NUMBER #define HMI_SET_POS_NO_ANIM_MAX_ID /*absolute*/ HMI_SET_POS_BEGIN_INDEX+HMI_NO_ANIM_SET_POS_NUMBER  #define HMI_SET_POS_ANIM_SXY_MAX_ID /*absolute*/ HMI_SET_POS_NO_ANIM_MAX_ID+HMI_ANIM_STATIC_SET_POS_NUMBER #define HMI_GET_POS_ANIM_SXY_INDEX(ID)/*-absoulate*/ (ID-(HMI_SET_POS_NO_ANIM_MAX_ID)) #define HMI_IS_POS_ANIM_SXY_INDEX(ID) /*absoulate*/ ((ID>=HMI_SET_POS_NO_ANIM_MAX_ID)&&(ID<HMI_SET_POS_ANIM_SXY_MAX_ID))  #define HMI_SET_POS_ANIM_DXY_MAX_ID /*absolute*/ HMI_SET_POS_ANIM_SXY_MAX_ID+HMI_ANIM_DYN_SET_POS_NUMBER #define HMI_GET_POS_ANIM_DXY_INDEX(ID) /*-absolute*/ (ID-(HMI_SET_POS_ANIM_SXY_MAX_ID)) #define HMI_IS_POS_ANIM_DXY_INDEX(ID) /*absoluate*/ ((ID>=HMI_SET_POS_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_POS_ANIM_DXY_MAX_ID))  #define HMI_IS_ANIM_POS(ID) /*absoulate*/ ((ID>=HMI_SET_POS_NO_ANIM_MAX_ID)&&(ID<HMI_SET_POS_ANIM_DXY_MAX_ID)) /*Set delte pos*/  #define HMI_SET_DELTA_POS_MAX_ID /*absolute*/ HMI_SET_POS_ANIM_DXY_MAX_ID+HMI_SET_DELTA_POS_NUMBER /*Set w/h*/ #define HMI_SET_W_H_MAX_ID /*absolute*/ HMI_SET_DELTA_POS_MAX_ID+HMI_SET_W_H_NUMBER #define HMI_SET_W_H_NO_ANIM_MAX_ID /*absolute*/ HMI_SET_DELTA_POS_MAX_ID+HMI_SET_W_H_NO_ANIM_NUMBER #define HMI_SET_W_H_ANIM_SXY_MAX_ID /*absolute*/ HMI_SET_W_H_NO_ANIM_MAX_ID+HMI_ANIM_STATIC_SET_W_H_NUMBER #define HMI_GET_W_H_ANIM_SXY_INDEX(ID) /*absolute*/ (ID-(HMI_SET_W_H_NO_ANIM_MAX_ID)) #define HMI_IS_W_H_ANIM_SXY_INDEX(ID) /*absolute*/ ((ID>=HMI_SET_W_H_NO_ANIM_MAX_ID)&&(ID<HMI_SET_W_H_ANIM_SXY_MAX_ID))  #define HMI_SET_W_H_ANIM_DXY_MAX_ID /*absolute*/ HMI_SET_W_H_ANIM_SXY_MAX_ID+HMI_ANIM_DYN_SET_W_H_NUMBER #define HMI_IS_W_H_ANIM_DXY(ID) ((ID>=HMI_SET_W_H_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_W_H_ANIM_DXY_MAX_ID)) #define HMI_IS_W_H_ANIM(ID) /*absoulte*/ ((ID>=HMI_SET_W_H_NO_ANIM_MAX_ID)&&(ID<HMI_SET_W_H_ANIM_DXY_MAX_ID))  #define HMI_GET_W_H_ANIM_DXY_INDEX(ID) /*absoluate*/ (ID-(HMI_SET_W_H_ANIM_SXY_MAX_ID)) #define HMI_IS_W_H_ANIM_DXY_INDEX(ID) /*absoluate*/ ((ID>=HMI_SET_W_H_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_W_H_ANIM_DXY_MAX_ID))  /*Set delta w/h*/ #define HMI_SET_DELTA_W_H_MAX_ID /*absolute*/ HMI_SET_W_H_ANIM_DXY_MAX_ID+HMI_SET_DELTA_W_H_NUMBER /*Set dyn container*/ #define HMI_SET_DYN_CONTAINER_MAX_ID /*absolute*/ HMI_SET_DELTA_W_H_MAX_ID+HMI_SET_DYN_CONTAINER_NUMBER /*Set page on off*/ #define HMI_SET_PAGE_ON_OFF_MAX_ID /*absolute*/ HMI_SET_DYN_CONTAINER_MAX_ID+HMI_SET_PAGE_ON_OFF_NUMBER /*Set text string*/ #define HMI_SET_EDIT_TEXT_MAX_ID /*absolute*/ HMI_SET_PAGE_ON_OFF_MAX_ID+HMI_SET_EDIT_TEXT_NUMBER /*Set text scroll*/ #define HMI_SET_TEXT_SCROLL_STEP_MAX_ID /*absolute*/ HMI_SET_EDIT_TEXT_MAX_ID+HMI_SET_TEXT_SCROLL_STEP_NUMBER /*Set forecolor*/ #define HMI_SET_FOR_COLOR_MAX_ID /*absolute*/ HMI_SET_TEXT_SCROLL_STEP_MAX_ID+HMI_SET_FOR_COLOR_NUMBER #define HMI_SET_FOR_COLOR_NO_ANIM_MAX_ID /*absolute*/ HMI_SET_TEXT_SCROLL_STEP_MAX_ID+HMI_SET_FOR_COLOR_NO_ANIM_NUMBER #define HMI_SET_FOR_COLOR_ANIM_SXY_MAX_ID /*absolute*/ HMI_SET_FOR_COLOR_NO_ANIM_MAX_ID+HMI_ANIM_STATIC_SET_FOR_COLOR_NUMBER #define HMI_GET_FOR_COLOR_ANIM_SXY_INDEX(ID)/*absoulate*/(ID-(HMI_SET_FOR_COLOR_NO_ANIM_MAX_ID)) #define HMI_IS_FOR_COLOR_ANIM_SXY(ID) /*absoulate*/ ((ID>=HMI_SET_FOR_COLOR_NO_ANIM_MAX_ID)&&(ID<HMI_SET_FOR_COLOR_ANIM_SXY_MAX_ID))  #define HMI_SET_FOR_COLOR_ANIM_DXY_MAX_ID /*absolute*/ HMI_SET_FOR_COLOR_ANIM_SXY_MAX_ID+HMI_ANIM_DYN_SET_FOR_COLOR_NUMBER #define HMI_IS_FOR_COLOR_ANIM_DXY(ID) /*absoulate*/ ((ID>=HMI_SET_FOR_COLOR_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_FOR_COLOR_ANIM_DXY_MAX_ID)) #define HMI_IS_FOR_COLOR_ANIM(ID) /*absoulate*/ ((ID>=HMI_SET_FOR_COLOR_NO_ANIM_MAX_ID)&&(ID<HMI_SET_FOR_COLOR_ANIM_DXY_MAX_ID))  #define HMI_GET_FOR_COLOR_ANIM_DXY_INDEX(ID)/*absoulate*/(ID-(HMI_SET_FOR_COLOR_ANIM_SXY_MAX_ID))  /*Set background color*/ #define HMI_SET_BCK_COLOR_MAX_ID /*absolute*/ HMI_SET_FOR_COLOR_ANIM_DXY_MAX_ID+HMI_SET_BCK_COLOR_NUMBER /*Set send event*/ #define HMI_SET_SEND_EVENT_MAX_ID /*absolute*/ HMI_SET_BCK_COLOR_MAX_ID+HMI_SET_SEND_EVENT_NUMBER /*Set call function*/ #define HMI_SET_CALL_FUNC_MAX_ID /*absolute*/ HMI_SET_SEND_EVENT_MAX_ID+HMI_SET_CALL_FUNC_NUMBER /*Set imagelist*/ #define HMI_SET_IMAGELIST_INDEX_MAX_ID /*absolute*/ HMI_SET_CALL_FUNC_MAX_ID+HMI_SET_IMAGELIST_INDEX_NUMBER #define HMI_SET_IMAGELIST_INDEX_NO_ANIM_MAX_ID /*absolute*/ HMI_SET_CALL_FUNC_MAX_ID+HMI_SET_IMAGELIST_INDEX_NO_ANIM_NUMBER #define HMI_SET_IMAGELIST_INDEX_ANIM_SXY_MAX_ID /*absolute*/ HMI_SET_IMAGELIST_INDEX_NO_ANIM_MAX_ID+HMI_ANIM_STATIC_SET_IMAGELIST_INDEX_NUMBER #define HMI_SET_IMAGELIST_INDEX_ANIM_DXY_MAX_ID /*absolute*/ HMI_SET_IMAGELIST_INDEX_ANIM_SXY_MAX_ID+HMI_ANIM_DYN_SET_IMAGELIST_INDEX_NUMBER #define HMI_IS_IMAGELIST_INDEX_ANIM_DXY(ID)/*absoulate*/ ((ID>=HMI_SET_IMAGELIST_INDEX_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_IMAGELIST_INDEX_ANIM_DXY_MAX_ID)) #define HMI_IS_IMAGELIST_INDEX_ANIM_SXY(ID)/*absoulate*/ ((ID>=HMI_SET_IMAGELIST_INDEX_NO_ANIM_MAX_ID)&&(ID<HMI_SET_IMAGELIST_INDEX_ANIM_SXY_MAX_ID)) #define HMI_IS_IMAGELIST_INDEX_ANIM(ID) /*absoulate*/ ((ID>=HMI_SET_IMAGELIST_INDEX_NO_ANIM_MAX_ID)&&(ID<HMI_SET_IMAGELIST_INDEX_ANIM_DXY_MAX_ID))  #define HMI_GET_IMAGELIST_INDEX_ANIM_SXY(ID)/*absoulate*/(ID-(HMI_SET_IMAGELIST_INDEX_NO_ANIM_MAX_ID)) #define HMI_GET_IMAGELIST_INDEX_ANIM_DXY(ID)/*absoulate*/(ID-(HMI_SET_IMAGELIST_INDEX_ANIM_SXY_MAX_ID))  /*Set scroll bar*/ #define HMI_SET_SCROLLBAR_RANGE_MAX_ID /*absolute*/ HMI_SET_IMAGELIST_INDEX_ANIM_DXY_MAX_ID+HMI_SET_SCROLLBAR_RANGE_NUMBER /*Set button*/ #define HMI_SET_BUTTON_STATUS_MAX_ID /*absolute*/ HMI_SET_SCROLLBAR_RANGE_MAX_ID+HMI_SET_BUTTON_STATUS_NUMBER /*Set alpha*/ #define HMI_SET_ALPHA_INDEX_MAX_ID /*absolute*/ HMI_SET_BUTTON_STATUS_MAX_ID+HMI_SET_ALPHA_NUMBER #define HMI_SET_ALPHA_INDEX_NO_ANIM_MAX_ID /*absolute*/ HMI_SET_BUTTON_STATUS_MAX_ID+HMI_SET_ALPHA_NO_ANIM_NUMBER #define HMI_SET_ALPHA_INDEX_ANIM_SXY_MAX_ID /*absolute*/ HMI_SET_ALPHA_INDEX_NO_ANIM_MAX_ID+HMI_ANIM_STATIC_SET_ALPHA_NUMBER #define HMI_GET_ALPHA_INDEX_ANIM_SXY(ID) /*absoulate*/(ID-(HMI_SET_ALPHA_INDEX_NO_ANIM_MAX_ID)) #define HMI_IS_ALPHA_INDEX_ANIM_SXY(ID) /*absoulate*/ ((ID>=HMI_SET_ALPHA_INDEX_NO_ANIM_MAX_ID)&&(HMI_SET_ALPHA_INDEX_ANIM_SXY_MAX_ID))  #define HMI_SET_ALPHA_INDEX_ANIM_DXY_MAX_ID /*absolute*/ HMI_SET_ALPHA_INDEX_ANIM_SXY_MAX_ID+HMI_ANIM_DYN_SET_ALPHA_NUMBER #define HMI_GET_ALPHA_INDEX_ANIM_DXY(ID)/*absoulate*/ (ID-(HMI_SET_ALPHA_INDEX_ANIM_SXY_MAX_ID))  #define HMI_IS_ALPHA_INDEX_ANIM_DXY(ID) /*absoulate*/ ((ID>=HMI_SET_ALPHA_INDEX_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_ALPHA_INDEX_ANIM_DXY_MAX_ID)) #define HMI_IS_ALPHA_INDEX_ANIM(ID) /*absoulate*/ ((ID>=HMI_SET_ALPHA_INDEX_NO_ANIM_MAX_ID)&&(ID<HMI_SET_ALPHA_INDEX_ANIM_DXY_MAX_ID))  /*Set angel*/ #define HMI_SET_ANGEL_INDEX_MAX_ID /*absolute*/ HMI_SET_ALPHA_INDEX_ANIM_DXY_MAX_ID+HMI_SET_ANGEL_NUMBER #define HMI_SET_ANGEL_INDEX_NO_ANIM_MAX_ID /*absolute*/ HMI_SET_ALPHA_INDEX_ANIM_DXY_MAX_ID+HMI_SET_ANGEL_NO_ANIM_NUMBER #define HMI_SET_ANGEL_INDEX_ANIM_SXY_MAX_ID /*absolute*/ HMI_SET_ANGEL_INDEX_NO_ANIM_MAX_ID+HMI_ANIM_STATIC_SET_ANGEL_NUMBER #define HMI_SET_ANGEL_INDEX_ANIM_DXY_MAX_ID /*absolute*/ HMI_SET_ANGEL_INDEX_ANIM_SXY_MAX_ID+HMI_ANIM_DYN_SET_ANGEL_NUMBER #define HMI_GET_ANGEL_INDEX_ANIM_SXY(ID)/*absoulate*/ (ID-(HMI_SET_ANGEL_INDEX_NO_ANIM_MAX_ID)) #define HMI_IS_ANGEL_INDEX_ANIM_SXY(ID) /*absoulate*/ ((ID>=HMI_SET_ANGEL_INDEX_NO_ANIM_MAX_ID)&&(ID<HMI_SET_ANGEL_INDEX_ANIM_SXY_MAX_ID))  #define HMI_IS_ANGEL_INDEX_ANIM_DXY(ID) /*absoulate*/ ((ID>=HMI_SET_ANGEL_INDEX_ANIM_SXY_MAX_ID)&&(ID<HMI_SET_ANGEL_INDEX_ANIM_DXY_MAX_ID)) #define HMI_IS_ANGEL_INDEX_ANIM(ID) /*absoulate*/ ((ID>=HMI_SET_ANGEL_INDEX_NO_ANIM_MAX_ID)&&(ID<HMI_SET_ANGEL_INDEX_ANIM_DXY_MAX_ID)) #define HMI_GET_ANGEL_INDEX_ANIM_DXY(ID)/*absoulate*/ (ID-(HMI_SET_ANGEL_INDEX_ANIM_SXY_MAX_ID))  /*Dyn timer start and end*/ #define HMI_DYN_TIMER_START_MAX_ID /*absolute*/ HMI_SET_ANGEL_INDEX_MAX_ID+HMI_DYN_TIMER_ACTION_DURATION_NUMBER #define HMI_IS_DYN_TIMER_START(ID) ((ID>=HMI_SET_ANGEL_INDEX_MAX_ID)&&(ID<HMI_DYN_TIMER_START_MAX_ID))  #define HMI_DYN_TIMER_END_MAX_ID /*absolute*/ HMI_DYN_TIMER_START_MAX_ID+HMI_DYN_TIMER_ACTION_DURATION_NUMBER #define HMI_IS_DYN_TIMER_END(ID) ((ID>=HMI_DYN_TIMER_START_MAX_ID)&&(ID<HMI_DYN_TIMER_END_MAX_ID)) #define HMI_IS_DYN_TIMER_S_E(ID) ((ID>=HMI_SET_ANGEL_INDEX_MAX_ID)&&(ID<HMI_DYN_TIMER_END_MAX_ID)) //#define HMI_IS_DYN_TIMER_S_E_NO_OFFSET(ID) ?? ((ID>=HMI_SET_ANGEL_INDEX_MAX_ID+HMI_SET_POS_BEGIN_INDEX)&&(ID<HMI_DYN_TIMER_END_MAX_ID+HMI_SET_POS_BEGIN_INDEX)) #define HMI_GET_DYN_TIMER_S_E_INDEX(ID) (ID-(HMI_SET_POS_BEGIN_INDEX))  #define HMI_GET_DYN_TIMER_S_INDEX(ID) (ID-(HMI_SET_ANGEL_INDEX_MAX_ID)) #define HMI_GET_DYN_TIMER_E_INDEX(ID) (ID-(HMI_DYN_TIMER_START_MAX_ID))  /*Dyn set action start and end*/ /*Position*/ #define HMI_DYN_POS_START_BEGIN /*absolute*/ (HMI_DYN_TIMER_END_MAX_ID)  #define HMI_DYN_POS_START_MAX_ID /*absolute*/ HMI_DYN_POS_START_BEGIN+HMI_ANIM_DYN_SET_POS_NUMBER #define HMI_IS_DYN_POS_START(ID) ((ID>=HMI_DYN_POS_START_BEGIN)&&(ID<HMI_DYN_POS_START_MAX_ID)) #define HMI_GET_DYN_POS_START(ID) (ID-(HMI_DYN_POS_START_BEGIN))  #define HMI_DYN_POS_END_MAX_ID /*absolute*/ HMI_DYN_POS_START_MAX_ID+HMI_ANIM_DYN_SET_POS_NUMBER #define HMI_IS_DYN_POS_END(ID) ((ID>=HMI_DYN_POS_START_MAX_ID)&&(ID<HMI_DYN_POS_END_MAX_ID)) #define HMI_IS_DYN_POS_S_E(ID) ((ID>=HMI_DYN_POS_START_BEGIN)&&(ID<HMI_DYN_POS_END_MAX_ID)) //#define HMI_IS_DYN_POS_S_E_NO_OFFSET(ID) ((ID>=HMI_DYN_POS_START_BEGIN)&&(ID<HMI_DYN_POS_END_MAX_ID))  #define HMI_GET_DYN_POS_END(ID) (ID-(HMI_DYN_POS_START_MAX_ID))  /*Width,heigh*/ #define HMI_DYN_WH_START_MAX_ID /*absolute*/ HMI_DYN_POS_END_MAX_ID+HMI_ANIM_DYN_SET_W_H_NUMBER #define HMI_IS_DYN_WH_START(ID) ((ID>=HMI_DYN_POS_END_MAX_ID)&&(ID<HMI_DYN_WH_START_MAX_ID)) #define HMI_GET_DYN_WH_START(ID) (ID-(HMI_DYN_POS_END_MAX_ID))   #define HMI_DYN_WH_END_MAX_ID /*absolute*/ HMI_DYN_WH_START_MAX_ID+HMI_ANIM_DYN_SET_W_H_NUMBER #define HMI_IS_DYN_WH_END(ID) ((ID>=HMI_DYN_WH_START_MAX_ID)&&(ID<HMI_DYN_WH_END_MAX_ID)) #define HMI_GET_DYN_WH_END(ID) (ID-(HMI_DYN_WH_START_MAX_ID)) #define HMI_IS_DYN_WH_S_E(ID) ((ID>=HMI_DYN_POS_END_MAX_ID)&&(ID<HMI_DYN_WH_END_MAX_ID))  /*Fore color*/ #define HMI_DYN_FCOLOR_START_MAX_ID /*absolute*/ HMI_DYN_WH_END_MAX_ID+HMI_ANIM_DYN_SET_FOR_COLOR_NUMBER #define HMI_IS_DYN_FCOLOR_START(ID) ((ID>=HMI_DYN_WH_END_MAX_ID)&&(ID<HMI_DYN_FCOLOR_START_MAX_ID)) #define HMI_GET_DYN_FCOLOR_START(ID) (ID-(HMI_DYN_WH_END_MAX_ID))  #define HMI_DYN_FCOLOR_END_MAX_ID /*absolute*/ HMI_DYN_FCOLOR_START_MAX_ID+HMI_ANIM_DYN_SET_FOR_COLOR_NUMBER #define HMI_IS_DYN_FCOLOR_END(ID) ((ID>=HMI_DYN_FCOLOR_START_MAX_ID)&&(ID<HMI_DYN_FCOLOR_END_MAX_ID)) #define HMI_GET_DYN_FCOLOR_END(ID) (ID-(HMI_DYN_FCOLOR_START_MAX_ID)) #define HMI_IS_DYN_FCOLOR_S_E(ID) ((ID>=HMI_DYN_WH_END_MAX_ID)&&(ID<HMI_DYN_FCOLOR_END_MAX_ID))  /*ImageList index*/ #define HMI_DYN_IMGLST_START_MAX_ID /*absolute*/ HMI_DYN_FCOLOR_END_MAX_ID+HMI_ANIM_DYN_SET_IMAGELIST_INDEX_NUMBER #define HMI_IS_DYN_IMGLST_START(ID) ((ID>=HMI_DYN_FCOLOR_END_MAX_ID)&&(ID<HMI_DYN_IMGLST_START_MAX_ID)) #define HMI_GET_DYN_IMGLST_START(ID) (ID-(HMI_DYN_FCOLOR_END_MAX_ID))  #define HMI_DYN_IMGLST_END_MAX_ID /*absolute*/ HMI_DYN_IMGLST_START_MAX_ID+HMI_ANIM_DYN_SET_IMAGELIST_INDEX_NUMBER #define HMI_IS_DYN_IMGLST_END(ID) ((ID>=HMI_DYN_IMGLST_START_MAX_ID)&&(ID<HMI_DYN_IMGLST_END_MAX_ID)) #define HMI_GET_DYN_IMGLST_END(ID) (ID-(HMI_DYN_IMGLST_START_MAX_ID)) #define HMI_IS_DYN_IMGLST_S_E(ID) ((ID>=HMI_DYN_FCOLOR_END_MAX_ID)&&(ID<HMI_DYN_IMGLST_END_MAX_ID))  /*Alpha*/ #define HMI_DYN_ALPHA_START_MAX_ID /*absolute*/ HMI_DYN_IMGLST_END_MAX_ID+HMI_ANIM_DYN_SET_ALPHA_NUMBER #define HMI_IS_DYN_ALPHA_START(ID) ((ID>=HMI_DYN_IMGLST_END_MAX_ID)&&(ID<HMI_DYN_ALPHA_START_MAX_ID)) #define HMI_GET_DYN_ALPHA_START(ID) (ID-(HMI_DYN_IMGLST_END_MAX_ID))  #define HMI_DYN_ALPHA_END_MAX_ID /*absolute*/ HMI_DYN_ALPHA_START_MAX_ID+HMI_ANIM_DYN_SET_ALPHA_NUMBER #define HMI_IS_DYN_ALPHA_END(ID) ((ID>=HMI_DYN_ALPHA_START_MAX_ID)&&(ID<HMI_DYN_ALPHA_END_MAX_ID)) #define HMI_GET_DYN_ALPHA_END(ID) (ID-(HMI_DYN_ALPHA_START_MAX_ID)) #define HMI_IS_DYN_ALPHA_S_E(ID) ((ID>=HMI_DYN_IMGLST_END_MAX_ID)&&(ID<HMI_DYN_ALPHA_END_MAX_ID))  /*Angel*/ #define HMI_DYN_ANGEL_START_MAX_ID /*absolute*/ HMI_DYN_ALPHA_END_MAX_ID+HMI_ANIM_DYN_SET_ANGEL_NUMBER #define HMI_IS_DYN_ANGEL_START(ID) ((ID>=HMI_DYN_ALPHA_END_MAX_ID)&&(ID<HMI_DYN_ANGEL_START_MAX_ID)) #define HMI_GET_DYN_ANGEL_START(ID) (ID-(HMI_DYN_ALPHA_END_MAX_ID))  #define HMI_DYN_ANGEL_END_MAX_ID /*absolute*/ HMI_DYN_ANGEL_START_MAX_ID+HMI_ANIM_DYN_SET_ANGEL_NUMBER #define HMI_IS_DYN_ANGEL_END(ID) ((ID>=HMI_DYN_ANGEL_START_MAX_ID)&&(ID<HMI_DYN_ANGEL_END_MAX_ID)) #define HMI_GET_DYN_ANGEL_END(ID) (ID-(HMI_DYN_ANGEL_START_MAX_ID)) #define HMI_IS_DYN_ANGEL_S_E(ID) ((ID>=HMI_DYN_ALPHA_END_MAX_ID)&&(ID<HMI_DYN_ANGEL_END_MAX_ID))   /*Get element index */ /*Set pos*/  #define HMI_GET_SET_POS_NO_ANIM_ID_INDEX(x) (x-(HMI_SET_POS_BEGIN_INDEX))  /*Set delta pos*/ #define HMI_GET_SET_DELTA_POS_ID_INDEX(x) (x-(HMI_SET_POS_MAX_ID)) /*Set w/h*/  #define HMI_GET_SET_W_H_NO_ANIM_ID_INDEX(x) (x-(HMI_SET_DELTA_POS_MAX_ID))  /*Set delte w/h*/ #define HMI_GET_SET_DELTA_W_H_ID_INDEX(x) (x-(HMI_SET_W_H_MAX_ID)) /*Set dyn container*/ #define HMI_GET_SET_DYN_CONTAINER_ID_INDEX(x) (x-(HMI_SET_DELTA_W_H_MAX_ID)) /*Set page on off*/ #define HMI_GET_SET_PAGE_ON_OFF_ID_INDEX(x) (x-(HMI_SET_DYN_CONTAINER_MAX_ID)) /*Set edit text*/ #define HMI_GET_SET_EDIT_TEXT_ID_INDEX(x) (x-(HMI_SET_PAGE_ON_OFF_MAX_ID)) /*Set text scroll step*/  #define HMI_GET_SET_TEXT_SCROLL_STEP_ID_INDEX(x) (x-(HMI_SET_EDIT_TEXT_MAX_ID)) /*Set forcolor*/ #define HMI_GET_SET_FOR_COLOR_NO_ANIM_ID_INDEX(x) (x-(HMI_SET_TEXT_SCROLL_STEP_MAX_ID))  /*Set bckcolor*/ #define HMI_GET_SET_BCK_COLOR_ID_INDEX(x) (x-(HMI_SET_FOR_COLOR_MAX_ID)) /*Send event*/ #define HMI_GET_SET_SEND_EVENT_ID_INDEX(x) (x-(HMI_SET_BCK_COLOR_MAX_ID)) /*Set call function*/ #define HMI_GET_SET_CALL_FUNC_ID_INDEX(x) (x-(HMI_SET_SEND_EVENT_MAX_ID)) /*Set imagelist*/ #define HMI_GET_SET_IMAGELIST_INDEX_NO_ANIM_ID_INDEX(x) (x-(HMI_SET_CALL_FUNC_MAX_ID))  /*Set scrollbar*/ #define HMI_GET_SET_SCROLLBAR_RANGE_ID_INDEX(x) (x-(HMI_SET_IMAGELIST_INDEX_MAX_ID)) /*Set button*/ #define HMI_GET_SET_BUTTON_STATUS_ID_INDEX(x) (x-(HMI_SET_SCROLLBAR_RANGE_MAX_ID)) /*Set alpha*/  #define HMI_GET_SET_ALPHA_NO_ANIM_ID_INDEX(x) (x-(HMI_SET_BUTTON_STATUS_MAX_ID))  /*Set angel*/  #define HMI_GET_SET_ANGEL_NO_ANIM_ID_INDEX(x) (x-(HMI_SET_ALPHA_INDEX_MAX_ID))  #define HMI_ALL_STATIC_CONTAINERS_NUMBER (HMI_SXY_CONTAINERS_NUMBER+HMI_DXY_CONTAINERS_NUMBER)   #define HMI_F32_TO_U32(F) (((F)* 65536.0f)) /*F is float*/ #define HMI_U32_TO_F32(F) ((float_32)(((INT32)(F))/65536.0f)) /*F is float*/  #define HMI_2U16_TO_U32(x,y) (x|(y<<16)) #define HMI_U32_HIG16(p) (p>>16) #define HMI_SINT16_MAX (0x7FFF) #define HMI_U16_MAX (0xFFFF)  #define HMI_ROT_IMAGE_TAIL_CW (0x01) #define HMI_ROT_IMAGE_TAIL_CCW (0x00)  typedef SINT16 HMI_Z_STR; #if HMI_ALL_OBJECT <= 255 typedef UINT8 HMI_OBJECT_ID_STR; #else typedef UINT16 HMI_OBJECT_ID_STR; #endif  #if HMI_MAX_WIDTH <= 255 typedef UINT16 HMI_WIDTH_STR; #else typedef UINT16 HMI_WIDTH_STR; #endif    #if HMI_MAX_HEIGHT <= 255 typedef UINT16 HMI_HEIGHT_STR; #else typedef UINT16 HMI_HEIGHT_STR; #endif  #ifdef HMI_GRAPHIC_TWLIB #if HMI_MAX_WIDTH <=127 typedef SINT8 HMI_X_STR; #else typedef SINT16 HMI_X_STR; #endif  #if HMI_MAX_HEIGHT <= 127 typedef SINT8 HMI_Y_STR; #else typedef SINT16 HMI_Y_STR; #endif  #else  #if HMI_MAX_WIDTH <=127 typedef SINT8 HMI_X_STR; #else typedef SINT16 HMI_X_STR; #endif  #if HMI_MAX_HEIGHT <= 127 typedef SINT8 HMI_Y_STR; #else typedef SINT16 HMI_Y_STR; #endif #endif   #if HMI_MAX_TEXT_LENGTH <= 255 typedef UINT8 HMI_TEXT_LENGTH_STR; #else typedef UINT16 HMI_TEXT_LENGTH_STR; #endif  typedef UINT8 HMI_RANGE_STR; typedef UINT8 HMI_IMAGE_LEN_STR;   #ifdef HMI_GRAPHIC_AGG #if (HMI_PIX_FORMAT >= HMI_RGB888) typedef UINT32_T HMI_OBJECT_DATA_STR; #elif((HMI_ALL_OBJECT <= 255) && \ (HMI_MAX_HEIGHT <= 255) && \ (HMI_MAX_WIDTH <= 255) && \ (HMI_PIX_FORMAT <= HMI_8BPP) && \ (HMI_SCROLL_TEXT_SUPPORT == 0 )) typedef UINT8 HMI_OBJECT_DATA_STR; #else typedef UINT16 HMI_OBJECT_DATA_STR; #endif #endif  #ifdef HMI_GRAPHIC_RGL typedef UINT32_T HMI_OBJECT_DATA_STR;/*Size equal float32*/ #endif  #ifdef HMI_GRAPHIC_GHC typedef UINT32_T HMI_OBJECT_DATA_STR;/*Size equal float32*/ #endif  #ifdef HMI_GRAPHIC_TWLIB typedef UINT32_T HMI_OBJECT_DATA_STR;/*Size equal float32*/ #endif  #ifdef HMI_GRAPHIC_ST7513 typedef UINT32_T HMI_OBJECT_DATA_STR;/*Size equal float32*/ #endif   #if(HMI_SCROLL_TEXT_SUPPORT == 0 ) #define HMI_CLEAR_SCROLL_OFFSET 0x7F #else #define HMI_CLEAR_SCROLL_OFFSET 0x7FFF #endif  #define HMI_PAGE_CHANGED_FLAG (0x01) #if HMI_PAGES_NUMBER <= 255 typedef UINT8 HMI_PAGE_ID_STR; #else typedef UINT16 HMI_PAGE_ID_STR; #endif  #if HMI_FONT_CODE==HMI_FONT_CODE_UNICODE typedef UINT16 HMI_CHAR_STR; #else typedef UINT8 HMI_CHAR_STR; #endif  #if (HMI_FONT_CODE==HMI_FONT_CODE_IBM) typedef UINT8 HMI_FONT_CHAR_STR; #else typedef UINT16 HMI_FONT_CHAR_STR; #endif  typedef UINT8 HMI_FILE_STR;  #if (HMI_ALL_OBJECT <= 255) typedef UINT8 HMI_DYN_BITMAP_DATA_STR; typedef UINT8 HMI_DYN_CONTAINER_DATA_STR; #else typedef UINT16 HMI_DYN_BITMAP_DATA_STR; typedef UINT16 HMI_DYN_CONTAINER_DATA_STR; #endif  typedef UINT8 HMI_FONT_ID_STR; #if defined(HMI_GRAPHIC_SOFT) #if HMI_PIX_FORMAT <= HMI_8BPP typedef UINT8 HMI_COLOR_STR; #elif HMI_PIX_FORMAT <= HMI_BGR565 typedef UINT32_T HMI_COLOR_STR; #elif HMI_PIX_FORMAT <= HMI_BGR888 typedef UINT32_T HMI_COLOR_STR; #else #error "Unsupported Color Depth \n" #endif #elif defined(HMI_GRAPHIC_TWLIB)  typedef UINT8 HMI_COLOR_STR;  #else #if HMI_PIX_FORMAT <= HMI_8BPP typedef UINT8 HMI_COLOR_STR; #elif HMI_PIX_FORMAT <= HMI_BGR555 typedef UINT16 HMI_COLOR_STR; #elif HMI_PIX_FORMAT <= HMI_ABGR888 typedef UINT32_T HMI_COLOR_STR; #else #error "Unsupported Color Depth \n" #endif #endif   typedef UINT8 HMI_ALPHA_STR;  #if HMI_PIX_FORMAT <= HMI_8BPP #define HMI_PIXEL_FORMAT 1 #define HMI_BMP_PIXEL_FORMAT 3 #elif (HMI_PIX_FORMAT <= HMI_BGR565) #define HMI_PIXEL_FORMAT 2  #define HMI_BMP_PIXEL_FORMAT 3  #elif (HMI_PIX_FORMAT <= HMI_BGR555) #define HMI_PIXEL_FORMAT 2  #define HMI_BMP_PIXEL_FORMAT 3  #elif (HMI_PIX_FORMAT <= HMI_BGR888) #define HMI_PIXEL_FORMAT 3 #define HMI_BMP_PIXEL_FORMAT 3 #else #error "Unsupported Color Depth \n" #endif   #ifdef HMI_GRAPHIC_RGL  typedef UINT8 HMI_CHAR_DATA_STR;  #endif  #ifdef HMI_GRAPHIC_ST7513  typedef UINT8 HMI_CHAR_DATA_STR;  typedef UINT8 HMI_BMP_DATA_STR; #endif   #ifdef HMI_GRAPHIC_RGL  typedef UINT8 HMI_BMP_DATA_STR; typedef UINT16 RLE_LEN_STR;/*Not used*/ typedef UINT8 JPG_STR; typedef UINT8 RLE_STR; #if 0 typedef struct { HMI_COLOR_STR color; RLE_LEN_STR len; }RLE_STR;  #endif #endif  typedef struct { HMI_X_STR x; HMI_Y_STR y; }HMI_ROTATION_STR;   typedef struct { HMI_X_STR x; HMI_Y_STR y; HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  }HMI_RECT_STR;  typedef struct { HMI_X_STR x; HMI_Y_STR y; HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  HMI_Z_STR z; }HMI_FILL_RECT_STR;   typedef struct { UINT8 video_fmt_channel;  }HMI_VIDEO_INFO_STR;   #if 0 typedef struct { HMI_X_STR x; HMI_Y_STR y; HMI_WIDTH_STR w; HMI_HEIGHT_STR h; UINT layer; }HMI_RECT_LAYER_STR; #endif  typedef struct { HMI_X_STR x; HMI_Y_STR y; }HMI_COORDINATE_STR;   typedef struct {  HMI_RECT_STR text_rect; HMI_COLOR_STR color; }HMI_TEXT_RECT_STR;  typedef struct {  HMI_X_STR x; HMI_Y_STR y; HMI_WIDTH_STR w; HMI_HEIGHT_STR h; #if (defined(HMI_GRAPHIC_STGLIB)||defined(HMI_GRAPHIC_AGG)|| \ defined(HMI_GRAPHIC_RGL)||defined(HMI_GRAPHIC_TWLIB))  UINT8 alpha; #endif  #if defined(HMI_GRAPHIC_ST7513)  #endif  }HMI_RECT_ALPHA_STR;    typedef struct {  HMI_X_STR x; HMI_Y_STR y; HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  #if (defined(HMI_GRAPHIC_STGLIB)||defined(HMI_GRAPHIC_AGG)|| \ defined(HMI_GRAPHIC_RGL))  UINT8 alpha; float_32 angel; #endif  #if defined(HMI_GRAPHIC_RGL) U08 attr;/*bit0:blur(HMI_BLUR_FLAG). bit1--bit7 reserved*/  #endif  #if defined(HMI_GRAPHIC_TWLIB)  U08 alpha; #endif #if defined(HMI_GRAPHIC_ST7513)   #endif }HMI_RECT_ALPHA_ANGEL_STR;   typedef struct { HMI_OBJECT_ID_STR object_id;  }HMI_OBJECT_PROP_STR;  typedef struct { UINT8 object_number; HMI_OBJECT_PROP_STR CONST *p_object_table; }HMI_OBJECT_TABLE_STR;  typedef struct { HMI_OBJECT_TABLE_STR container_object_table; }HMI_CONTAINER_STR;  typedef struct { BOOLEAN trail_en; HMI_OBJECT_ID_STR texture; //BOOLEAN cw;/*distance from user define point*/ float_32 begin_angel; float_32 end_angel; }HMI_ROTATION_TRAIL_STR;   typedef struct { UINT8 image_attr; }HMI_IMAGE_ATTR_STR;  typedef struct { UINT8 page_priority; /*UINT8 layer_id;*/ HMI_CONTAINER_STR container; }HMI_PAGE_TABLE_STR;  typedef struct { UINT32 page_bck_pallete_address; UINT32 page_icon_pallete_address; }HMI_PAGE_PALLETE_TABLE_STR;   typedef struct { HMI_PAGE_ID_STR old_page; HMI_PAGE_ID_STR new_page; }HMI_PRIOR_PAGE_STR; typedef struct { HMI_WIDTH_STR w; HMI_HEIGHT_STR h; UINT8 max_priority; #ifdef HMI_GRAPHIC_GHC #if HMI_PIX_FORMAT >= HMI_8BPP UINT8 pix_format; #endif #if HMI_ALL_LAYERS_NUMBER > 1 && HMI_PIX_FORMAT >= HMI_8BPP HMI_COORDINATE_STR hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml p_layer_coord; #endif #if HMI_PIX_FORMAT >= HMI_8BPP HMI_ALPHA_STR hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml p_alpha; #endif HMI_PRIOR_PAGE_STR hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml p_actived_page_id_table; #else #if HMI_PIX_FORMAT >= HMI_8BPP UINT8 pix_format; #endif #if HMI_ALL_LAYERS_NUMBER > 1 && HMI_PIX_FORMAT >= HMI_8BPP HMI_COORDINATE_STR hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml p_layer_coord; #endif #if HMI_PIX_FORMAT >= HMI_8BPP HMI_ALPHA_STR hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml p_alpha; #endif HMI_PRIOR_PAGE_STR hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml p_actived_page_id_table; #endif }HMI_LAYER_TABLE_STR;  typedef struct {  HMI_COLOR_STR color; }HMI_FILL_PAGE_STR;  typedef struct { HMI_COLOR_STR color1; HMI_COLOR_STR color2; UINT8 fill_type; }HMI_GRADIENT_FILL_STR;  typedef struct  { UINT8 properties;  UINT8 font_id;  HMI_TEXT_LENGTH_STR length; void *hmi_string; }HMI_TEXT_PROP_STR;   typedef enum { HMI_SET_START, HMI_SET_DURATION, HMI_SET_ELAPSE, /*HMI set number*/ HMI_SET_CNT }SET_TIMER_ENUM;   typedef struct { #ifdef HMI_GRAPHIC_RGL HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  UINT8 CONST *pbitmap_data; UINT32 data_len; #endif  #ifdef HMI_GRAPHIC_ST HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  UINT8 CONST *pbitmap_data; #endif  #ifdef HMI_GRAPHIC_ST7513 HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  UINT8 CONST *pbitmap_data; #endif   #ifdef HMI_GRAPHIC_TWLIB  HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  UINT32 pbitmap_data;/*start address in BIN File*/ #endif  #ifdef HMI_GRAPHIC_AGG UINT8 alpha; HMI_RECT_STR CONST *pbmp_file/*bitmap_data*/; HMI_RECT_STR CONST *palpha_file/*pmask_data*/;  #endif  }HMI_BITMAP_STR;/*hmi_colortrans_str*/  #ifdef HMI_GRAPHIC_TWLIB typedef struct {  HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  UINT32 pbitmap_data; HMI_X_STR x; HMI_Y_STR y; }HMI_PAGE_BITMAP_STR; #endif   typedef struct { HMI_IMAGE_LEN_STR list_len; HMI_BITMAP_STR file; }HMI_IMAGE_LIST_STR;  typedef struct { HMI_RANGE_STR cur_full; }HMI_SCROLL_BAR_FULL_STR;/*RAM*/  typedef struct { HMI_RANGE_STR min_range; HMI_RANGE_STR max_range; UINT8 property; /*HMI_BEGIN_USED,HMI_FULL_USED,CURVALUE_USED,EMPTY_USED,END_USED*/ HMI_BITMAP_STR file; }HMI_SCROLL_BAR_STR;  typedef struct { HMI_IMAGE_LIST_STR button_image;  }HMI_BUTTON_STR;   typedef struct { HMI_RECT_STR cube_rect; float_32 angel; BOOLEAN bump;/*bit0--bump*/ HMI_Z_STR z; float_32 private_angel;/*angel location axis*/ }HMI_CUBE_STR;    typedef struct { U08 attribute; /*bit0--bit1:side,bit2:3d model, bit4--bit7:preset1 or user Define*/ HMI_OBJECT_ID_STR private_axis; HMI_OBJECT_ID_STR public_axis1; HMI_OBJECT_ID_STR public_axis2; UINT8 CONST *p3dfile_data;/*3d file data*/ UINT32 data_len; }HMI_CUBE_AXIS_PROP;  typedef struct { HMI_RECT_ALPHA_ANGEL_STR tex_rect; HMI_BITMAP_STR tex_prop; HMI_IMAGE_ATTR_STR tex_attr; HMI_OBJECT_ID_STR tex_id; }HMI_CUBE_TEXTURE_PROP;  typedef struct { HMI_CUBE_TEXTURE_PROP cube_face1_texture; HMI_CUBE_TEXTURE_PROP cube_face2_texture; HMI_CUBE_TEXTURE_PROP cube_face3_texture; HMI_CUBE_TEXTURE_PROP cube_face4_texture; HMI_CUBE_TEXTURE_PROP cube_face5_texture; HMI_CUBE_TEXTURE_PROP cube_face6_texture; }HMI_CUBE_FACE_STR;  typedef struct { SINT8 x_soffset; SINT8 x_eoffset; SINT8 y_soffset; SINT8 owidth; UINT8 w; UINT8 h; #ifdef HMI_GRAPHIC_RGL HMI_CHAR_DATA_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml char_data; #endif #ifdef HMI_GRAPHIC_ST7513 HMI_CHAR_DATA_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml char_data; #endif  #ifdef HMI_GRAPHIC_AGG UINT32_T data_begin; UINT16 buf_size; #endif  }HMI_FONT_CHAR_PROP;  typedef struct { HMI_FONT_CHAR_STR ch_code; UINT8 attributes; HMI_FONT_CHAR_PROP CONST *p_char_config; }HMI_FONT_RANGE_STR;  typedef struct { HMI_FONT_CHAR_STR number_table; UINT8 h; HMI_FONT_RANGE_STR CONST *p_range_table; }HMI_FONT_STR;  typedef struct { HMI_FONT_CHAR_STR number_table; UINT8 h; HMI_FONT_RANGE_STR CONST *p_range_table; }HMI_TRUE_TYPE_FONT_STR;  /*Action and Event*/ typedef struct { UINT16 x; UINT16 y; }POINT_TP;  typedef struct { SINT16 x; SINT16 y; }SPOINT_TP;  typedef struct { SINT16 x; SINT16 y; SINT16 z; }S3POINT_TP;  typedef struct { float_32 x; float_32 y; float_32 z; }S3POINT_FLOAT_TP;  typedef struct { HMI_X_STR x; HMI_Y_STR y; HMI_WIDTH_STR w; HMI_HEIGHT_STR h;  #ifdef HMI_GRAPHIC_RGL UINT8 alpha; #endif }HMI_RECT_PAGE_STR;//lq added    typedef enum { HMI_ELEM_TYPE_SFILL, HMI_ELEM_TYPE_DFILL, HMI_ELEM_TYPE_SIMAGE, HMI_ELEM_TYPE_DIMAGE, HMI_ELEM_TYPE_SIMGLIST, HMI_ELEM_TYPE_DIMGLIST, HMI_ELEM_TYPE_SBTN, HMI_ELEM_TYPE_DBTN, HMI_ELEM_TYPE_SPAGE,/*8*/ HMI_ELEM_TYPE_DPAGE, HMI_ELEM_TYPE_SSCROLLBAR, HMI_ELEM_TYPE_DSCROLLBAR, HMI_ELEM_TYPE_DYN_CONTAINER, HMI_ELEM_TYPE_DXY_CONTINER, HMI_ELEM_TYPE_SXY_CONTAINER, /*COUNT*/ HMI_ELEM_TYPE_ELEMENT_TYPE_CNT }HMI_ELEMENT_TYPE;  extern UINT8 hmi_driver_woking_status_flag; extern CONST HMI_OBJECT_ID_STR hmi_event_act_begin_index;  void hmi_engine_init(void); #if HMI_PAGES_NUMBER>0 UINT8 hmi_engine_draw_page( #ifndef HMI_GRAPHIC_TWLIB HMI_RECT_STR *pdirty_zone #endif ); #endif  #if HMI_SET_ACTION_NUMBER>0 /*set action >0*/ HMI_OBJECT_ID_STR hmi_get_obj_pro_id(HMI_OBJECT_ID_STR hmi_object_id,UINT8 pro_order); #endif  #if HMI_ALL_DYN_OBJECTS_NUMBER > 0 void hmi_engine_set_object_info(HMI_OBJECT_ID_STR hmi_object_id,HMI_OBJECT_DATA_STR hmi_object_data); BOOLEAN hmi_engine_get_object_info(HMI_OBJECT_ID_STR hmi_object_id,HMI_OBJECT_DATA_STR* phmi_object_data); #if HMI_DYN_EDIT_TEXTS_NUMBER > 0 void hmi_engine_edit_text(HMI_OBJECT_ID_STR hmi_object_id,HMI_CHAR_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml phmi_dst_string); HMI_CHAR_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml hmi_engine_get_text(HMI_OBJECT_ID_STR hmi_object_id); #endif #endif  HMI_LAYER_TABLE_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml hmi_get_active_layer_table_sp(void);//lq HMI_PAGE_TABLE_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml hmi_get_fl_screen_def_SP(HMI_PAGE_ID_STR hmi_page_id);//lq UINT8 hmi_get_dyn_element_change_u8(HMI_PAGE_ID_STR hmi_page_id); void hmi_clr_dyn_element_change_u8(HMI_PAGE_ID_STR hmi_page_id); void hmi_set_l_gfx_mgr_rebuild_BOOL(BOOLEAN new_val); void hmi_set_data_address(void *p,U08 len); void hmi_get_data_address(U16 DataID); void hmi_set_arrar_address(void **p,U08 len); void hmi_get_arrar_address(U16 arrayID); void hmi_engine_create_rgl_window(void); #ifdef HMI_GRAPHIC_RGL #if (HMI_LOAD_SOURCE_MODE == HMI_LOAD_RES_ALL_INIT) void call_C_hmi_driver_load_all_file(void); #endif #if ((HMI_DXY_IMAGELIST_NUMBER+HMI_SXY_IMAGELIST_NUMBER+ \ HMI_DXY_SCROLLBAR_NUMBER+HMI_SXY_SCROLLBAR_NUMBER+ \ HMI_DXY_BUTTON_NUMBER+HMI_SXY_BUTTON_NUMBER+ \ HMI_DXY_BITMAPS_NUMBER+HMI_SXY_BITMAPS_NUMBER)>0)   void call_C_hmi_driver_load_file(HMI_CONTAINER_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml phmi_container_info); void call_C_hmi_driver_remove_load_file(HMI_CONTAINER_STR CONST hmi_action_engine.c hmi_action_engine.h hmi_all_struct_include.h HMI_Data hmi_driver_cfg.h hmi_engine.c hmi_engine.h hmi_engine_cfg.h hmi_loop.c hmi_loop.h hmi_loop_driver.c hmi_loop_driver.h hmi_reset.c hmi_reset.h hmi_rgl_driver.c hmi_rgl_driver.h HMI_Source hmi_status.c hmi_status.h hmi_system.h hmi_task_touchpanel.c hmi_task_touchpanel.h hmi_task_touchpanel_driver.c hmi_task_touchpanel_driver.h HMI_Tool hmi_user_interface.c hmi_user_interface.h QD_HMI.gpj zs12_main_project.xml zs12_project_page_0816_bginternal.xml zs12_project_page_0820_hmi.xml zs12_project_page_0823_release.xml zs12_project_page_0828.xml zs12_project_page_0830.xml zs12_project_page_0831_release.xml zs12_project_page_0904_release.xml zs12_project_page_0922_RELEASE.xml zs12_project_page_1016_RELEASE_v2.0.xml zs12_project_page_lyy 0808-FUNCBACK-INTERNAL.xml zs12_project_page_lyy 0808-test-rle-internal.xml zs12_project_page_XIAOSA_0808.xml phmi_container_info); #endif #endif  #if HMI_PAGES_NUMBER>0 HMI_OBJECT_ID_STR hmi_search_page(POINT_TP *press_point,BOOLEAN *phmi_is_button); #endif  #ifdef _cplusplus extern "C"{ #endif HMI_HEIGHT_STR hmi_get_layer_height(UINT8 layer); HMI_WIDTH_STR hmi_get_layer_width(UINT8 layer); #ifdef _cplusplus } #endif void call_C_hmi_driver_init(void); void hmi_add_dirty(HMI_RECT_STR *pnew,HMI_RECT_STR *pdirty_list,U08 depth); UINT8 hmi_engine_get_dirty_zone_page(HMI_RECT_STR *pdirty_zone); UINT8 hmi_engine_get_multi_dirty_zone_page(HMI_RECT_STR *pdirty_zone); void hmi_get_nextFrame(void); void hmi_access_layer_video_status(HMI_OBJECT_ID_STR hmi_page_id); #ifdef HMI_GRAPHIC_RGL void hmi_engine_draw_page_prop(void); #endif void hmi_copy_last_dirty_zone(HMI_RECT_STR dirty_bck[], HMI_RECT_STR dirty_free[], UINT8 layer); void hmi_add_2buffer_dirty_zone(HMI_RECT_STR pdirty_free[], HMI_RECT_STR *pdirty_bck, HMI_RECT_STR *pdirty_2buffer, UINT8 layer);  #undef EXTERN #endif
