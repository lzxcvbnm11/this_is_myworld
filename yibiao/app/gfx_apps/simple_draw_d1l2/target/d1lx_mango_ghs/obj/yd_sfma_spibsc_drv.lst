                                                                      Page 1
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
Command Line: C:\ghs\comp_201355\ease850.exe -w -elf -b0 -ID:\Renesas_Electronics\D1x_RGL\rgl_ghs_D1Lx_obj_V1.2.0\vlib\macro\flashc\sfma\lib -I../../../../../Device -I../../../../../Driver/ADCE -I../../../../../Driver/CLOCK -I../../../../../Driver/DIO -I../../../../../Driver/DSPI -I../../../../../Driver/Interrupt -I../../../../../Driver/ISM -I../../../../../Driver/OSTM -I../../../../../Driver/PWM -I../../../../../Driver/RSTC -I../../../../../Driver/RTCA -I../../../../../Driver/STBC -I../../../../../Driver/TAUB -I../../../../../Driver/WDT -I../../../../../middleware\ADM -I../../../../../middleware\BPM -I../../../../../middleware\EED -I../../../../../middleware\IOM -I../../../../../middleware\LRM -I../../../../../middleware\MOM -I../../../../../middleware\PWMM -I../../../../../Common -I../../../../../Applayer\DSM -I../../../../../Applayer\FM -I../../../../../Applayer\TPM -I../../../../../Applayer\ACC -I../../../../../Applayer\ASS -I../../../../../Applayer\BAT -I../../../../../Applayer\COM -I../../../../../Applayer\COM\vtp -I../../../../../Applayer\COM\vtp\lib -I../../../../../Applayer\CRUS -I../../../../../Applayer\DIAG -I../../../../../Applayer\FC -I../../../../../Applayer\FL -I../../../../../Applayer\HSD -I../../../../../Applayer\IDLE -I../../../../../Applayer\ILLU -I../../../../../Applayer\LED -I../../../../../Applayer\MSG -I../../../../../Applayer\NVM -I../../../../../Applayer\ODO -I../../../../../Applayer\PWR -I../../../../../Applayer\RANG -I../../../../../Applayer\RST -I../../../../../Applayer\RTC -I../../../../../Applayer\SCS -I../../../../../Applayer\SSB -I../../../../../Applayer\ST -I../../../../../Applayer\STSMG -I../../../../../Applayer\SYS -I../../../../../Applayer\TIP -I../../../../../Applayer\TRIP -I../../../../../Applayer\CHM -I../../../../../Applayer\DM -I../../../../../Applayer\EVT -I../../../../../Applayer\FTR -I../../../../../Applayer\SLF -I../../../../../Applayer\NWD -I../../../../../Applayer\TPMS -I../../../../../Applayer\WFM -I../../../../../Applayer\NZM -I../../../../../app/gfx_apps/simple_draw_d1l2/src -I../../../../../bsp/board//config -I../../../../../bsp/board//src/gfx -I../../../../../bsp/board//src/hmi -I../../../../../bsp/board//src/stdio -I../../../../../bsp/board/d1lx_mango/config -I../../../../../bsp/board/d1lx_mango/src -I../../../../../bsp/board/d1lx_mango/src/gfx -I../../../../../bsp/board/d1lx_mango/src/hmi -I../../../../../bsp/board/d1lx_mango/src/stdio -I../../../../../bsp/gfx/lib -I../../../../../bsp/gfx/src -I../../../../../bsp/hmi/lib -I../../../../../bsp/hmi/src -I../../../../../bsp/lib -I../../../../../bsp/stdio/lib -I../../../../../bsp/stdio/src -I../../../../../cdi/lib -I../../../../../cdi/src -I../../../../../compiler/rh850_ghs/inc -I../../../../../device/d1lx/lib -I../../../../../device/d1lx/macro_cfg -I../../../../../device/d1lx/src/dev -I../../../../../device/d1lx/src/rh850_ghs -I../../../../../device/d1x_common/macro_cfg -I../../../../../device/d1x_common/src/csisw -I../../../../../device/d1x_common/src/ddb -I../../../../../device/d1x_common/src/dev -I../../../../../device/d1x_common/src/gfxbus -I../../../../../device/d1x_common/src/gpio -I../../../../../device/d1x_common/src/ostm -I../../../../../device/d1x_common/src/pbg -I../../../../../device/d1x_common/src/riic -I../../../../../device/d1x_common/src/sfma -I../../../../../device/d1x_common/src/spea -I../../../../../device/d1x_common/src/tauj -I../../../../../device/d1x_common/src/tick -I../../../../../device/d1x_common/src/vdce -I../../../../../device/d1x_common/src/wm -I../../../../../device/d1x_common/src/xbus -I../../../../../device/lib -I../../../../../macro/bus/pbg/lib -I../../../../../macro/bus/pbg/src -I../../../../../macro/csi/csisw/lib -I../../../../../macro/csi/csisw/src -I../../../../../macro/drw2d/lib -I../../../../../macro/drw2d/platform/cpu -I../../../../../macro/drw2d/platform/os/no_os -I../../../../../macro/drw2d/src -I../../../../../macro/flashc/sfcdb/lib -I../../../../../macro/flashc/sfcdb/src -I../../../../../macro/flashc/sfma/lib -I../../../../../macro/flashc/sfma/src -I../../../../../macro/gfxbus/lib -I../../../../../macro/gfxbus/src -I../../../../../macro/gfxbus/xbus/lib -I../../../../../macro/gfxbus/xbus/src -I../../../../../macro/gpio/lib -I../../../../../macro/gpio/src -I../../../../../macro/i2c/riic/lib -I../../../../../macro/i2c/riic/src -I../../../../../macro/tick/lib -I../../../../../macro/tick/src -I../../../../../macro/timer/ostm/lib -I../../../../../macro/timer/ostm/src -I../../../../../macro/timer/tauj/lib -I../../../../../macro/timer/tauj/src -I../../../../../macro/vdce/lib -I../../../../../macro/vdce/src -I../../../../../macro/vo/ddb/lib -I../../../../../macro/vo/ddb/src -I../../../../../macro/vo/spea/lib -I../../../../../macro/vo/spea/src -I../../../../../macro/wm/lib -I../../../../../macro/wm/src -I../../../../../app/gfx_apps/simple_draw_d1l2/src/QD_HMI -I../../../../../app/gfx_apps/simple_draw_d1l2/src/QD_HMI/HMI_Data -IC:\ghs\comp_201355\lib\rh850_22 -cg_underscore -cpu=rh850g3m -no_v850_simd -nomacro -patch_dbo=D:\Renesas_Electronics\D1x_RGL\rgl_ghs_D1Lx_obj_V1.2.0\vlib\app\gfx_apps\simple_draw_d1l2\target\d1lx_mango_ghs\obj\yd_sfma_spibsc_drv.dbo -source=yd_sfma_spibsc_drv.c -o .\obj\gh_00008d81.o -list=.\obj\yd_sfma_spibsc_drv.lst C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si 
Original File: C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
Source File: yd_sfma_spibsc_drv.c
Directory: D:\Renesas_Electronics\D1x_RGL\rgl_ghs_D1Lx_obj_V1.2.0\vlib\app\gfx_apps\simple_draw_d1l2\target\d1lx_mango_ghs
Host OS: Windows 7 Service Pack 1
EASE: Copyright (C) 1983-2013 Green Hills Software.  All Rights Reversed.
Release: Compiler v2013.5.5
Build Directory: [Directory] BTOWINBOX:c:/build_2013_5_bto/2013-10-04.1311-2013_5_bto/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2013-5-bto/src@496240 (built by build)
Revision Date: Sat Oct 05 04:54:43 2013

Release Date: Sat Oct 05 05:20:49 2013

                           1 --Driver Command: ccv850 -c -MD
                           2 --		-ID:\Renesas_Electronics\D1x_RGL\rgl_ghs_D1Lx_obj_V1.2.0\vlib\macro\flashc\sfma\lib
                           3 --		-I../../../../../Device -I../../../../../Driver/ADCE
                           4 --		-I../../../../../Driver/CLOCK -I../../../../../Driver/DIO
                           5 --		-I../../../../../Driver/DSPI -I../../../../../Driver/Interrupt
                           6 --		-I../../../../../Driver/ISM -I../../../../../Driver/OSTM
                           7 --		-I../../../../../Driver/PWM -I../../../../../Driver/RSTC
                           8 --		-I../../../../../Driver/RTCA -I../../../../../Driver/STBC
                           9 --		-I../../../../../Driver/TAUB -I../../../../../Driver/WDT
                          10 --		-I../../../../../middleware\ADM -I../../../../../middleware\BPM
                          11 --		-I../../../../../middleware\EED -I../../../../../middleware\IOM
                          12 --		-I../../../../../middleware\LRM -I../../../../../middleware\MOM
                          13 --		-I../../../../../middleware\PWMM -I../../../../../Common
                          14 --		-I../../../../../Applayer\DSM -I../../../../../Applayer\FM
                          15 --		-I../../../../../Applayer\TPM -I../../../../../Applayer\ACC
                          16 --		-I../../../../../Applayer\ASS -I../../../../../Applayer\BAT
                          17 --		-I../../../../../Applayer\COM -I../../../../../Applayer\COM\vtp
                          18 --		-I../../../../../Applayer\COM\vtp\lib
                          19 --		-I../../../../../Applayer\CRUS -I../../../../../Applayer\DIAG
                          20 --		-I../../../../../Applayer\FC -I../../../../../Applayer\FL
                          21 --		-I../../../../../Applayer\HSD -I../../../../../Applayer\IDLE
                          22 --		-I../../../../../Applayer\ILLU -I../../../../../Applayer\LED
                          23 --		-I../../../../../Applayer\MSG -I../../../../../Applayer\NVM
                          24 --		-I../../../../../Applayer\ODO -I../../../../../Applayer\PWR
                          25 --		-I../../../../../Applayer\RANG -I../../../../../Applayer\RST
                          26 --		-I../../../../../Applayer\RTC -I../../../../../Applayer\SCS
                          27 --		-I../../../../../Applayer\SSB -I../../../../../Applayer\ST
                          28 --		-I../../../../../Applayer\STSMG -I../../../../../Applayer\SYS
                          29 --		-I../../../../../Applayer\TIP -I../../../../../Applayer\TRIP
                          30 --		-I../../../../../Applayer\CHM -I../../../../../Applayer\DM
                          31 --		-I../../../../../Applayer\EVT -I../../../../../Applayer\FTR
                          32 --		-I../../../../../Applayer\SLF -I../../../../../Applayer\NWD
                          33 --		-I../../../../../Applayer\TPMS -I../../../../../Applayer\WFM
                          34 --		-I../../../../../Applayer\NZM
                          35 --		-I../../../../../app/gfx_apps/simple_draw_d1l2/src
                          36 --		-I../../../../../bsp/board//config
                          37 --		-I../../../../../bsp/board//src/gfx
                          38 --		-I../../../../../bsp/board//src/hmi
                          39 --		-I../../../../../bsp/board//src/stdio
                          40 --		-I../../../../../bsp/board/d1lx_mango/config
                          41 --		-I../../../../../bsp/board/d1lx_mango/src
                          42 --		-I../../../../../bsp/board/d1lx_mango/src/gfx
                          43 --		-I../../../../../bsp/board/d1lx_mango/src/hmi
                          44 --		-I../../../../../bsp/board/d1lx_mango/src/stdio
                          45 --		-I../../../../../bsp/gfx/lib -I../../../../../bsp/gfx/src
                          46 --		-I../../../../../bsp/hmi/lib -I../../../../../bsp/hmi/src
                          47 --		-I../../../../../bsp/lib -I../../../../../bsp/stdio/lib
                          48 --		-I../../../../../bsp/stdio/src -I../../../../../cdi/lib
                          49 --		-I../../../../../cdi/src -I../../../../../compiler/rh850_ghs/inc
                          50 --		-I../../../../../device/d1lx/lib

                                                                      Page 2
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                          51 --		-I../../../../../device/d1lx/macro_cfg
                          52 --		-I../../../../../device/d1lx/src/dev
                          53 --		-I../../../../../device/d1lx/src/rh850_ghs
                          54 --		-I../../../../../device/d1x_common/macro_cfg
                          55 --		-I../../../../../device/d1x_common/src/csisw
                          56 --		-I../../../../../device/d1x_common/src/ddb
                          57 --		-I../../../../../device/d1x_common/src/dev
                          58 --		-I../../../../../device/d1x_common/src/gfxbus
                          59 --		-I../../../../../device/d1x_common/src/gpio
                          60 --		-I../../../../../device/d1x_common/src/ostm
                          61 --		-I../../../../../device/d1x_common/src/pbg
                          62 --		-I../../../../../device/d1x_common/src/riic
                          63 --		-I../../../../../device/d1x_common/src/sfma
                          64 --		-I../../../../../device/d1x_common/src/spea
                          65 --		-I../../../../../device/d1x_common/src/tauj
                          66 --		-I../../../../../device/d1x_common/src/tick
                          67 --		-I../../../../../device/d1x_common/src/vdce
                          68 --		-I../../../../../device/d1x_common/src/wm
                          69 --		-I../../../../../device/d1x_common/src/xbus
                          70 --		-I../../../../../device/lib -I../../../../../macro/bus/pbg/lib
                          71 --		-I../../../../../macro/bus/pbg/src
                          72 --		-I../../../../../macro/csi/csisw/lib
                          73 --		-I../../../../../macro/csi/csisw/src
                          74 --		-I../../../../../macro/drw2d/lib
                          75 --		-I../../../../../macro/drw2d/platform/cpu
                          76 --		-I../../../../../macro/drw2d/platform/os/no_os
                          77 --		-I../../../../../macro/drw2d/src
                          78 --		-I../../../../../macro/flashc/sfcdb/lib
                          79 --		-I../../../../../macro/flashc/sfcdb/src
                          80 --		-I../../../../../macro/flashc/sfma/lib
                          81 --		-I../../../../../macro/flashc/sfma/src
                          82 --		-I../../../../../macro/gfxbus/lib
                          83 --		-I../../../../../macro/gfxbus/src
                          84 --		-I../../../../../macro/gfxbus/xbus/lib
                          85 --		-I../../../../../macro/gfxbus/xbus/src
                          86 --		-I../../../../../macro/gpio/lib -I../../../../../macro/gpio/src
                          87 --		-I../../../../../macro/i2c/riic/lib
                          88 --		-I../../../../../macro/i2c/riic/src
                          89 --		-I../../../../../macro/tick/lib -I../../../../../macro/tick/src
                          90 --		-I../../../../../macro/timer/ostm/lib
                          91 --		-I../../../../../macro/timer/ostm/src
                          92 --		-I../../../../../macro/timer/tauj/lib
                          93 --		-I../../../../../macro/timer/tauj/src
                          94 --		-I../../../../../macro/vdce/lib -I../../../../../macro/vdce/src
                          95 --		-I../../../../../macro/vo/ddb/lib
                          96 --		-I../../../../../macro/vo/ddb/src
                          97 --		-I../../../../../macro/vo/spea/lib
                          98 --		-I../../../../../macro/vo/spea/src -I../../../../../macro/wm/lib
                          99 --		-I../../../../../macro/wm/src
                         100 --		-I../../../../../app/gfx_apps/simple_draw_d1l2/src/QD_HMI
                         101 --		-I../../../../../app/gfx_apps/simple_draw_d1l2/src/QD_HMI/HMI_Data
                         102 --		-G --no_commons --no_implicit_include --prototype_errors
                         103 --		-DR_DRW2D_OS_NO_OS -DR_DRW2D_SYS_CPU -DUSED_CPU=RH850G3M
                         104 --		-DUSE_BSP_GFX -DUSE_BSP_HMI -DUSE_BSP_STDIO -DUSE_CDI -DUSE_CSISW
                         105 --		-DUSE_DDB -DUSE_DRW2D -DUSE_GFXBUS -DUSE_GPIO -DUSE_OSTM
                         106 --		-DUSE_PBG -DUSE_RIIC -DUSE_SFCDB -DUSE_SFMA -DUSE_SPEA -DUSE_TAUJ
                         107 --		-DUSE_TICK -DUSE_VDCE -DUSE_WM -DUSE_XBUS -MD -Mn -Mx -Zuse1bit
                         108 --		-allocate_ep -cpu=rh850g3m -entry=_RESET -large_sda -list
                         109 --		-no_callt -notda -passsource -preprocess_assembly_files
                         110 --		-registermode=22 -reserve_r2 --diag_warning 1 -object_dir=./obj
                         111 --		-filetype.c

                                                                      Page 3
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         112 --		..\..\..\..\..\macro\flashc\sfma\lib\yd_sfma_spibsc_drv.c -o
                         113 --		.\obj\yd_sfma_spibsc_drv.o
                         114 --Source File:   ..\..\..\..\..\macro\flashc\sfma\lib\yd_sfma_spibsc_drv.c
                         115 --Directory:     
                         116 --		D:\Renesas_Electronics\D1x_RGL\rgl_ghs_D1Lx_obj_V1.2.0\vlib\app\gfx_apps\simple_draw_d1l2\target\d1lx_mango_ghs
                         117 --Compile Date:  Fri Feb 02 14:21:46 2018
                         118 --Host OS:       Win32
                         119 --Version:       C-RH850 2013.5.5 DEVELOPMENT VERSION
                         120 --Release:       Compiler v2013.5.5
                         121 --Revision Date: Sat Oct 05 05:01:20 2013
                         122 --Release Date:  Sat Oct 05 05:22:44 2013
                         123 -- ecom  -g -w
                         124 
                         125 --1: /*
                         126 --2: ****************************************************************************
                         127 --3: PROJECT : SFMA driver
                         128 --4: FILE    : $Id: yd_sfma_spibsc_drv.c 7505 2016-02-03 12:29:27Z michael.golczewski $
                         129 --5: ============================================================================
                         130 --6: DESCRIPTION
                         131 --7: Driver for the SFMA(Serial Flash Memory Interface) macro
                         132 --8: ============================================================================
                         133 --9:                             C O P Y R I G H T
                         134 --10: ============================================================================
                         135 --11:                            Copyright (c) 2013 - 2014
                         136 --12:                                   by
                         137 --13:                        Renesas Electronics (Europe) GmbH.
                         138 --14:                            Arcadiastrasse 10
                         139 --15:                           D-40472 Duesseldorf
                         140 --16:                                Germany
                         141 --17:                           All rights reserved.
                         142 --18: ============================================================================
                         143 --20: DISCLAIMER
                         144 --22: LICENSEE has read, understood and accepted the terms and conditions defined in
                         145 --23: the license agreement, especially the usage rights. In any case, it is
                         146 --24: LICENSEE's responsibility to make sure that any user of the software complies
                         147 --25: with the terms and conditions of the signed license agreement.
                         148 --27: ****************************************************************************
                         149 --28: */
                         150 --30: /***************************************************************************
                         151 --31:   Title: SFMA Spibsc Driver controlling registers
                         152 --33:   SFMA Internal Interface
                         153 --35: */
                         154 --37: /***************************************************************************
                         155 --38:   Section: Includes
                         156 --39: */
                         157 --40: #include "r_typedefs.h"
                         158 --41: #include "yd_sfma_api.h"
                         159 --42: #include "r_sfma_api.h"
                         160 --43: #include "yd_sfma_spibsc.h"
                         161 --44: #include "yd_sfma_sys.h"
                         162 --45: #include "yd_config_sfma.h"
                         163 --47: /***************************************************************************
                         164 --48:   Section: Local Defines
                         165 --49: */
                         166 --51: /***************************************************************************
                         167 --52:   Constants: LOC_YD_SFMA_SPIBSC_CMNCR
                         168 --54:   The setting value of CMNCR register.
                         169 --56:   LOC_YD_SFMA_SPIBSC_CMNCR_MD_EXTRD    - The setting value of EX operation mode.
                         170 --57:   LOC_YD_SFMA_SPIBSC_CMNCR_MD_SPI      - The setting value of SPI operating mode.
                         171 --58:   LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ  - The setting value of output idle value is Hi-z.
                         172 --59:   LOC_YD_SFMA_SPIBSC_CMNCR_CPHAT_EVEN  - The setting value of even edge of output data.

                                                                      Page 4
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         173 --60:   LOC_YD_SFMA_SPIBSC_CMNCR_SFDE        - The setting value of data swap setting.
                         174 --61:   LOC_YD_SFMA_SPIBSC_CMNCR_CPHAR_EVEN  - The setting value of even edge of reception data.
                         175 --62:   LOC_YD_SFMA_SPIBSC_CMNCR_SSLP_LOW    - The setting value of active low SPBSSL signal.
                         176 --63:   LOC_YD_SFMA_SPIBSC_CMNCR_CPOL_LOW    - The setting value of SPBCLK output is 0.
                         177 --64:                                       during SPBSSL negation period.
                         178 --65: */
                         179 --66: #define LOC_YD_SFMA_SPIBSC_CMNCR_MD_EXTRD       (0uL)
                         180 --67: #define LOC_YD_SFMA_SPIBSC_CMNCR_MD_SPI         (1uL)
                         181 --68: #define LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIGH    (1uL)
                         182 --69: #define LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ     (3uL)
                         183 --70: #define LOC_YD_SFMA_SPIBSC_CMNCR_CPHAT_EVEN     (0uL)
                         184 --71: #define LOC_YD_SFMA_SPIBSC_CMNCR_SFDE           (1uL)
                         185 --72: #define LOC_YD_SFMA_SPIBSC_CMNCR_CPHAR_EVEN     (1uL)
                         186 --73: #define LOC_YD_SFMA_SPIBSC_CMNCR_SSLP_LOW       (0uL)
                         187 --74: #define LOC_YD_SFMA_SPIBSC_CMNCR_CPOL_LOW       (0uL)
                         188 --76: /***************************************************************************
                         189 --77:   Constants: LOC_YD_SFMA_SPIBSC_DELAY_1SPBCLK
                         190 --79:   The setting value of SSLDR register.
                         191 --81:   LOC_YD_SFMA_SPIBSC_DELAY_1SPBCLK     - The setting value of next address delay is 1SPBCLK cycles.
                         192 --82: */
                         193 --83: #define LOC_YD_SFMA_SPIBSC_DELAY_1SPBCLK        (0uL)
                         194 --85: /***************************************************************************
                         195 --86:   Constants: LOC_YD_SFMA_SPIBSC_DRCR
                         196 --88:   The setting value of DRCR register.
                         197 --90:   LOC_YD_SFMA_SPIBSC_DRCR_BURST_ENABLE    - The setting value of read burst enable.
                         198 --91:   LOC_YD_SFMA_SPIBSC_DRCR_RCF_EXE         - The setting value of read cache flash.
                         199 --92:   LOC_YD_SFMA_SPIBSC_DRCR_SSL_NEGATE      - The setting value of SPBSSL negate enable.
                         200 --93:   LOC_YD_SFMA_SPIBSC_DRCR_BFM_BURST       - The setting value of Enable SFMA cache.
                         201 --94: */
                         202 --95: #define LOC_YD_SFMA_SPIBSC_DRCR_BURST_ENABLE    (1uL)
                         203 --96: #define LOC_YD_SFMA_SPIBSC_DRCR_RCF_EXE         (1uL)
                         204 --97: #define LOC_YD_SFMA_SPIBSC_DRCR_SSL_NEGATE      (1uL)
                         205 --98: #define LOC_YD_SFMA_SPIBSC_DRCR_BFM_BURST       (7uL)
                         206 --100: /***************************************************************************
                         207 --101:   Constants: LOC_YD_SFMA_SPIBSC_CMNSR
                         208 --103:   The setting value of CMNSR register.
                         209 --105:   LOC_YD_SFMA_SPIBSC_CMNSR_SSL_NEGATE  - The setting value of SPBSSL pin negate.
                         210 --106:   LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END   - The setting value of transfer end flag.
                         211 --107: */
                         212 --108: #define LOC_YD_SFMA_SPIBSC_CMNSR_SSL_NEGATE     (0uL)
                         213 --109: #define LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END      (1uL)
                         214 --111: /***************************************************************************
                         215 --112:   Constants: LOC_YD_SFMA_SPIBSC_SPI_ENABLE
                         216 --114:   The setting value of SPI enable of SMCR register.
                         217 --116:   LOC_YD_SFMA_SPIBSC_SPI_ENABLE        - The setting value of SPI enable.
                         218 --117: */
                         219 --118: #define LOC_YD_SFMA_SPIBSC_SPI_ENABLE           (1uL)
                         220 --120: /***************************************************************************
                         221 --121:   Constant: LOC_YD_SFMA_CMNCR
                         222 --123:   The offset value of the CMNCR register from the base address.
                         223 --124: */
                         224 --125: #define LOC_YD_SFMA_CMNCR          (0x00)
                         225 --127: /***************************************************************************
                         226 --128:   Constant: LOC_YD_SFMA_SSLDR
                         227 --130:   The offset value of the SSLDR register from the base address.
                         228 --131: */
                         229 --132: #define LOC_YD_SFMA_SSLDR          (0x04)
                         230 --134: /***************************************************************************
                         231 --135:   Constant: LOC_YD_SFMA_SPBCR
                         232 --137:   The offset value of the SPBCR register from the base address.
                         233 --138: */

                                                                      Page 5
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         234 --139: #define LOC_YD_SFMA_SPBCR          (0x08)
                         235 --141: /***************************************************************************
                         236 --142:   Constant: LOC_YD_SFMA_DRCR
                         237 --144:   The offset value of the DRCR register from the base address.
                         238 --145: */
                         239 --146: #define LOC_YD_SFMA_DRCR           (0x0c)
                         240 --148: /***************************************************************************
                         241 --149:   Constant: LOC_YD_SFMA_DRCMR
                         242 --151:   The offset value of the DRCMR register from the base address.
                         243 --152: */
                         244 --153: #define LOC_YD_SFMA_DRCMR          (0x10)
                         245 --155: /***************************************************************************
                         246 --156:   Constant: LOC_YD_SFMA_DREAR
                         247 --158:   The offset value of the DREAR register from the base address.
                         248 --159: */
                         249 --160: #define LOC_YD_SFMA_DREAR          (0x14)
                         250 --162: /***************************************************************************
                         251 --163:   Constant: LOC_YD_SFMA_DROPR
                         252 --165:   The offset value of the DROPR register from the base address.
                         253 --166: */
                         254 --167: #define LOC_YD_SFMA_DROPR          (0x18)
                         255 --169: /***************************************************************************
                         256 --170:   Constant: LOC_YD_SFMA_DRENR
                         257 --172:   The offset value of the DRENR register from the base address.
                         258 --173: */
                         259 --174: #define LOC_YD_SFMA_DRENR          (0x1c)
                         260 --176: /***************************************************************************
                         261 --177:   Constant: LOC_YD_SFMA_SMCR
                         262 --179:   The offset value of the SMCR register from the base address.
                         263 --180: */
                         264 --181: #define LOC_YD_SFMA_SMCR           (0x20)
                         265 --183: /***************************************************************************
                         266 --184:   Constant: LOC_YD_SFMA_SMCMR
                         267 --186:   The offset value of the SMCMR register from the base address.
                         268 --187: */
                         269 --188: #define LOC_YD_SFMA_SMCMR          (0x24)
                         270 --190: /***************************************************************************
                         271 --191:   Constant: LOC_YD_SFMA_SMADR
                         272 --193:   The offset value of the SMADR register from the base address.
                         273 --194: */
                         274 --195: #define LOC_YD_SFMA_SMADR          (0x28)
                         275 --197: /***************************************************************************
                         276 --198:   Constant: LOC_YD_SFMA_SMOPR
                         277 --200:   The offset value of the SMOPR register from the base address.
                         278 --201: */
                         279 --202: #define LOC_YD_SFMA_SMOPR          (0x2c)
                         280 --204: /***************************************************************************
                         281 --205:   Constant: LOC_YD_SFMA_SMENR
                         282 --207:   The offset value of the SMENR register from the base address.
                         283 --208: */
                         284 --209: #define LOC_YD_SFMA_SMENR          (0x30)
                         285 --211: /***************************************************************************
                         286 --212:   Constant: LOC_YD_SFMA_SMRDR0
                         287 --214:   The offset value of the SMRDR0 register from the base address.
                         288 --215: */
                         289 --216: #define LOC_YD_SFMA_SMRDR0         (0x38)
                         290 --218: /***************************************************************************
                         291 --219:   Constant: LOC_YD_SFMA_SMRDR1
                         292 --221:   The offset value of the SMRDR1 register from the base address.
                         293 --222: */
                         294 --223: #define LOC_YD_SFMA_SMRDR1         (0x3c)

                                                                      Page 6
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         295 --225: /***************************************************************************
                         296 --226:   Constant: LOC_YD_SFMA_SMWDR0
                         297 --228:   The offset value of the SMWDR0 register from the base address.
                         298 --229: */
                         299 --230: #define LOC_YD_SFMA_SMWDR0         (0x40)
                         300 --232: /***************************************************************************
                         301 --233:   Constant: LOC_YD_SFMA_SMWDR1
                         302 --235:   The offset value of the SMWDR1 register from the base address.
                         303 --236: */
                         304 --237: #define LOC_YD_SFMA_SMWDR1         (0x44)
                         305 --239: /***************************************************************************
                         306 --240:   Constant: LOC_YD_SFMA_CMNSR
                         307 --242:   The offset value of the CMNSR register from the base address.
                         308 --243: */
                         309 --244: #define LOC_YD_SFMA_CMNSR          (0x48)
                         310 --246: /***************************************************************************
                         311 --247:   Constant: LOC_YD_SFMA_DRDMCR
                         312 --249:   The offset value of the DRDMCR register from the base address.
                         313 --250: */
                         314 --251: #define LOC_YD_SFMA_DRDMCR         (0x58)
                         315 --253: /***************************************************************************
                         316 --254:   Constant: LOC_YD_SFMA_DRDRENR
                         317 --256:   The offset value of the DRDRENR register from the base address.
                         318 --257: */
                         319 --258: #define LOC_YD_SFMA_DRDRENR        (0x5c)
                         320 --260: /***************************************************************************
                         321 --261:   Constant: LOC_YD_SFMA_SMDMCR
                         322 --263:   The offset value of the SMDMCR register from the base address.
                         323 --264: */
                         324 --265: #define LOC_YD_SFMA_SMDMCR         (0x60)
                         325 --267: /***************************************************************************
                         326 --268:   Constant: LOC_YD_SFMA_SMDRENR
                         327 --270:   The offset value of the SMDRENR register from the base address.
                         328 --271: */
                         329 --272: #define LOC_YD_SFMA_SMDRENR        (0x64)
                         330 --274: /***************************************************************************
                         331 --275:   Constant: LOC_YD_SFMA_CMNCR
                         332 --277:   A constant for bit mask value and offset value of CMNCR.
                         333 --279:   LOC_YD_SFMA_CMNCR_BSZ            - Mask values of BSZ field.
                         334 --280:   LOC_YD_SFMA_CMNCR_CPOL           - Mask values of CPOL field.
                         335 --281:   LOC_YD_SFMA_CMNCR_SSLP           - Mask values of SSLP field.
                         336 --282:   LOC_YD_SFMA_CMNCR_CPHAR          - Mask values of CPHAR field.
                         337 --283:   LOC_YD_SFMA_CMNCR_CPHAT          - Mask values of CPHAT field.
                         338 --284:   LOC_YD_SFMA_CMNCR_IO0FV          - Mask values of IO0FV field.
                         339 --285:   LOC_YD_SFMA_CMNCR_IO2FV          - Mask values of IO2FV field.
                         340 --286:   LOC_YD_SFMA_CMNCR_IO3FV          - Mask values of IO3FV field.
                         341 --287:   LOC_YD_SFMA_CMNCR_MOIIO0         - Mask values of MOIIO0 field.
                         342 --288:   LOC_YD_SFMA_CMNCR_MOIIO1         - Mask values of MOIIO1 field.
                         343 --289:   LOC_YD_SFMA_CMNCR_MOIIO2         - Mask values of MOIIO2 field.
                         344 --290:   LOC_YD_SFMA_CMNCR_MOIIO3         - Mask values of MOIIO3 field.
                         345 --291:   LOC_YD_SFMA_CMNCR_SFDE           - Mask values of SFDE field.
                         346 --292:   LOC_YD_SFMA_CMNCR_MD             - Mask values of MD field.
                         347 --293:   LOC_YD_SFMA_CMNCR_BSZ_SHIFT      - Offset values of BSZ field.
                         348 --294:   LOC_YD_SFMA_CMNCR_CPOL_SHIFT     - Offset values of CPOL field.
                         349 --295:   LOC_YD_SFMA_CMNCR_SSLP_SHIFT     - Offset values of SSLP field.
                         350 --296:   LOC_YD_SFMA_CMNCR_CPHAR_SHIFT    - Offset values of CPHAR field.
                         351 --297:   LOC_YD_SFMA_CMNCR_CPHAT_SHIFT    - Offset values of CPHAT field.
                         352 --298:   LOC_YD_SFMA_CMNCR_IO0FV_SHIFT    - Offset values of IO0FV field.
                         353 --299:   LOC_YD_SFMA_CMNCR_IO2FV_SHIFT    - Offset values of IO2FV field.
                         354 --300:   LOC_YD_SFMA_CMNCR_IO3FV_SHIFT    - Offset values of IO3FV field.
                         355 --301:   LOC_YD_SFMA_CMNCR_MOIIO0_SHIFT   - Offset values of MOIIO0 field.

                                                                      Page 7
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         356 --302:   LOC_YD_SFMA_CMNCR_MOIIO1_SHIFT   - Offset values of MOIIO1 field.
                         357 --303:   LOC_YD_SFMA_CMNCR_MOIIO2_SHIFT   - Offset values of MOIIO2 field.
                         358 --304:   LOC_YD_SFMA_CMNCR_MOIIO3_SHIFT   - Offset values of MOIIO3 field.
                         359 --305:   LOC_YD_SFMA_CMNCR_SFDE_SHIFT     - Offset values of SFDE field.
                         360 --306:   LOC_YD_SFMA_CMNCR_MD_SHIFT       - Offset values of MD field.
                         361 --307: */
                         362 --308: #define LOC_YD_SFMA_CMNCR_BSZ               (0x00000003uL)
                         363 --309: #define LOC_YD_SFMA_CMNCR_CPOL              (0x00000008uL)
                         364 --310: #define LOC_YD_SFMA_CMNCR_SSLP              (0x00000010uL)
                         365 --311: #define LOC_YD_SFMA_CMNCR_CPHAR             (0x00000020uL)
                         366 --312: #define LOC_YD_SFMA_CMNCR_CPHAT             (0x00000040uL)
                         367 --313: #define LOC_YD_SFMA_CMNCR_IO0FV             (0x00000300uL)
                         368 --314: #define LOC_YD_SFMA_CMNCR_IO2FV             (0x00003000uL)
                         369 --315: #define LOC_YD_SFMA_CMNCR_IO3FV             (0x0000C000uL)
                         370 --316: #define LOC_YD_SFMA_CMNCR_MOIIO0            (0x00030000uL)
                         371 --317: #define LOC_YD_SFMA_CMNCR_MOIIO1            (0x000C0000uL)
                         372 --318: #define LOC_YD_SFMA_CMNCR_MOIIO2            (0x00300000uL)
                         373 --319: #define LOC_YD_SFMA_CMNCR_MOIIO3            (0x00C00000uL)
                         374 --320: #define LOC_YD_SFMA_CMNCR_SFDE              (0x01000000uL)
                         375 --321: #define LOC_YD_SFMA_CMNCR_MD                (0x80000000uL)
                         376 --322: #define LOC_YD_SFMA_CMNCR_BSZ_SHIFT         (0u)
                         377 --323: #define LOC_YD_SFMA_CMNCR_CPOL_SHIFT        (3u)
                         378 --324: #define LOC_YD_SFMA_CMNCR_SSLP_SHIFT        (4u)
                         379 --325: #define LOC_YD_SFMA_CMNCR_CPHAR_SHIFT       (5u)
                         380 --326: #define LOC_YD_SFMA_CMNCR_CPHAT_SHIFT       (6u)
                         381 --327: #define LOC_YD_SFMA_CMNCR_IO0FV_SHIFT       (8u)
                         382 --328: #define LOC_YD_SFMA_CMNCR_IO2FV_SHIFT       (12u)
                         383 --329: #define LOC_YD_SFMA_CMNCR_IO3FV_SHIFT       (14u)
                         384 --330: #define LOC_YD_SFMA_CMNCR_MOIIO0_SHIFT      (16u)
                         385 --331: #define LOC_YD_SFMA_CMNCR_MOIIO1_SHIFT      (18u)
                         386 --332: #define LOC_YD_SFMA_CMNCR_MOIIO2_SHIFT      (20u)
                         387 --333: #define LOC_YD_SFMA_CMNCR_MOIIO3_SHIFT      (22u)
                         388 --334: #define LOC_YD_SFMA_CMNCR_SFDE_SHIFT        (24u)
                         389 --335: #define LOC_YD_SFMA_CMNCR_MD_SHIFT          (31u)
                         390 --337: /***************************************************************************
                         391 --338:   Constant: LOC_YD_SFMA_SSLDR
                         392 --340:   A constant for bit mask value and offset value of SSLDR.
                         393 --342:   LOC_YD_SFMA_SSLDR_SCKDL          - Mask values of SCKDL field.
                         394 --343:   LOC_YD_SFMA_SSLDR_SLNDL          - Mask values of SLNDL field.
                         395 --344:   LOC_YD_SFMA_SSLDR_SPNDL          - Mask values of SPNDL field.
                         396 --345:   LOC_YD_SFMA_SSLDR_SCKDL_SHIFT    - Offset values of SCKDL field.
                         397 --346:   LOC_YD_SFMA_SSLDR_SLNDL_SHIFT    - Offset values of SLNDL field.
                         398 --347:   LOC_YD_SFMA_SSLDR_SPNDL_SHIFT    - Offset values of SPNDL field.
                         399 --348: */
                         400 --349: #define LOC_YD_SFMA_SSLDR_SCKDL             (0x00000007uL)
                         401 --350: #define LOC_YD_SFMA_SSLDR_SLNDL             (0x00000700uL)
                         402 --351: #define LOC_YD_SFMA_SSLDR_SPNDL             (0x00070000uL)
                         403 --352: #define LOC_YD_SFMA_SSLDR_SCKDL_SHIFT       (0u)
                         404 --353: #define LOC_YD_SFMA_SSLDR_SLNDL_SHIFT       (8u)
                         405 --354: #define LOC_YD_SFMA_SSLDR_SPNDL_SHIFT       (16u)
                         406 --356: /***************************************************************************
                         407 --357:   Constant: LOC_YD_SFMA_SPBCR
                         408 --359:   A constant for bit mask value and offset value of SPBCR.
                         409 --361:   LOC_YD_SFMA_SPBCR_BRDV           - Mask values of BRDV field.
                         410 --362:   LOC_YD_SFMA_SPBCR_SPBR           - Mask values of SPBR field.
                         411 --363:   LOC_YD_SFMA_SPBCR_BRDV_SHIFT     - Offset values of BRDV field.
                         412 --364:   LOC_YD_SFMA_SPBCR_SPBR_SHIFT     - Offset values of SPBR field.
                         413 --365: */
                         414 --366: #define LOC_YD_SFMA_SPBCR_BRDV              (0x00000003uL)
                         415 --367: #define LOC_YD_SFMA_SPBCR_SPBR              (0x0000FF00uL)
                         416 --368: #define LOC_YD_SFMA_SPBCR_BRDV_SHIFT        (0u)

                                                                      Page 8
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         417 --369: #define LOC_YD_SFMA_SPBCR_SPBR_SHIFT        (8u)
                         418 --371: /***************************************************************************
                         419 --372:   Constant: LOC_YD_SFMA_DRCR
                         420 --374:   A constant for bit mask value and offset value of DRCR.
                         421 --376:   LOC_YD_SFMA_DRCR_RCF             - Mask values of RCF field.
                         422 --377:   LOC_YD_SFMA_DRCR_RBURST          - Mask values of RBURST field.
                         423 --378:   LOC_YD_SFMA_DRCR_SSLN            - Mask values of SSLN field.
                         424 --379:   LOC_YD_SFMA_DRCR_SSLE_SHIFT      - Offset values of SSLE field.
                         425 --380:   LOC_YD_SFMA_DRCR_RBE_SHIFT       - Offset values of RBE field.
                         426 --381:   LOC_YD_SFMA_DRCR_RCF_SHIFT       - Offset values of RCF field.
                         427 --382:   LOC_YD_SFMA_DRCR_RBURST_SHIFT    - Offset values of RBURST field.
                         428 --383:   LOC_YD_SFMA_DRCR_SSLN_SHIFT      - Offset values of SSLN field.
                         429 --384:   LOC_YD_SFMA_DRCR_BFM_SHIFT       - Offset values of BFM field.
                         430 --385: */
                         431 --386: #define LOC_YD_SFMA_DRCR_RCF                (0x00000200uL)
                         432 --387: #define LOC_YD_SFMA_DRCR_RBURST             (0x000F0000uL)
                         433 --388: #define LOC_YD_SFMA_DRCR_SSLN               (0x01000000uL)
                         434 --389: #define LOC_YD_SFMA_DRCR_SSLE_SHIFT         (0u)
                         435 --390: #define LOC_YD_SFMA_DRCR_RBE_SHIFT          (8u)
                         436 --391: #define LOC_YD_SFMA_DRCR_RCF_SHIFT          (9u)
                         437 --392: #define LOC_YD_SFMA_DRCR_RBURST_SHIFT       (16u)
                         438 --393: #define LOC_YD_SFMA_DRCR_SSLN_SHIFT         (24u)
                         439 --394: #define LOC_YD_SFMA_DRCR_BFM_SHIFT          (29u)
                         440 --396: /***************************************************************************
                         441 --397:   Constant: LOC_YD_SFMA_DRCMR
                         442 --399:   A constant for bit mask value and offset value of DRCMR.
                         443 --401:   LOC_YD_SFMA_DRCMR_OCMD           - Mask values of OCMD field.
                         444 --402:   LOC_YD_SFMA_DRCMR_CMD            - Mask values of CMD field.
                         445 --403:   LOC_YD_SFMA_DRCMR_OCMD_SHIFT     - Offset values of OCMD field.
                         446 --404:   LOC_YD_SFMA_DRCMR_CMD_SHIFT      - Offset values of CMD field.
                         447 --405: */
                         448 --406: #define LOC_YD_SFMA_DRCMR_OCMD              (0x000000FFuL)
                         449 --407: #define LOC_YD_SFMA_DRCMR_CMD               (0x00FF0000uL)
                         450 --408: #define LOC_YD_SFMA_DRCMR_OCMD_SHIFT        (0u)
                         451 --409: #define LOC_YD_SFMA_DRCMR_CMD_SHIFT         (16u)
                         452 --411: /***************************************************************************
                         453 --412:   Constant: LOC_YD_SFMA_DREAR
                         454 --414:   A constant for bit mask value and offset value of DREAR.
                         455 --416:   LOC_YD_SFMA_DREAR_EAC            - Mask values of EAC field.
                         456 --417:   LOC_YD_SFMA_DREAR_EAV            - Mask values of EAV field.
                         457 --418:   LOC_YD_SFMA_DREAR_EAC_SHIFT      - Offset values of EAC field.
                         458 --419:   LOC_YD_SFMA_DREAR_EAV_SHIFT      - Offset values of EAV field.
                         459 --420: */
                         460 --421: #define LOC_YD_SFMA_DREAR_EAC               (0x00000007uL)
                         461 --422: #define LOC_YD_SFMA_DREAR_EAV               (0x00FF0000uL)
                         462 --423: #define LOC_YD_SFMA_DREAR_EAC_SHIFT         (0u)
                         463 --424: #define LOC_YD_SFMA_DREAR_EAV_SHIFT         (16u)
                         464 --426: /***************************************************************************
                         465 --427:   Constant: LOC_YD_SFMA_DROPR
                         466 --429:   A constant for bit mask value and offset value of DROPR.
                         467 --431:   LOC_YD_SFMA_DROPR_OPD0           - Mask values of OPD0 field.
                         468 --432:   LOC_YD_SFMA_DROPR_OPD1           - Mask values of OPD1 field.
                         469 --433:   LOC_YD_SFMA_DROPR_OPD2           - Mask values of OPD2 field.
                         470 --434:   LOC_YD_SFMA_DROPR_OPD3           - Mask values of OPD3 field.
                         471 --435:   LOC_YD_SFMA_DROPR_OPD0_SHIFT     - Offset values of OPD0 field.
                         472 --436:   LOC_YD_SFMA_DROPR_OPD1_SHIFT     - Offset values of OPD1 field.
                         473 --437:   LOC_YD_SFMA_DROPR_OPD2_SHIFT     - Offset values of OPD2 field.
                         474 --438:   LOC_YD_SFMA_DROPR_OPD3_SHIFT     - Offset values of OPD3 field.
                         475 --439: */
                         476 --440: #define LOC_YD_SFMA_DROPR_OPD0              (0x000000FFuL)
                         477 --441: #define LOC_YD_SFMA_DROPR_OPD1              (0x0000FF00uL)

                                                                      Page 9
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         478 --442: #define LOC_YD_SFMA_DROPR_OPD2              (0x00FF0000uL)
                         479 --443: #define LOC_YD_SFMA_DROPR_OPD3              (0xFF000000uL)
                         480 --444: #define LOC_YD_SFMA_DROPR_OPD0_SHIFT        (0u)
                         481 --445: #define LOC_YD_SFMA_DROPR_OPD1_SHIFT        (8u)
                         482 --446: #define LOC_YD_SFMA_DROPR_OPD2_SHIFT        (16u)
                         483 --447: #define LOC_YD_SFMA_DROPR_OPD3_SHIFT        (24u)
                         484 --449: /***************************************************************************
                         485 --450:   Constant: LOC_YD_SFMA_DRENR
                         486 --452:   A constant for bit mask value and offset value of DRENR.
                         487 --454:   LOC_YD_SFMA_DRENR_OPDE           - Mask values of OPDE field.
                         488 --455:   LOC_YD_SFMA_DRENR_ADE            - Mask values of ADE field.
                         489 --456:   LOC_YD_SFMA_DRENR_OCDE           - Mask values of OCDE field.
                         490 --457:   LOC_YD_SFMA_DRENR_CDE            - Mask values of CDE field.
                         491 --458:   LOC_YD_SFMA_DRENR_DME            - Mask values of DME field.
                         492 --459:   LOC_YD_SFMA_DRENR_DRDB           - Mask values of DRDB field.
                         493 --460:   LOC_YD_SFMA_DRENR_OPDB           - Mask values of OPDB field.
                         494 --461:   LOC_YD_SFMA_DRENR_ADB            - Mask values of ADB field.
                         495 --462:   LOC_YD_SFMA_DRENR_OCDB           - Mask values of OCDB field.
                         496 --463:   LOC_YD_SFMA_DRENR_CDB            - Mask values of CDB field.
                         497 --464:   LOC_YD_SFMA_DRENR_OPDE_SHIFT     - Offset values of OPDE field.
                         498 --465:   LOC_YD_SFMA_DRENR_ADE_SHIFT      - Offset values of ADE field.
                         499 --466:   LOC_YD_SFMA_DRENR_OCDE_SHIFT     - Offset values of OCDE field.
                         500 --467:   LOC_YD_SFMA_DRENR_CDE_SHIFT      - Offset values of CDE field.
                         501 --468:   LOC_YD_SFMA_DRENR_DME_SHIFT      - Offset values of DME field.
                         502 --469:   LOC_YD_SFMA_DRENR_DRDB_SHIFT     - Offset values of DRDB field.
                         503 --470:   LOC_YD_SFMA_DRENR_OPDB_SHIFT     - Offset values of OPDB field.
                         504 --471:   LOC_YD_SFMA_DRENR_ADB_SHIFT      - Offset values of ADB field.
                         505 --472:   LOC_YD_SFMA_DRENR_OCDB_SHIFT     - Offset values of OCDB field.
                         506 --473:   LOC_YD_SFMA_DRENR_CDB_SHIFT      - Offset values of CDB field.
                         507 --474: */
                         508 --475: #define LOC_YD_SFMA_DRENR_OPDE              (0x000000F0uL)
                         509 --476: #define LOC_YD_SFMA_DRENR_ADE               (0x00000F00uL)
                         510 --477: #define LOC_YD_SFMA_DRENR_OCDE              (0x00001000uL)
                         511 --478: #define LOC_YD_SFMA_DRENR_CDE               (0x00004000uL)
                         512 --479: #define LOC_YD_SFMA_DRENR_DME               (0x00008000uL)
                         513 --480: #define LOC_YD_SFMA_DRENR_DRDB              (0x00030000uL)
                         514 --481: #define LOC_YD_SFMA_DRENR_OPDB              (0x00300000uL)
                         515 --482: #define LOC_YD_SFMA_DRENR_ADB               (0x03000000uL)
                         516 --483: #define LOC_YD_SFMA_DRENR_OCDB              (0x30000000uL)
                         517 --484: #define LOC_YD_SFMA_DRENR_CDB               (0xC0000000uL)
                         518 --485: #define LOC_YD_SFMA_DRENR_OPDE_SHIFT        (4u)
                         519 --486: #define LOC_YD_SFMA_DRENR_ADE_SHIFT         (8u)
                         520 --487: #define LOC_YD_SFMA_DRENR_OCDE_SHIFT        (12u)
                         521 --488: #define LOC_YD_SFMA_DRENR_CDE_SHIFT         (14u)
                         522 --489: #define LOC_YD_SFMA_DRENR_DME_SHIFT         (15u)
                         523 --490: #define LOC_YD_SFMA_DRENR_DRDB_SHIFT        (16u)
                         524 --491: #define LOC_YD_SFMA_DRENR_OPDB_SHIFT        (20u)
                         525 --492: #define LOC_YD_SFMA_DRENR_ADB_SHIFT         (24u)
                         526 --493: #define LOC_YD_SFMA_DRENR_OCDB_SHIFT        (28u)
                         527 --494: #define LOC_YD_SFMA_DRENR_CDB_SHIFT         (30u)
                         528 --496: /***************************************************************************
                         529 --497:   Constant: LOC_YD_SFMA_SMCR
                         530 --499:   A constant for bit mask value and offset value of SMCR.
                         531 --501:   LOC_YD_SFMA_SMCR_SPIE            - Mask values of SPIE field.
                         532 --502:   LOC_YD_SFMA_SMCR_SPIWE           - Mask values of SPIWE field.
                         533 --503:   LOC_YD_SFMA_SMCR_SPIRE           - Mask values of SPIRE field.
                         534 --504:   LOC_YD_SFMA_SMCR_SSLKP           - Mask values of SSLKP field.
                         535 --505:   LOC_YD_SFMA_SMCR_SPIE_SHIFT      - Offset values of SPIWE field.
                         536 --506:   LOC_YD_SFMA_SMCR_SPIWE_SHIFT     - Offset values of SPIRE field.
                         537 --507:   LOC_YD_SFMA_SMCR_SPIRE_SHIFT     - Offset values of SSLKP field.
                         538 --508:   LOC_YD_SFMA_SMCR_SSLKP_SHIFT     - Offset values of SSLKP field.

                                                                      Page 10
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         539 --509: */
                         540 --510: #define LOC_YD_SFMA_SMCR_SPIE               (0x00000001uL)
                         541 --511: #define LOC_YD_SFMA_SMCR_SPIWE              (0x00000002uL)
                         542 --512: #define LOC_YD_SFMA_SMCR_SPIRE              (0x00000004uL)
                         543 --513: #define LOC_YD_SFMA_SMCR_SSLKP              (0x00000100uL)
                         544 --514: #define LOC_YD_SFMA_SMCR_SPIE_SHIFT         (0u)
                         545 --515: #define LOC_YD_SFMA_SMCR_SPIWE_SHIFT        (1u)
                         546 --516: #define LOC_YD_SFMA_SMCR_SPIRE_SHIFT        (2u)
                         547 --517: #define LOC_YD_SFMA_SMCR_SSLKP_SHIFT        (8u)
                         548 --519: /***************************************************************************
                         549 --520:   Constant: LOC_YD_SFMA_SMCMR
                         550 --522:   A constant for bit mask value and offset value of SMCMR.
                         551 --524:   LOC_YD_SFMA_SMCMR_OCMD           - Mask values of OCMD field.
                         552 --525:   LOC_YD_SFMA_SMCMR_CMD            - Mask values of CMD field.
                         553 --526:   LOC_YD_SFMA_SMCMR_OCMD_SHIFT     - Offset values of OCMD field.
                         554 --527:   LOC_YD_SFMA_SMCMR_CMD_SHIFT      - Offset values of CMD field.
                         555 --528: */
                         556 --529: #define LOC_YD_SFMA_SMCMR_OCMD              (0x000000FFuL)
                         557 --530: #define LOC_YD_SFMA_SMCMR_CMD               (0x00FF0000uL)
                         558 --531: #define LOC_YD_SFMA_SMCMR_OCMD_SHIFT        (0u)
                         559 --532: #define LOC_YD_SFMA_SMCMR_CMD_SHIFT         (16u)
                         560 --534: /***************************************************************************
                         561 --535:   Constant: LOC_YD_SFMA_SMADR
                         562 --537:   A constant for bit mask value and offset value of SMADR.
                         563 --539:   LOC_YD_SFMA_SMADR_ADR            - Mask values of ADR field.
                         564 --540:   LOC_YD_SFMA_SMADR_ADR_SHIFT      - Offset values of ADR field.
                         565 --541: */
                         566 --542: #define LOC_YD_SFMA_SMADR_ADR               (0xFFFFFFFFuL)
                         567 --543: #define LOC_YD_SFMA_SMADR_ADR_SHIFT         (0u)
                         568 --545: /***************************************************************************
                         569 --546:   Constant: LOC_YD_SFMA_SMOPR_OPD
                         570 --548:   A constant for bit mask value and offset value of SMOPR.
                         571 --550:   LOC_YD_SFMA_SMOPR_OPD0           - Mask values of OPD0 field.
                         572 --551:   LOC_YD_SFMA_SMOPR_OPD1           - Mask values of OPD1 field.
                         573 --552:   LOC_YD_SFMA_SMOPR_OPD2           - Mask values of OPD2 field.
                         574 --553:   LOC_YD_SFMA_SMOPR_OPD3           - Mask values of OPD3 field.
                         575 --554:   LOC_YD_SFMA_SMOPR_OPD0_SHIFT     - Offset values of OPD0 field.
                         576 --555:   LOC_YD_SFMA_SMOPR_OPD1_SHIFT     - Offset values of OPD1 field.
                         577 --556:   LOC_YD_SFMA_SMOPR_OPD2_SHIFT     - Offset values of OPD2 field.
                         578 --557:   LOC_YD_SFMA_SMOPR_OPD3_SHIFT     - Offset values of OPD3 field.
                         579 --558: */
                         580 --559: #define LOC_YD_SFMA_SMOPR_OPD0              (0x000000FFuL)
                         581 --560: #define LOC_YD_SFMA_SMOPR_OPD1              (0x0000FF00uL)
                         582 --561: #define LOC_YD_SFMA_SMOPR_OPD2              (0x00FF0000uL)
                         583 --562: #define LOC_YD_SFMA_SMOPR_OPD3              (0xFF000000uL)
                         584 --563: #define LOC_YD_SFMA_SMOPR_OPD0_SHIFT        (0u)
                         585 --564: #define LOC_YD_SFMA_SMOPR_OPD1_SHIFT        (8u)
                         586 --565: #define LOC_YD_SFMA_SMOPR_OPD2_SHIFT        (16u)
                         587 --566: #define LOC_YD_SFMA_SMOPR_OPD3_SHIFT        (24u)
                         588 --568: /***************************************************************************
                         589 --569:   Constant: LOC_YD_SFMA_SMENR
                         590 --571:   A constant for bit mask value and offset value of SMENR.
                         591 --573:   LOC_YD_SFMA_SMENR_SPIDE          - Mask values of SPIDE field.
                         592 --574:   LOC_YD_SFMA_SMENR_OPDE           - Mask values of OPDE field.
                         593 --575:   LOC_YD_SFMA_SMENR_ADE            - Mask values of ADE field.
                         594 --576:   LOC_YD_SFMA_SMENR_OCDE           - Mask values of OCDE field.
                         595 --577:   LOC_YD_SFMA_SMENR_CDE            - Mask values of CDE field.
                         596 --578:   LOC_YD_SFMA_SMENR_DME            - Mask values of DME field.
                         597 --579:   LOC_YD_SFMA_SMENR_SPIDB          - Mask values of SPIDB field.
                         598 --580:   LOC_YD_SFMA_SMENR_OPDB           - Mask values of OPDB field.
                         599 --581:   LOC_YD_SFMA_SMENR_ADB            - Mask values of ADB field.

                                                                      Page 11
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         600 --582:   LOC_YD_SFMA_SMENR_OCDB           - Mask values of OCDB field.
                         601 --583:   LOC_YD_SFMA_SMENR_CDB            - Mask values of CDB field.
                         602 --584:   LOC_YD_SFMA_SMENR_SPIDE_SHIFT    - Offset values of SPIDE field.
                         603 --585:   LOC_YD_SFMA_SMENR_OPDE_SHIFT     - Offset values of OPDE field.
                         604 --586:   LOC_YD_SFMA_SMENR_ADE_SHIFT      - Offset values of ADE field.
                         605 --587:   LOC_YD_SFMA_SMENR_OCDE_SHIFT     - Offset values of OCDE field.
                         606 --588:   LOC_YD_SFMA_SMENR_CDE_SHIFT      - Offset values of CDE field.
                         607 --589:   LOC_YD_SFMA_SMENR_DME_SHIFT      - Offset values of DME field.
                         608 --590:   LOC_YD_SFMA_SMENR_SPIDB_SHIFT    - Offset values of SPIDB field.
                         609 --591:   LOC_YD_SFMA_SMENR_OPDB_SHIFT     - Offset values of OPDB field.
                         610 --592:   LOC_YD_SFMA_SMENR_ADB_SHIFT      - Offset values of ADB field.
                         611 --593:   LOC_YD_SFMA_SMENR_OCDB_SHIFT     - Offset values of OCDB field.
                         612 --594:   LOC_YD_SFMA_SMENR_CDB_SHIFT      - Offset values of CDB field.
                         613 --595: */
                         614 --596: #define LOC_YD_SFMA_SMENR_SPIDE             (0x0000000FuL)
                         615 --597: #define LOC_YD_SFMA_SMENR_OPDE              (0x000000F0uL)
                         616 --598: #define LOC_YD_SFMA_SMENR_ADE               (0x00000F00uL)
                         617 --599: #define LOC_YD_SFMA_SMENR_OCDE              (0x00001000uL)
                         618 --600: #define LOC_YD_SFMA_SMENR_CDE               (0x00004000uL)
                         619 --601: #define LOC_YD_SFMA_SMENR_DME               (0x00008000uL)
                         620 --602: #define LOC_YD_SFMA_SMENR_SPIDB             (0x00030000uL)
                         621 --603: #define LOC_YD_SFMA_SMENR_OPDB              (0x00300000uL)
                         622 --604: #define LOC_YD_SFMA_SMENR_ADB               (0x03000000uL)
                         623 --605: #define LOC_YD_SFMA_SMENR_OCDB              (0x30000000uL)
                         624 --606: #define LOC_YD_SFMA_SMENR_CDB               (0xC0000000uL)
                         625 --607: #define LOC_YD_SFMA_SMENR_SPIDE_SHIFT       (0u)
                         626 --608: #define LOC_YD_SFMA_SMENR_OPDE_SHIFT        (4u)
                         627 --609: #define LOC_YD_SFMA_SMENR_ADE_SHIFT         (8u)
                         628 --610: #define LOC_YD_SFMA_SMENR_OCDE_SHIFT        (12u)
                         629 --611: #define LOC_YD_SFMA_SMENR_CDE_SHIFT         (14u)
                         630 --612: #define LOC_YD_SFMA_SMENR_DME_SHIFT         (15u)
                         631 --613: #define LOC_YD_SFMA_SMENR_SPIDB_SHIFT       (16u)
                         632 --614: #define LOC_YD_SFMA_SMENR_OPDB_SHIFT        (20u)
                         633 --615: #define LOC_YD_SFMA_SMENR_ADB_SHIFT         (24u)
                         634 --616: #define LOC_YD_SFMA_SMENR_OCDB_SHIFT        (28u)
                         635 --617: #define LOC_YD_SFMA_SMENR_CDB_SHIFT         (30u)
                         636 --619: /***************************************************************************
                         637 --620:   Constant: LOC_YD_SFMA_SMRDR0
                         638 --622:   A constant for bit mask value and offset value of SMRDR0.
                         639 --624:   LOC_YD_SFMA_SMRDR0_RDATA0        - Mask values of RDATA0 field.
                         640 --625:   LOC_YD_SFMA_SMRDR0_RDATA0_SHIFT  - Offset values of RDATA0 field.
                         641 --626: */
                         642 --627: #define LOC_YD_SFMA_SMRDR0_RDATA0           (0xFFFFFFFFuL)
                         643 --628: #define LOC_YD_SFMA_SMRDR0_RDATA0_SHIFT     (0u)
                         644 --630: /***************************************************************************
                         645 --631:   Constant: LOC_YD_SFMA_SMRDR1
                         646 --633:   A constant for bit mask value and offset value of SMRDR1.
                         647 --635:   LOC_YD_SFMA_SMRDR1_RDATA1        - Mask values of RDATA1 field.
                         648 --636:   LOC_YD_SFMA_SMRDR1_RDATA1_SHIFT  - Offset values of RDATA1 field.
                         649 --637: */
                         650 --638: #define LOC_YD_SFMA_SMRDR1_RDATA1           (0xFFFFFFFFuL)
                         651 --639: #define LOC_YD_SFMA_SMRDR1_RDATA1_SHIFT     (0u)
                         652 --641: /***************************************************************************
                         653 --642:   Constant: LOC_YD_SFMA_SMWDR0
                         654 --644:   A constant for bit mask value and offset value of SMWDR0.
                         655 --646:   LOC_YD_SFMA_SMWDR0_WDATA0        - Mask values of WDATA0 field.
                         656 --647:   LOC_YD_SFMA_SMWDR0_WDATA0_SHIFT  - Offset values of WDATA0 field.
                         657 --648: */
                         658 --649: #define LOC_YD_SFMA_SMWDR0_WDATA0           (0xFFFFFFFFuL)
                         659 --650: #define LOC_YD_SFMA_SMWDR0_WDATA0_SHIFT     (0u)
                         660 --652: /***************************************************************************

                                                                      Page 12
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         661 --653:   Constant: LOC_YD_SFMA_SMWDR1
                         662 --655:   A constant for bit mask value and offset value of SMWDR1.
                         663 --657:   LOC_YD_SFMA_SMWDR1_WDATA1        - Mask values of WDATA1 field.
                         664 --658:   LOC_YD_SFMA_SMWDR1_WDATA1_SHIFT  - Offset values of WDATA1 field.
                         665 --659: */
                         666 --660: #define LOC_YD_SFMA_SMWDR1_WDATA1           (0xFFFFFFFFuL)
                         667 --661: #define LOC_YD_SFMA_SMWDR1_WDATA1_SHIFT     (0u)
                         668 --663: /***************************************************************************
                         669 --664:   Constant: LOC_YD_SFMA_CMNSR
                         670 --666:   A constant for bit mask value and offset value of CMNSR.
                         671 --668:   LOC_YD_SFMA_CMNSR_TEND           - Mask values of TEND field.
                         672 --669:   LOC_YD_SFMA_CMNSR_SSLF           - Mask values of SSLF field.
                         673 --670:   LOC_YD_SFMA_CMNSR_TEND_SHIFT     - Offset values of TEND field.
                         674 --671:   LOC_YD_SFMA_CMNSR_SSLF_SHIFT     - Offset values of SSLF field.
                         675 --672: */
                         676 --673: #define LOC_YD_SFMA_CMNSR_TEND              (0x00000001uL)
                         677 --674: #define LOC_YD_SFMA_CMNSR_SSLF              (0x00000002uL)
                         678 --675: #define LOC_YD_SFMA_CMNSR_TEND_SHIFT        (0u)
                         679 --676: #define LOC_YD_SFMA_CMNSR_SSLF_SHIFT        (1u)
                         680 --678: /***************************************************************************
                         681 --679:   Constant: LOC_YD_SFMA_DRDMCR
                         682 --681:   A constant for bit mask value and offset value of DRDMCR.
                         683 --683:   LOC_YD_SFMA_DRDMCR_DMCYC         - Mask values of DMCYC field.
                         684 --684:   LOC_YD_SFMA_DRDMCR_DMDB          - Mask values of DMDB field.
                         685 --685:   LOC_YD_SFMA_DRDMCR_DMCYC_SHIFT   - Offset values of DMCYC field.
                         686 --686:   LOC_YD_SFMA_DRDMCR_DMDB_SHIFT    - Offset values of DMDB field.
                         687 --687: */
                         688 --688: #define LOC_YD_SFMA_DRDMCR_DMCYC            (0x00000007uL)
                         689 --689: #define LOC_YD_SFMA_DRDMCR_DMDB             (0x00030000uL)
                         690 --690: #define LOC_YD_SFMA_DRDMCR_DMCYC_SHIFT      (0u)
                         691 --691: #define LOC_YD_SFMA_DRDMCR_DMDB_SHIFT       (16u)
                         692 --693: /***************************************************************************
                         693 --694:   Constant: LOC_YD_SFMA_DRDRENR
                         694 --696:   A constant for bit mask value and offset value of DRDRENR.
                         695 --698:   LOC_YD_SFMA_DRDRENR_DRDRE        - Mask values of DRDRE field.
                         696 --699:   LOC_YD_SFMA_DRDRENR_OPDRE        - Mask values of OPDRE field.
                         697 --700:   LOC_YD_SFMA_DRDRENR_ADDRE        - Mask values of ADDRE field.
                         698 --701:   LOC_YD_SFMA_DRDRENR_DRDRE_SHIFT  - Offset values of DRDRE field.
                         699 --702:   LOC_YD_SFMA_DRDRENR_OPDRE_SHIFT  - Offset values of OPDRE field.
                         700 --703:   LOC_YD_SFMA_DRDRENR_ADDRE_SHIFT  - Offset values of ADDRE field.
                         701 --704: */
                         702 --705: #define LOC_YD_SFMA_DRDRENR_DRDRE           (0x00000001uL)
                         703 --706: #define LOC_YD_SFMA_DRDRENR_OPDRE           (0x00000010uL)
                         704 --707: #define LOC_YD_SFMA_DRDRENR_ADDRE           (0x00000100uL)
                         705 --708: #define LOC_YD_SFMA_DRDRENR_DRDRE_SHIFT     (0u)
                         706 --709: #define LOC_YD_SFMA_DRDRENR_OPDRE_SHIFT     (4u)
                         707 --710: #define LOC_YD_SFMA_DRDRENR_ADDRE_SHIFT     (8u)
                         708 --712: /***************************************************************************
                         709 --713:   Constant: LOC_YD_SFMA_SMDMCR
                         710 --715:   A constant for bit mask value and offset value of SMDMCR.
                         711 --717:   LOC_YD_SFMA_SMDMCR_DMCYC   - Mask values of DMCYC field.
                         712 --718:   LOC_YD_SFMA_SMDMCR_DMDB    - Mask values of DMDB field.
                         713 --719:   LOC_YD_SFMA_SMDMCR_DMCYC_SHIFT   - Offset values of DMCYC field.
                         714 --720:   LOC_YD_SFMA_SMDMCR_DMDB_SHIFT    - Offset values of DMDB field.
                         715 --721: */
                         716 --722: #define LOC_YD_SFMA_SMDMCR_DMCYC            (0x00000007uL)
                         717 --723: #define LOC_YD_SFMA_SMDMCR_DMDB             (0x00030000uL)
                         718 --724: #define LOC_YD_SFMA_SMDMCR_DMCYC_SHIFT      (0u)
                         719 --725: #define LOC_YD_SFMA_SMDMCR_DMDB_SHIFT       (16u)
                         720 --727: /***************************************************************************
                         721 --728:   Constant: LOC_YD_SFMA_SMDRENR

                                                                      Page 13
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         722 --730:   A constant for bit mask value and offset value of SMDRENR.
                         723 --732:   LOC_YD_SFMA_SMDRENR_SPIDRE - Mask values of SPIDRE field.
                         724 --733:   LOC_YD_SFMA_SMDRENR_OPDRE  - Mask values of OPDRE field.
                         725 --734:   LOC_YD_SFMA_SMDRENR_ADDRE  - Mask values of ADDRE field.
                         726 --735:   LOC_YD_SFMA_SMDRENR_SPIDRE_SHIFT - Offset values of SPIDRE field.
                         727 --736:   LOC_YD_SFMA_SMDRENR_OPDRE_SHIFT  - Offset values of OPDRE field.
                         728 --737:   LOC_YD_SFMA_SMDRENR_ADDRE_SHIFT  - Offset values of ADDRE field.
                         729 --738: */
                         730 --739: #define LOC_YD_SFMA_SMDRENR_SPIDRE          (0x00000001uL)
                         731 --740: #define LOC_YD_SFMA_SMDRENR_OPDRE           (0x00000010uL)
                         732 --741: #define LOC_YD_SFMA_SMDRENR_ADDRE           (0x00000100uL)
                         733 --742: #define LOC_YD_SFMA_SMDRENR_SPIDRE_SHIFT    (0u)
                         734 --743: #define LOC_YD_SFMA_SMDRENR_OPDRE_SHIFT     (4u)
                         735 --744: #define LOC_YD_SFMA_SMDRENR_ADDRE_SHIFT     (8u)
                         736 --746: /***************************************************************************
                         737 --747:   Constants: LOC_YD_SFMA_CMNCR_INIT_VALUE
                         738 --749:   Initial value of CMNCR register.
                         739 --750: */
                         740 --751: #define LOC_YD_SFMA_CMNCR_INIT_VALUE (                                                \
                         741 --752:                 (LOC_YD_SFMA_SPIBSC_CMNCR_SFDE << LOC_YD_SFMA_CMNCR_SFDE_SHIFT)        | \
                         742 --753:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ << LOC_YD_SFMA_CMNCR_MOIIO3_SHIFT)| \
                         743 --754:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIGH << LOC_YD_SFMA_CMNCR_MOIIO2_SHIFT)| \
                         744 --755:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ << LOC_YD_SFMA_CMNCR_MOIIO1_SHIFT)| \
                         745 --756:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ << LOC_YD_SFMA_CMNCR_MOIIO0_SHIFT)| \
                         746 --757:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ << LOC_YD_SFMA_CMNCR_IO3FV_SHIFT) | \
                         747 --758:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIGH << LOC_YD_SFMA_CMNCR_IO2FV_SHIFT) | \
                         748 --759:                 (LOC_YD_SFMA_SPIBSC_CMNCR_OUTPUT_HIZ << LOC_YD_SFMA_CMNCR_IO0FV_SHIFT) | \
                         749 --760:                 (LOC_YD_SFMA_SPIBSC_CMNCR_CPHAT_EVEN << LOC_YD_SFMA_CMNCR_CPHAT_SHIFT) | \
                         750 --761:                 (LOC_YD_SFMA_SPIBSC_CMNCR_CPHAR_EVEN << LOC_YD_SFMA_CMNCR_CPHAR_SHIFT) | \
                         751 --762:                 (LOC_YD_SFMA_SPIBSC_CMNCR_SSLP_LOW   << LOC_YD_SFMA_CMNCR_SSLP_SHIFT)  | \
                         752 --763:                 (LOC_YD_SFMA_SPIBSC_CMNCR_CPOL_LOW   << LOC_YD_SFMA_CMNCR_CPOL_SHIFT))
                         753 --765: /***************************************************************************
                         754 --766:   Constants: LOC_YD_SFMA_SSLDR_INIT_VALUE
                         755 --768:   Initial value of SSLDR register.
                         756 --769: */
                         757 --770: #define LOC_YD_SFMA_SSLDR_INIT_VALUE (                                             \
                         758 --771:                 (LOC_YD_SFMA_SPIBSC_DELAY_1SPBCLK << LOC_YD_SFMA_SSLDR_SPNDL_SHIFT) | \
                         759 --772:                 (LOC_YD_SFMA_SPIBSC_DELAY_1SPBCLK << LOC_YD_SFMA_SSLDR_SLNDL_SHIFT) | \
                         760 --773:                 (LOC_YD_SFMA_SPIBSC_DELAY_1SPBCLK << LOC_YD_SFMA_SSLDR_SCKDL_SHIFT))
                         761 --775: /***************************************************************************
                         762 --776:   Constants: LOC_YD_SFMA_DRCR_INIT_VALUE
                         763 --778:   Initial value of DRCR register.
                         764 --779: */
                         765 --780: #define LOC_YD_SFMA_DRCR_INIT_VALUE (                                                  \
                         766 --781:                 (LOC_YD_SFMA_SPIBSC_DRCR_BURST_ENABLE << LOC_YD_SFMA_DRCR_RBE_SHIFT)    | \
                         767 --782:                 (YD_SFMA_SPIBSC_SPISSL_KEEP         << LOC_YD_SFMA_DRCR_SSLE_SHIFT))
                         768 --784: /***************************************************************************
                         769 --785:   Macro: YD_SFMA_Write32
                         770 --787:   Write a value to a specified 32bit register.
                         771 --788: */
                         772 --789: #define YD_SFMA_Write32(Addr, Value) {YD_SFMA_WRITE_REG(32,(Addr), (Value));}
                         773 --791: /***************************************************************************
                         774 --792:   Macro: YD_SFMA_Read32
                         775 --794:   Read a value from a specified 32bit register.
                         776 --795: */
                         777 --796: #define YD_SFMA_Read32(Addr)         (YD_SFMA_READ32(Addr))
                         778 --799: /***************************************************************************
                         779 --800:   Section: Local functions
                         780 --801: */
                         781 --803: /***************************************************************************
                         782 --804:   Function: YD_SFMA_Modify32

                                                                      Page 14
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         783 --806:   Description:
                         784 --807:   This function modifies the 32 bit register of SFMA H/W macro.
                         785 --809:   Parameter:
                         786 --810:   Addr        - The parameter specifies the register address which added
                         787 --811:                 an offset to the base address.
                         788 --812:   Value       - The parameter specifies the Value that is written.
                         789 --813:   Bitposision - The parameter specifies the bit position that will be modified.
                         790 --814:   BitMask     - The parameter specifies the bit mask that will be cleared at
                         791 --815:                 bit position before modification.
                         792 --817:   Return Value:
                         793 --818:   void
                         794 --819: */
                         795 --820: static void YD_SFMA_Modify32(const uint32_t Addr,
                         796 --821:                               const uint32_t Value,
                         797 --822:                               const uint32_t BitPosition,
                         798 --823:                               const uint32_t BitMask);
                         799 --825: static void YD_SFMA_Modify32(const uint32_t Addr,
                         800 	.text
                         801 ..bof.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv...44.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs..5A74037A..0::
                         802 	.align	2
                         803 	.global	_YD_SFMA_Modify32..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.
                         804 _YD_SFMA_Modify32..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.:
                         805 _YD_SFMA_Modify32:
00000000 06f0            806 	mov	r6,ep
00000002 0770            807 	mov	r7,r14
00000004 0868            808 	mov	r8,r13
00000006 0960            809 	mov	r9,r12
                         810 --	    .bf
                         811 .LDW01:
                         812 --826:                               const uint32_t Value,
                         813 --827:                               const uint32_t BitPosition,
                         814 --828:                               const uint32_t BitMask)
                         815 --829: {
                         816 --830:     uint32_t reg;
                         817 --832:     reg  = YD_SFMA_READ32(Addr);
00000008 000d            818 	sld.w	0[ep],r1
                         819 --833:     reg &= ~BitMask;
0000000a 2c58            820 	not	r12,r11
0000000c 4b09            821 	and	r11,r1
                         822 --834:     reg |= (Value<<BitPosition);
0000000e ed77c258        823 	shl	r13,r14,r11
00000012 0b09            824 	or	r11,r1
                         825 --835:     YD_SFMA_WRITE32(Addr, reg);
00000014 010d            826 	sst.w	r1,0[ep]
                         827 --836: }
00000016 0000            828 	nop
                         829 --	    .ef
                         830 .LDW11:
00000018 7f00            831 	jmp	[lp]
                         832 	.type	_YD_SFMA_Modify32,@function
                         833 	.size	_YD_SFMA_Modify32,.-_YD_SFMA_Modify32
                         834 	.type	_YD_SFMA_Modify32..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.,@function
                         835 	.size	_YD_SFMA_Modify32..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.,.-_YD_SFMA_Modify32..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.
                         836 	.align	2
                         837 .LDW21:
                         838 --_reg	r1	local
                         839 
                         840 --_Addr	ep	param
                         841 --_Value	r14	param
                         842 --_BitPosition	r13	param
                         843 --_BitMask	r12	param

                                                                      Page 15
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         844 
                         845 	.section ".bss","awb"
                         846 .L32:
                         847 	.type	.L32,@object
                         848 	.size	.L32,0
                         849 	.data
                         850 	.text
                         851 
                         852 
                         853 --838: /***************************************************************************
                         854 --839:   Function: YD_SpibscWaitTend
                         855 --841:   Description:
                         856 --842:   This function waits for the data transmission completion to
                         857 --843:   the serial flash memory.
                         858 --845:   Parameter:
                         859 --846:   Unit - The parameter specifies the instance number.
                         860 --848:   Return value:
                         861 --849:   See <yd_sfma_Error_t>.
                         862 --850: */
                         863 --851: static yd_sfma_Error_t YD_SpibscWaitTend(const uint32_t Unit);
                         864 --853: static yd_sfma_Error_t YD_SpibscWaitTend(const uint32_t Unit)
                         865 	.align	2
                         866 	.align	2
                         867 	.global	_YD_SpibscWaitTend..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.
                         868 _YD_SpibscWaitTend..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.:
                         869 _YD_SpibscWaitTend:
0000001a 8007e170        870 	prepare	{r25,r26,r27,r28,r29,r31},0
0000001e 06c8            871 	mov	r6,r25
                         872 --	    .bf
                         873 .LDW31:
                         874 --854: {
                         875 --855:     yd_sfma_Error_t ret = YD_SFMA_ERR_OK;
00000020 00da            876 	mov	0,r27
                         877 --856:     uint32_t       reg_value;
                         878 --857:     uint32_t       base;
                         879 --858:     uint32_t       wait = 0;
00000022 00e2            880 	mov	0,r28
                         881 --860:     base = YD_SFMA_BASE_ADD;
00000024 40d6fff2        882 	movhi	hi(-218169344),zero,r26
                         883 --862:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR); /* dummy read */
00000028 3aef4900        884 	ld.w	72[r26],r29
                         885 --863:     YD_SFMA_Sys_SyncPeripheral();
                         886 	jarl	_YD_SFMA_Sys_SyncPeripheral,lp
                         886 <EXPANSION BEGIN>
                         886 jarl22 _YD_SFMA_Sys_SyncPeripheral , lp 
0000002c 80ff0000*       886 <EXPANSION END>
                         887 --864:     do
                         888 --line864
                         889 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.1::
                         890 .LDWlin1:
00000030 0000            891 	nop
                         892 .L60:
                         893 --865:     {
                         894 --866:         /* wait for transfer-end */
                         895 --867:         if (wait > YD_SFMA_TRANSFER_END_WAIT)
00000032 210640420f00    896 	mov	1000000,r1
00000038 e1e1            897 	cmp	r1,r28
0000003a b305*           898 	bnh	.L61
                         899 --868:         {
                         900 --869:             ret = YD_SFMA_ERR_FATAL_HW;
                         901 --line869

                                                                      Page 16
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         902 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.2::
                         903 .LDWlin2:
0000003c 07da            904 	mov	7,r27
                         905 --870:             break;
0000003e 850d*           906 	br	.L63
                         907 .L61:
                         908 --871:         }
                         909 --872:         wait++;
                         910 --line872
                         911 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.3::
                         912 .LDWlin3:
00000040 41e2            913 	add	1,r28
                         914 --873:         reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
00000042 3aef4900        915 	ld.w	72[r26],r29
                         916 --874:         reg_value = (reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT;
00000046 ddee0100        917 	andi	1,r29,r29
0000004a 61ea            918 	cmp	1,r29
0000004c baf5*           919 	bne	.L60
                         920 .L63:
                         921 --875:     } while (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END);
                         922 --877:     return ret;
                         923 --line877
                         924 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.4::
                         925 .LDWlin4:
0000004e 1b50            926 	mov	r27,r10
                         927 --	    .ef
                         928 .LDW41:
00000050 4006ff70        929 	dispose	0,{r25,r26,r27,r28,r29,r31},[lp]
                         930 	.type	_YD_SpibscWaitTend,@function
                         931 	.size	_YD_SpibscWaitTend,.-_YD_SpibscWaitTend
                         932 	.type	_YD_SpibscWaitTend..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.,@function
                         933 	.size	_YD_SpibscWaitTend..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.,.-_YD_SpibscWaitTend..D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.
                         934 	.align	2
                         935 .LDW51:
                         936 --_ret	r27	local
                         937 --_reg_value	r29	local
                         938 --_base	r26	local
                         939 --_wait	r28	local
                         940 
                         941 --_Unit	r25	param
                         942 
                         943 	.section ".bss","awb"
                         944 .L98:
                         945 	.type	.L98,@object
                         946 	.size	.L98,0
                         947 	.data
                         948 	.text
                         949 
                         950 --878: }
                         951 
                         952 --880: /***************************************************************************
                         953 --881:   Section: Global Functions
                         954 --882: */
                         955 --884: /***************************************************************************
                         956 --885:   Function: YD_SFMA_SpibscCommonInit
                         957 --887:   see: <yd_sfma_spibsc.h>
                         958 --888: */
                         959 --889: yd_sfma_Error_t YD_SFMA_SpibscCommonInit(const uint32_t Unit,
                         960 	.align	2
                         961 	.align	2
                         962 	.global	_YD_SFMA_SpibscCommonInit

                                                                      Page 17
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                         963 _YD_SFMA_SpibscCommonInit:
00000054 8407e170        964 	prepare	{r25,r26,r27,r28,r29,r31},2
00000058 63370500        965 	st.w	r6,4[sp]
0000005c c966ff00        966 	andi	255,r9,r12
00000060 43670300        967 	st.b	r12,3[sp]
00000064 c85eff00        968 	andi	255,r8,r11
00000068 435f0200        969 	st.b	r11,2[sp]
0000006c 07c8            970 	mov	r7,r25
                         971 --	    .bf
                         972 .LDW61:
                         973 --890:                                        const uint32_t Bsz,
                         974 --891:                                        const uint8_t  Spbr,
                         975 --892:                                        const uint8_t  Brdv,
                         976 --893:                                        const uint8_t  DataWidth,
                         977 --894:                                        const uint8_t  TransferMode)
                         978 --895: {
                         979 --896:     yd_sfma_Error_t ret;
                         980 --897:     uint32_t       reg_value;
                         981 --898:     uint32_t       write_value;
                         982 --899:     uint32_t       base;
                         983 --900:     uint32_t       bitrate;
                         984 --902:     base = YD_SFMA_BASE_ADD;
0000006e 40e6fff2        985 	movhi	hi(-218169344),zero,r28
                         986 --903: 	
                         987 --904:     /* PORT setting of SPIBSC */
                         988 --905:     ret = YD_SFMA_ERR_OK;
00000072 00da            989 	mov	0,r27
                         990 --906:     if (ret == YD_SFMA_ERR_OK)
00000074 e0d9            991 	cmp	zero,r27
00000076 ba2d*           992 	bne	.L151
                         993 --907:     {
                         994 --908:         reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
                         995 --line908
                         996 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.5::
                         997 .LDWlin5:
00000078 3cd74900        998 	ld.w	72[r28],r26
                         999 --909:         reg_value = ((reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT);
0000007c dad60100       1000 	andi	1,r26,r26
                        1001 --910:         if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END)
00000080 61d2           1002 	cmp	1,r26
00000082 b205*          1003 	be	.L153
                        1004 --911:         {
                        1005 --912:             ret = YD_SFMA_ERR_FATAL_HW;
                        1006 --line912
                        1007 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.6::
                        1008 .LDWlin6:
00000084 07da           1009 	mov	7,r27
00000086 b525*          1010 	br	.L151
                        1011 .L153:
                        1012 --913:         }
                        1013 --914:         else
                        1014 --915:         {
                        1015 --916:             /* The initialization of the common controller */
                        1016 --917:             write_value = (LOC_YD_SFMA_CMNCR_INIT_VALUE | (Bsz << LOC_YD_SFMA_CMNCR_BSZ_SHIFT));
                        1017 --line917
                        1018 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.7::
                        1019 .LDWlin7:
00000088 210620d3df01   1020 	mov	31445792,r1
0000008e 19e8           1021 	mov	r25,r29
00000090 01e9           1022 	or	r1,r29
                        1023 --918:             if (TransferMode == YD_SFMA_SPIBSC_DDR_TRANS)

                                                                      Page 18
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
00000092 830f2500       1024 	ld.bu	36[sp],r1
00000096 610a           1025 	cmp	1,r1
00000098 ca05*          1026 	bne	.L156
                        1027 --919:             {
                        1028 --920:                 write_value &= ~(LOC_YD_SFMA_CMNCR_CPHAR | LOC_YD_SFMA_CMNCR_CPHAT);
                        1029 --line920
                        1030 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.8::
                        1031 .LDWlin8:
0000009a 200e9fff       1032 	movea	-97,zero,r1
0000009e 41e9           1033 	and	r1,r29
                        1034 .L156:
                        1035 --921:             }
                        1036 --922:             YD_SFMA_Write32((base + LOC_YD_SFMA_CMNCR), write_value);
000000a0 7cef0100       1037 	st.w	r29,0[r28]
                        1038 --923:             YD_SFMA_Modify32((base + LOC_YD_SFMA_DRCR),
000000a4 1c360c00       1039 	addi	12,r28,r6
000000a8 013a           1040 	mov	1,r7
000000aa 0942           1041 	mov	9,r8
000000ac 204e0002       1042 	movea	512,zero,r9
                        1043 	jarl	_YD_SFMA_Modify32,lp
                        1043 <EXPANSION BEGIN>
                        1043 jarl22 _YD_SFMA_Modify32 , lp 
000000b0 bfff50ff*      1043 <EXPANSION END>
                        1044 --924:                               LOC_YD_SFMA_SPIBSC_DRCR_RCF_EXE,
                        1045 --925:                               LOC_YD_SFMA_DRCR_RCF_SHIFT,
                        1046 --926:                               LOC_YD_SFMA_DRCR_RCF);
                        1047 --928:             /* The initialization of the SSL delay */
                        1048 --929:             YD_SFMA_Write32((base + LOC_YD_SFMA_SSLDR), LOC_YD_SFMA_SSLDR_INIT_VALUE);
                        1049 --line929
                        1050 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.9::
                        1051 .LDWlin9:
000000b4 7c070500       1052 	st.w	zero,4[r28]
                        1053 --931:             /* ---- The initialization of the bit rate ---- */
                        1054 --932:             bitrate = (((uint32_t)Spbr << LOC_YD_SFMA_SPBCR_SPBR_SHIFT) |
000000b8 83770300       1055 	ld.bu	2[sp],r14
000000bc 235e0100       1056 	movea	1,sp,r11
000000c0 8b0f0300       1057 	ld.bu	2[r11],r1
000000c4 c872           1058 	shl	8,r14
000000c6 0e09           1059 	or	r14,r1
                        1060 --933:                        ((uint32_t)Brdv << LOC_YD_SFMA_SPBCR_BRDV_SHIFT));
                        1061 --934:             YD_SFMA_Write32((base + LOC_YD_SFMA_SPBCR), bitrate);
000000c8 7c0f0900       1062 	st.w	r1,8[r28]
                        1063 .L151:
                        1064 --935:         }
                        1065 --936:     }
                        1066 --938:     return ret;
000000cc 1b50           1067 	mov	r27,r10
                        1068 --	    .ef
                        1069 .LDW71:
000000ce 4406ff70       1070 	dispose	2,{r25,r26,r27,r28,r29,r31},[lp]
                        1071 	.type	_YD_SFMA_SpibscCommonInit,@function
                        1072 	.size	_YD_SFMA_SpibscCommonInit,.-_YD_SFMA_SpibscCommonInit
                        1073 	.align	2
                        1074 .LDW81:
                        1075 --_ret	r27	local
                        1076 --_reg_value	r26	local
                        1077 --_write_value	r29	local
                        1078 --_base	r28	local
                        1079 --_bitrate	r1	local
                        1080 
                        1081 --_Unit	4[sp]	param

                                                                      Page 19
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1082 --_Bsz	r25	param
                        1083 --_Spbr	2[sp]	param
                        1084 --_Brdv	3[sp]	param
                        1085 --_DataWidth	32[sp]	param
                        1086 --_TransferMode	36[sp]	param
                        1087 
                        1088 	.section ".bss","awb"
                        1089 .L198:
                        1090 	.type	.L198,@object
                        1091 	.size	.L198,0
                        1092 	.data
                        1093 	.text
                        1094 
                        1095 --939: }
                        1096 
                        1097 --942: /***************************************************************************
                        1098 --943:   Section: Global Functions
                        1099 --944: */
                        1100 --946: /***************************************************************************
                        1101 --947:   Function: YD_SFMA_SpibscReadReg
                        1102 --949:   see: <yd_sfma_spibsc.h>
                        1103 --950: */
                        1104 --951: yd_sfma_Error_t YD_SFMA_SpibscReadReg(void)
                        1105 	.align	2
                        1106 	.align	2
                        1107 	.global	_YD_SFMA_SpibscReadReg
                        1108 _YD_SFMA_SpibscReadReg:
                        1109 --	    .bf
                        1110 .LDW91:
                        1111 --952: {
                        1112 --953:     uint32_t       reg_value;
                        1113 --954:     uint32_t       base;
                        1114 --956:     base = YD_SFMA_BASE_ADD;
000000d2 40f6fff2       1115 	movhi	hi(-218169344),zero,ep
                        1116 --957: 	
                        1117 --958:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNCR);
000000d6 000d           1118 	sld.w	0[ep],r1
                        1119 --959:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
000000d8 240d           1120 	sld.w	72[ep],r1
                        1121 --960:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_SSLDR);
000000da 020d           1122 	sld.w	4[ep],r1
                        1123 --961:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_SPBCR);
000000dc 040d           1124 	sld.w	8[ep],r1
                        1125 --962: 	
                        1126 --963:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DRCR);
000000de 060d           1127 	sld.w	12[ep],r1
                        1128 --964:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DRCMR);	
000000e0 080d           1129 	sld.w	16[ep],r1
                        1130 --965:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DREAR);
000000e2 0a0d           1131 	sld.w	20[ep],r1
                        1132 --966:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DROPR);
000000e4 0c0d           1133 	sld.w	24[ep],r1
                        1134 --967:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DRENR);	
000000e6 0e0d           1135 	sld.w	28[ep],r1
                        1136 --968:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DRDMCR);
000000e8 2c0d           1137 	sld.w	88[ep],r1
                        1138 --969:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DRDRENR);
000000ea 2e0d           1139 	sld.w	92[ep],r1
                        1140 --970: 	
                        1141 --971:     return YD_SFMA_ERR_OK;
000000ec 0052           1142 	mov	0,r10

                                                                      Page 20
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1143 --	    .ef
                        1144 .LDW02:
000000ee 7f00           1145 	jmp	[lp]
                        1146 	.type	_YD_SFMA_SpibscReadReg,@function
                        1147 	.size	_YD_SFMA_SpibscReadReg,.-_YD_SFMA_SpibscReadReg
                        1148 	.align	2
                        1149 .LDW12:
                        1150 --_reg_value	r1	local
                        1151 --_base	ep	local
                        1152 
                        1153 	.section ".bss","awb"
                        1154 .L288:
                        1155 	.type	.L288,@object
                        1156 	.size	.L288,0
                        1157 	.data
                        1158 	.text
                        1159 
                        1160 --972: }
                        1161 
                        1162 --974: /***************************************************************************
                        1163 --975:   Function: YD_SFMA_SpibscDrInit
                        1164 --977:   see: <yd_sfma_spibsc.h>
                        1165 --978: */
                        1166 --979: yd_sfma_Error_t YD_SFMA_SpibscDrInit(const uint32_t                   Unit,
                        1167 	.align	2
                        1168 	.align	2
                        1169 	.global	_YD_SFMA_SpibscDrInit
                        1170 _YD_SFMA_SpibscDrInit:
000000f0 8c07e170       1171 	prepare	{r25,r26,r27,r28,r29,r31},6
000000f4 63371500       1172 	st.w	r6,20[sp]
000000f8 07e8           1173 	mov	r7,r29
                        1174 --	    .bf
                        1175 .LDW22:
                        1176 --980:                                    const yd_sfma_SpiConfig_t * const SpiConfig)
                        1177 --981: {
                        1178 --982:     yd_sfma_Error_t ret = YD_SFMA_ERR_OK;
000000fa 63070500       1179 	st.w	zero,4[sp]
000000fe 005a           1180 	mov	0,r11
                        1181 --983:     uint32_t       reg_value;
                        1182 --984:     uint32_t       write_value;
                        1183 --985:     uint32_t       base;
                        1184 --986:     uint32_t       command;
                        1185 --987:     uint32_t       opd_enable;
                        1186 --988:     uint32_t       dmycyc_num;
                        1187 --989:     uint32_t       dmycyc_bit_size;
                        1188 --990:     uint32_t       drcr;
                        1189 --992:     if (SpiConfig == R_NULL)
00000100 e0e9           1190 	cmp	zero,r29
00000102 ea05*          1191 	bne	.L338
                        1192 --993:     {
                        1193 --994:         ret = YD_SFMA_ERR_PARAM_INCORRECT;
                        1194 --line994
                        1195 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.10::
                        1196 .LDWlin10:
00000104 025a           1197 	mov	2,r11
00000106 635f0500       1198 	st.w	r11,4[sp]
0000010a 8007f001*      1199 	br	.L340
                        1200 .L338:
                        1201 --995:     }
                        1202 --996:     else
                        1203 --997:     {

                                                                      Page 21
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1204 --998:         base = YD_SFMA_BASE_ADD;
                        1205 --line998
                        1206 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.11::
                        1207 .LDWlin11:
0000010e 40cefff2       1208 	movhi	hi(-218169344),zero,r25
                        1209 --999:         reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
00000112 395f4900       1210 	ld.w	72[r25],r11
00000116 635f1100       1211 	st.w	r11,16[sp]
                        1212 --1000:         reg_value = (reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT;
0000011a 235f1100       1213 	ld.w	16[sp],r11
0000011e cb5e0100       1214 	andi	1,r11,r11
00000122 635f1100       1215 	st.w	r11,16[sp]
                        1216 --1001:         if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END)
00000126 235f1100       1217 	ld.w	16[sp],r11
0000012a 615a           1218 	cmp	1,r11
0000012c e205*          1219 	be	.L341
                        1220 --1002:         {
                        1221 --1003:             ret = YD_SFMA_ERR_FATAL_HW;
                        1222 --line1003
                        1223 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.12::
                        1224 .LDWlin12:
0000012e 075a           1225 	mov	7,r11
00000130 635f0500       1226 	st.w	r11,4[sp]
00000134 8007c601*      1227 	br	.L340
                        1228 .L341:
                        1229 --1004:         }
                        1230 --1005:         else
                        1231 --1006:         {
                        1232 --1007:             /* set parameter */
                        1233 --1008:             if (SpiConfig->DataWidth == YD_SFMA_SPIBSC_4BIT)
                        1234 --line1008
                        1235 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.13::
                        1236 .LDWlin13:
00000138 9d0f7100       1237 	ld.bu	112[r29],r1
0000013c 620a           1238 	cmp	2,r1
0000013e da1d*          1239 	bne	.L344
                        1240 --1009:             {
                        1241 --1010:                 /* command */
                        1242 --1011:                 if (SpiConfig->TransferMode == YD_SFMA_SPIBSC_SDR_TRANS)
                        1243 --line1011
                        1244 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.14::
                        1245 .LDWlin14:
00000140 bd0f7100       1246 	ld.bu	113[r29],r1
00000144 e009           1247 	cmp	zero,r1
00000146 ea05*          1248 	bne	.L346
                        1249 --1012:                 {
                        1250 --1013:                     command = SpiConfig->Command.ReadSdrIoQuad;
                        1251 --line1013
                        1252 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.15::
                        1253 .LDWlin15:
00000148 9ddf5900       1254 	ld.bu	88[r29],r27
                        1255 --1014:                     /* dummy cycle number */
                        1256 --1015:                     dmycyc_num = SpiConfig->Command.ReadSdrIoQuadDummyCycle;
0000014c 3dd74100       1257 	ld.w	64[r29],r26
00000150 d505*          1258 	br	.L348
                        1259 .L346:
                        1260 --1017:                 }
                        1261 --1018:                 else
                        1262 --1019:                 {
                        1263 --1020:                     command = SpiConfig->Command.ReadDdrIoQuad;
                        1264 --line1020

                                                                      Page 22
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1265 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.16::
                        1266 .LDWlin16:
00000152 bddf5d00       1267 	ld.bu	93[r29],r27
                        1268 --1021:                     /* dummy cycle number */
                        1269 --1022:                     dmycyc_num = SpiConfig->Command.ReadDdrIoQuadDummyCycle;
00000156 3dd74d00       1270 	ld.w	76[r29],r26
                        1271 .L348:
                        1272 --1023:                 }
                        1273 --1025:                 /* size of bits that HI-Z during the dummy cycle */
                        1274 --1026:                 dmycyc_bit_size = YD_SFMA_SPIBSC_4BIT;
0000015a 025a           1275 	mov	2,r11
0000015c 635f0900       1276 	st.w	r11,8[sp]
                        1277 --1028:                 /* Performance enhance mode needs the option byte */
                        1278 --1029:                 if(SpiConfig->PerformanceEnMode == YD_SFMA_PER_EN_MODE_ENABLE)
00000160 3d0f7900       1279 	ld.w	120[r29],r1
00000164 610a           1280 	cmp	1,r1
00000166 da05*          1281 	bne	.L349
                        1282 --1030:                 {
                        1283 --1031:                     /* enable option byte 3 */
                        1284 --1032:                     opd_enable = YD_SFMA_SPIBSC_OUTPUT_SPID_32;
                        1285 --line1032
                        1286 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.17::
                        1287 .LDWlin17:
00000168 0f5a           1288 	mov	15,r11
0000016a 635f0100       1289 	st.w	r11,0[sp]
0000016e 8535*          1290 	br	.L352
                        1291 .L349:
                        1292 --1033:                 }
                        1293 --1034:                 else
                        1294 --1035:                 {
                        1295 --1036:                     /* optional data none */
                        1296 --1037:                     opd_enable = YD_SFMA_SPIBSC_OUTPUT_DISABLE;
                        1297 --line1037
                        1298 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.18::
                        1299 .LDWlin18:
00000170 63070100       1300 	st.w	zero,0[sp]
00000174 005a           1301 	mov	0,r11
00000176 c52d*          1302 	br	.L352
                        1303 .L344:
                        1304 --1038:                 }
                        1305 --1039:             }
                        1306 --1040:             else if (SpiConfig->DataWidth == YD_SFMA_SPIBSC_2BIT)
                        1307 --line1040
                        1308 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.19::
                        1309 .LDWlin19:
00000178 9d0f7100       1310 	ld.bu	112[r29],r1
0000017c 610a           1311 	cmp	1,r1
0000017e da15*          1312 	bne	.L353
                        1313 --1041:             {
                        1314 --1042:                 /* command */
                        1315 --1043:                 if (SpiConfig->TransferMode == YD_SFMA_SPIBSC_SDR_TRANS)
                        1316 --line1043
                        1317 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.20::
                        1318 .LDWlin20:
00000180 bd0f7100       1319 	ld.bu	113[r29],r1
00000184 e009           1320 	cmp	zero,r1
00000186 ea05*          1321 	bne	.L355
                        1322 --1044:                 {
                        1323 --1045:                     command = SpiConfig->Command.ReadSdrIoDual;
                        1324 --line1045
                        1325 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.21::

                                                                      Page 23
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1326 .LDWlin21:
00000188 bddf5700       1327 	ld.bu	87[r29],r27
                        1328 --1046:                     /* dummy cycle number */
                        1329 --1047:                     dmycyc_num = SpiConfig->Command.ReadSdrIoDualDummyCycle;
0000018c 3dd73d00       1330 	ld.w	60[r29],r26
00000190 d505*          1331 	br	.L357
                        1332 .L355:
                        1333 --1048:                 }
                        1334 --1049:                 else
                        1335 --1050:                 {
                        1336 --1051:                     command = SpiConfig->Command.ReadDdrIoDual;
                        1337 --line1051
                        1338 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.22::
                        1339 .LDWlin22:
00000192 9ddf5d00       1340 	ld.bu	92[r29],r27
                        1341 --1052:                     /* dummy cycle number */
                        1342 --1053:                     dmycyc_num = SpiConfig->Command.ReadDdrIoDualDummyCycle;
00000196 3dd74900       1343 	ld.w	72[r29],r26
                        1344 .L357:
                        1345 --1054:                 }
                        1346 --1056:                 /* size of bits that HI-Z during the dummy cycle */
                        1347 --1057:                 dmycyc_bit_size = YD_SFMA_SPIBSC_2BIT;
0000019a 015a           1348 	mov	1,r11
0000019c 635f0900       1349 	st.w	r11,8[sp]
                        1350 --1059:                 /* optional data */
                        1351 --1060:                 opd_enable = YD_SFMA_SPIBSC_OUTPUT_DISABLE;
000001a0 63070100       1352 	st.w	zero,0[sp]
000001a4 005a           1353 	mov	0,r11
000001a6 c515*          1354 	br	.L352
                        1355 .L353:
                        1356 --1061:             }
                        1357 --1062:             else
                        1358 --1063:             {
                        1359 --1064:                 /* command */
                        1360 --1065:                 if (SpiConfig->TransferMode == YD_SFMA_SPIBSC_SDR_TRANS)
                        1361 --line1065
                        1362 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.23::
                        1363 .LDWlin23:
000001a8 bd0f7100       1364 	ld.bu	113[r29],r1
000001ac e009           1365 	cmp	zero,r1
000001ae ea05*          1366 	bne	.L359
                        1367 --1066:                 {
                        1368 --1067:                     command = SpiConfig->Command.ReadSdr;
                        1369 --line1067
                        1370 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.24::
                        1371 .LDWlin24:
000001b0 9ddf5500       1372 	ld.bu	84[r29],r27
                        1373 --1068:                     /* dummy cycle number */
                        1374 --1069:                     dmycyc_num = SpiConfig->Command.ReadSdrDummyCycle;
000001b4 3dd73900       1375 	ld.w	56[r29],r26
000001b8 d505*          1376 	br	.L361
                        1377 .L359:
                        1378 --1070:                 }
                        1379 --1071:                 else
                        1380 --1072:                 {
                        1381 --1073:                     command = SpiConfig->Command.ReadDdr;
                        1382 --line1073
                        1383 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.25::
                        1384 .LDWlin25:
000001ba bddf5900       1385 	ld.bu	89[r29],r27
                        1386 --1074:                     /* dummy cycle number */

                                                                      Page 24
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1387 --1075:                     dmycyc_num = SpiConfig->Command.ReadDdrDummyCycle;
000001be 3dd74500       1388 	ld.w	68[r29],r26
                        1389 .L361:
                        1390 --1076:                 }
                        1391 --1078:                 /* size of bits that HI-Z during the dummy cycle */
                        1392 --1079:                 dmycyc_bit_size = YD_SFMA_SPIBSC_1BIT;
000001c2 63070900       1393 	st.w	zero,8[sp]
000001c6 005a           1394 	mov	0,r11
                        1395 --1081:                 /* optional data */
                        1396 --1082:                 opd_enable = YD_SFMA_SPIBSC_OUTPUT_DISABLE;
000001c8 63070100       1397 	st.w	zero,0[sp]
000001cc 005a           1398 	mov	0,r11
                        1399 .L352:
                        1400 --1083:             }
                        1401 --1085:             if (command != YD_SFMA_NOT_SUPPORT_COMMAND)
000001ce 1b0601ff       1402 	addi	-255,r27,zero
000001d2 e2072301*      1403 	be	.L362
                        1404 --1086:             {
                        1405 --1087:                 /* External Address mode */
                        1406 --1088:                 YD_SFMA_Modify32((base + LOC_YD_SFMA_CMNCR),
                        1407 --line1088
                        1408 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.26::
                        1409 .LDWlin26:
000001d6 1930           1410 	mov	r25,r6
000001d8 003a           1411 	mov	0,r7
000001da 20461f00       1412 	movea	31,zero,r8
000001de 404e0080       1413 	movhi	hi(-2147483648),zero,r9
                        1414 	jarl	_YD_SFMA_Modify32,lp
                        1414 <EXPANSION BEGIN>
                        1414 jarl22 _YD_SFMA_Modify32 , lp 
000001e2 bfff1efe*      1414 <EXPANSION END>
                        1415 --1089:                                   LOC_YD_SFMA_SPIBSC_CMNCR_MD_EXTRD,
                        1416 --1090:                                   LOC_YD_SFMA_CMNCR_MD_SHIFT,
                        1417 --1091:                                   LOC_YD_SFMA_CMNCR_MD);
                        1418 --1093:                 drcr = LOC_YD_SFMA_DRCR_INIT_VALUE;
                        1419 --line1093
                        1420 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.27::
                        1421 .LDWlin27:
000001e6 205e0101       1422 	movea	257,zero,r11
000001ea 635f0d00       1423 	st.w	r11,12[sp]
                        1424 --1095:                 if (SpiConfig->Cachemode != (uint32_t)YD_SFMA_CACHE_OFF)
000001ee 3d0f7500       1425 	ld.w	116[r29],r1
000001f2 e009           1426 	cmp	zero,r1
000001f4 d20d*          1427 	be	.L364
                        1428 --1096:                 {
                        1429 --1097:                     drcr |= ((LOC_YD_SFMA_SPIBSC_DRCR_BFM_BURST << LOC_YD_SFMA_DRCR_BFM_SHIFT) |
                        1430 --line1097
                        1431 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.28::
                        1432 .LDWlin28:
000001f6 3d0f7500       1433 	ld.w	116[r29],r1
000001fa 407600e0       1434 	movhi	hi(-536870912),zero,r14
000001fe 235f0d00       1435 	ld.w	12[sp],r11
00000202 5f0a           1436 	add	-1,r1
00000204 d00a           1437 	shl	16,r1
00000206 0e09           1438 	or	r14,r1
00000208 0159           1439 	or	r1,r11
0000020a 635f0d00       1440 	st.w	r11,12[sp]
                        1441 .L364:
                        1442 --1098:                              ((SpiConfig->Cachemode - 1u)    << LOC_YD_SFMA_DRCR_RBURST_SHIFT));
                        1443 --1099:                 }
                        1444 --1101:                 YD_SFMA_Write32((base + LOC_YD_SFMA_DRCR), drcr);

                                                                      Page 25
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
0000020e 235f0d00       1445 	ld.w	12[sp],r11
00000212 795f0d00       1446 	st.w	r11,12[r25]
                        1447 --1103:                 /* if not continuous address it negeted */
                        1448 --1105:                 /* ---- Command ---- */
                        1449 --1106:                 /* Command */
                        1450 --1107:                 write_value = ((command                      << LOC_YD_SFMA_DRCMR_CMD_SHIFT) |
00000216 1be0           1451 	mov	r27,r28
00000218 d0e2           1452 	shl	16,r28
                        1453 --1108:                                (YD_SFMA_SPIBSC_OUTPUT_DISABLE << LOC_YD_SFMA_SMCMR_OCMD_SHIFT));
                        1454 --1109:                 YD_SFMA_Write32((base + LOC_YD_SFMA_DRCMR), write_value);
0000021a 79e71100       1455 	st.w	r28,16[r25]
                        1456 --1111:                 /* we don't send out the command in performance enhance mode (CDE)*/
                        1457 --1112:                 if(SpiConfig->PerformanceEnMode == YD_SFMA_PER_EN_MODE_ENABLE)
0000021e 3d0f7900       1458 	ld.w	120[r29],r1
00000222 610a           1459 	cmp	1,r1
00000224 fa1d*          1460 	bne	.L366
                        1461 --1113:                 {
                        1462 --1114:                     /* The initialization of the data read enable setting */
                        1463 --1115:                     write_value = ((YD_SFMA_SPIBSC_4BIT           << LOC_YD_SFMA_DRENR_CDB_SHIFT)  |
                        1464 --line1115
                        1465 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.29::
                        1466 .LDWlin29:
00000226 9d0f7100       1467 	ld.bu	112[r29],r1
0000022a 40760080       1468 	movhi	hi(-2147483648),zero,r14
0000022e d80a           1469 	shl	24,r1
00000230 0e09           1470 	or	r14,r1
00000232 9d777100       1471 	ld.bu	112[r29],r14
00000236 d472           1472 	shl	20,r14
00000238 0171           1473 	or	r1,r14
0000023a 9d0f7100       1474 	ld.bu	112[r29],r1
0000023e d00a           1475 	shl	16,r1
00000240 0e09           1476 	or	r14,r1
00000242 9d777100       1477 	ld.bu	112[r29],r14
00000246 dc72           1478 	shl	28,r14
00000248 0171           1479 	or	r1,r14
0000024a 9d0f7300       1480 	ld.bu	114[r29],r1
0000024e 8e760080       1481 	ori	32768,r14,r14
00000252 c80a           1482 	shl	8,r1
00000254 0e09           1483 	or	r14,r1
00000256 23770100       1484 	ld.w	0[sp],r14
0000025a c472           1485 	shl	4,r14
0000025c 0ee0           1486 	mov	r14,r28
0000025e 01e1           1487 	or	r1,r28
00000260 e515*          1488 	br	.L368
                        1489 .L366:
                        1490 --1116:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_ADB_SHIFT)  |
                        1491 --1117:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_OPDB_SHIFT) |
                        1492 --1118:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_DRDB_SHIFT) |
                        1493 --1119:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_OCDB_SHIFT) |
                        1494 --1120:                                 (YD_SFMA_SPIBSC_DUMMY_CYC_ENABLE  << LOC_YD_SFMA_DRENR_DME_SHIFT)  |
                        1495 --1121:                                 (YD_SFMA_SPIBSC_OUTPUT_DISABLE    << LOC_YD_SFMA_DRENR_CDE_SHIFT)  |
                        1496 --1122:                                 (YD_SFMA_SPIBSC_OUTPUT_DISABLE     << LOC_YD_SFMA_DRENR_OCDE_SHIFT) |
                        1497 --1123:                                 ((uint32_t)SpiConfig->AddressMode << LOC_YD_SFMA_DRENR_ADE_SHIFT)  |
                        1498 --1124:                                 (opd_enable                       << LOC_YD_SFMA_DRENR_OPDE_SHIFT));
                        1499 --1125:                 }
                        1500 --1126:                 else
                        1501 --1127:                 {
                        1502 --1128:                     /* The initialization of the data read enable setting */
                        1503 --1129:                     write_value = ((YD_SFMA_SPIBSC_1BIT           << LOC_YD_SFMA_DRENR_CDB_SHIFT)  |
                        1504 --line1129
                        1505 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.30::

                                                                      Page 26
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1506 .LDWlin30:
00000262 9d0f7100       1507 	ld.bu	112[r29],r1
00000266 0170           1508 	mov	r1,r14
00000268 d472           1509 	shl	20,r14
0000026a d80a           1510 	shl	24,r1
0000026c 0171           1511 	or	r1,r14
0000026e 9d0f7100       1512 	ld.bu	112[r29],r1
00000272 d00a           1513 	shl	16,r1
00000274 0e09           1514 	or	r14,r1
00000276 817600c0       1515 	ori	49152,r1,r14
0000027a 9d0f7300       1516 	ld.bu	114[r29],r1
0000027e c80a           1517 	shl	8,r1
00000280 0e09           1518 	or	r14,r1
00000282 23770100       1519 	ld.w	0[sp],r14
00000286 c472           1520 	shl	4,r14
00000288 0ee0           1521 	mov	r14,r28
0000028a 01e1           1522 	or	r1,r28
                        1523 .L368:
                        1524 --1130:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_ADB_SHIFT)  |
                        1525 --1131:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_OPDB_SHIFT) |
                        1526 --1132:                                ((uint32_t)SpiConfig->DataWidth   << LOC_YD_SFMA_DRENR_DRDB_SHIFT) |
                        1527 --1133:                                 (YD_SFMA_SPIBSC_DUMMY_CYC_ENABLE  << LOC_YD_SFMA_DRENR_DME_SHIFT)  |
                        1528 --1134:                                 (YD_SFMA_SPIBSC_OUTPUT_ENABLE     << LOC_YD_SFMA_DRENR_CDE_SHIFT)  |
                        1529 --1135:                                 (YD_SFMA_SPIBSC_OUTPUT_DISABLE    << LOC_YD_SFMA_DRENR_OCDE_SHIFT) |
                        1530 --1136:                                 ((uint32_t)SpiConfig->AddressMode << LOC_YD_SFMA_DRENR_ADE_SHIFT)  |
                        1531 --1137:                                 (opd_enable                       << LOC_YD_SFMA_DRENR_OPDE_SHIFT));
                        1532 --1138:                 }
                        1533 --1141:                 YD_SFMA_Write32((base + LOC_YD_SFMA_DRENR), write_value);
0000028c 79e71d00       1534 	st.w	r28,28[r25]
                        1535 --1143:                 /* ---- Option Data ---- */
                        1536 --1145:                 /* option byte 3 required in performance enhance mode */
                        1537 --1146:                 if(SpiConfig->PerformanceEnMode == YD_SFMA_PER_EN_MODE_ENABLE)
00000290 3d0f7900       1538 	ld.w	120[r29],r1
00000294 610a           1539 	cmp	1,r1
00000296 ea05*          1540 	bne	.L369
                        1541 --1147:                 {
                        1542 --1148:                     YD_SFMA_Write32((base + LOC_YD_SFMA_DROPR), 0xA5000000uL);
                        1543 --line1148
                        1544 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.31::
                        1545 .LDWlin31:
00000298 400e00a5       1546 	movhi	hi(-1526726656),zero,r1
0000029c 790f1900       1547 	st.w	r1,24[r25]
000002a0 b505*          1548 	br	.L371
                        1549 .L369:
                        1550 --1149:                 }
                        1551 --1150:                 else
                        1552 --1151:                 {
                        1553 --1152:                     YD_SFMA_Write32((base + LOC_YD_SFMA_DROPR), 0uL);
                        1554 --line1152
                        1555 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.32::
                        1556 .LDWlin32:
000002a2 79071900       1557 	st.w	zero,24[r25]
                        1558 .L371:
                        1559 --1153:                 }
                        1560 --1155:                 /* Set data read dummycycle */
                        1561 --1156:                 if (dmycyc_num == YD_SFMA_DUMMY_0CYC)
000002a6 68d2           1562 	cmp	8,r26
000002a8 aa0d*          1563 	bne	.L372
                        1564 --1157:                 {
                        1565 --1158:                     YD_SFMA_Modify32((base + LOC_YD_SFMA_DRENR),
                        1566 --line1158

                                                                      Page 27
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1567 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.33::
                        1568 .LDWlin33:
000002aa 19361c00       1569 	addi	28,r25,r6
000002ae 003a           1570 	mov	0,r7
000002b0 0f42           1571 	mov	15,r8
000002b2 804e0080       1572 	ori	32768,zero,r9
                        1573 	jarl	_YD_SFMA_Modify32,lp
                        1573 <EXPANSION BEGIN>
                        1573 jarl22 _YD_SFMA_Modify32 , lp 
000002b6 bfff4afd*      1573 <EXPANSION END>
000002ba e50d*          1574 	br	.L374
                        1575 .L372:
                        1576 --1159:                                       YD_SFMA_SPIBSC_DUMMY_CYC_DISABLE,
                        1577 --1160:                                       LOC_YD_SFMA_DRENR_DME_SHIFT,
                        1578 --1161:                                       LOC_YD_SFMA_DRENR_DME);
                        1579 --1162:                 }
                        1580 --1163:                 else
                        1581 --1164:                 {
                        1582 --1165:                     /* option byte required in performance enhance mode */
                        1583 --1166:                     if(SpiConfig->PerformanceEnMode == YD_SFMA_PER_EN_MODE_ENABLE)
                        1584 --line1166
                        1585 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.34::
                        1586 .LDWlin34:
000002bc 3d0f7900       1587 	ld.w	120[r29],r1
000002c0 610a           1588 	cmp	1,r1
000002c2 fa05*          1589 	bne	.L375
                        1590 --1167:                     {
                        1591 --1168:                         /* size of bits that HI-Z during the dummy cycle */
                        1592 --1169:                         write_value = ((dmycyc_bit_size    << LOC_YD_SFMA_DRDMCR_DMDB_SHIFT)  |
                        1593 --line1169
                        1594 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.35::
                        1595 .LDWlin35:
000002c4 230f0900       1596 	ld.w	8[sp],r1
000002c8 1ae0           1597 	mov	r26,r28
000002ca d00a           1598 	shl	16,r1
000002cc 01e1           1599 	or	r1,r28
000002ce a505*          1600 	br	.L377
                        1601 .L375:
                        1602 --1170:                                        (dmycyc_num         << LOC_YD_SFMA_DRDMCR_DMCYC_SHIFT));
                        1603 --1171:                     }
                        1604 --1172:                     else
                        1605 --1173:                     {
                        1606 --1174:                         write_value = ((YD_SFMA_SPIBSC_1BIT << LOC_YD_SFMA_DRDMCR_DMDB_SHIFT)  |
                        1607 --line1174
                        1608 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.36::
                        1609 .LDWlin36:
000002d0 1ae0           1610 	mov	r26,r28
                        1611 .L377:
                        1612 --1175:                                        (dmycyc_num         << LOC_YD_SFMA_DRDMCR_DMCYC_SHIFT));
                        1613 --1176:                     }
                        1614 --1178:                     YD_SFMA_Write32((base + LOC_YD_SFMA_DRDMCR), write_value);
000002d2 79e75900       1615 	st.w	r28,88[r25]
                        1616 .L374:
                        1617 --1179:                 }
                        1618 --1181:                 /* Set data read DDR enable */
                        1619 --1182:                 if (SpiConfig->TransferMode == YD_SFMA_SPIBSC_SDR_TRANS)
000002d6 bd0f7100       1620 	ld.bu	113[r29],r1
000002da e009           1621 	cmp	zero,r1
000002dc ba05*          1622 	bne	.L378
                        1623 --1183:                 {
                        1624 --1184:                     write_value = ((YD_SFMA_SPIBSC_SDR_TRANS << LOC_YD_SFMA_DRDRENR_ADDRE_SHIFT) |

                                                                      Page 28
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1625 --line1184
                        1626 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.37::
                        1627 .LDWlin37:
000002de 00e2           1628 	mov	0,r28
000002e0 b505*          1629 	br	.L380
                        1630 .L378:
                        1631 --1185:                                    (YD_SFMA_SPIBSC_SDR_TRANS << LOC_YD_SFMA_DRDRENR_OPDRE_SHIFT) |
                        1632 --1186:                                    (YD_SFMA_SPIBSC_SDR_TRANS << LOC_YD_SFMA_DRDRENR_DRDRE_SHIFT));
                        1633 --1187:                 }
                        1634 --1188:                 else
                        1635 --1189:                 {
                        1636 --1190:                     write_value = ((YD_SFMA_SPIBSC_DDR_TRANS << LOC_YD_SFMA_DRDRENR_ADDRE_SHIFT) |
                        1637 --line1190
                        1638 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.38::
                        1639 .LDWlin38:
000002e2 20e61101       1640 	movea	273,zero,r28
                        1641 .L380:
                        1642 --1191:                                    (YD_SFMA_SPIBSC_DDR_TRANS << LOC_YD_SFMA_DRDRENR_OPDRE_SHIFT) |
                        1643 --1192:                                    (YD_SFMA_SPIBSC_DDR_TRANS << LOC_YD_SFMA_DRDRENR_DRDRE_SHIFT));
                        1644 --1193:                 }
                        1645 --1195:                 YD_SFMA_Write32((base + LOC_YD_SFMA_DRDRENR), write_value);
000002e6 79e75d00       1646 	st.w	r28,92[r25]
                        1647 --1196:                 YD_SpibscWaitTend(Unit);
000002ea 23371500       1648 	ld.w	20[sp],r6
                        1649 	jarl	_YD_SpibscWaitTend,lp
                        1649 <EXPANSION BEGIN>
                        1649 jarl22 _YD_SpibscWaitTend , lp 
000002ee bfff2cfd*      1649 <EXPANSION END>
000002f2 c505*          1650 	br	.L340
                        1651 .L362:
                        1652 --1197:             }
                        1653 --1198:             else
                        1654 --1199:             {
                        1655 --1200:                 ret = YD_SFMA_ERR_NOT_SUPPORT_TRANSFER;
                        1656 --line1200
                        1657 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.39::
                        1658 .LDWlin39:
000002f4 095a           1659 	mov	9,r11
000002f6 635f0500       1660 	st.w	r11,4[sp]
                        1661 .L340:
                        1662 --1201:             }
                        1663 --1202:         }
                        1664 --1203:     }
                        1665 --1205:     return ret;
000002fa 23570500       1666 	ld.w	4[sp],r10
                        1667 --	    .ef
                        1668 .LDW32:
000002fe 4c06ff70       1669 	dispose	6,{r25,r26,r27,r28,r29,r31},[lp]
                        1670 	.type	_YD_SFMA_SpibscDrInit,@function
                        1671 	.size	_YD_SFMA_SpibscDrInit,.-_YD_SFMA_SpibscDrInit
                        1672 	.align	2
                        1673 .LDW42:
                        1674 --_ret	4[sp]	local
                        1675 --_reg_value	16[sp]	local
                        1676 --_write_value	r28	local
                        1677 --_base	r25	local
                        1678 --_command	r27	local
                        1679 --_opd_enable	0[sp]	local
                        1680 --_dmycyc_num	r26	local
                        1681 --_dmycyc_bit_size	8[sp]	local
                        1682 --_drcr	12[sp]	local

                                                                      Page 29
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1683 
                        1684 --_Unit	20[sp]	param
                        1685 --_SpiConfig	r29	param
                        1686 
                        1687 	.section ".bss","awb"
                        1688 .L512:
                        1689 	.type	.L512,@object
                        1690 	.size	.L512,0
                        1691 	.data
                        1692 	.text
                        1693 
                        1694 --1206: }
                        1695 
                        1696 --1209: /***************************************************************************
                        1697 --1210:   Function: YD_SFMA_SpibscClose
                        1698 --1212:   see: <yd_sfma_spibsc.h>
                        1699 --1213: */
                        1700 --1214: yd_sfma_Error_t YD_SFMA_SpibscClose(const uint32_t Unit)
                        1701 	.align	2
                        1702 	.align	2
                        1703 	.global	_YD_SFMA_SpibscClose
                        1704 _YD_SFMA_SpibscClose:
00000302 8007e130       1705 	prepare	{r26,r27,r28,r29,r31},0
00000306 06d0           1706 	mov	r6,r26
                        1707 --	    .bf
                        1708 .LDW52:
                        1709 --1215: {
                        1710 --1216:     yd_sfma_Error_t ret = YD_SFMA_ERR_OK;
00000308 00da           1711 	mov	0,r27
                        1712 --1217:     uint32_t       reg_value;
                        1713 --1218:     uint32_t       base;
                        1714 --1219:     uint32_t       wait = 0;
0000030a 00e2           1715 	mov	0,r28
                        1716 --1221:     base = YD_SFMA_BASE_ADD;
0000030c 40eefff2       1717 	movhi	hi(-218169344),zero,r29
                        1718 --1222:     YD_SFMA_Modify32((base + LOC_YD_SFMA_DRCR),
00000310 1d360c00       1719 	addi	12,r29,r6
00000314 013a           1720 	mov	1,r7
00000316 20461800       1721 	movea	24,zero,r8
0000031a 404e0001       1722 	movhi	hi(16777216),zero,r9
                        1723 	jarl	_YD_SFMA_Modify32,lp
                        1723 <EXPANSION BEGIN>
                        1723 jarl22 _YD_SFMA_Modify32 , lp 
0000031e bfffe2fc*      1723 <EXPANSION END>
                        1724 --1223:                        LOC_YD_SFMA_SPIBSC_DRCR_SSL_NEGATE,
                        1725 --1224:                        LOC_YD_SFMA_DRCR_SSLN_SHIFT,
                        1726 --1225:                        LOC_YD_SFMA_DRCR_SSLN);
                        1727 --1226:     do
                        1728 --line1226
                        1729 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.40::
                        1730 .LDWlin40:
00000322 0000           1731 	nop
                        1732 .L708:
                        1733 --1227:     {
                        1734 --1228:         /* wait for transfer-end */
                        1735 --1229:         if (wait > YD_SFMA_SPBSSL_NEGATE_WAIT)
00000324 2e0640420f00   1736 	mov	1000000,r14
0000032a eee1           1737 	cmp	r14,r28
0000032c b305*          1738 	bnh	.L709
                        1739 --1230:         {
                        1740 --1231:             ret = YD_SFMA_ERR_FATAL_HW;

                                                                      Page 30
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1741 --line1231
                        1742 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.41::
                        1743 .LDWlin41:
0000032e 07da           1744 	mov	7,r27
                        1745 --1232:             break;
00000330 a50d*          1746 	br	.L711
                        1747 .L709:
                        1748 --1233:         }
                        1749 --1234:         wait++;
                        1750 --line1234
                        1751 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.42::
                        1752 .LDWlin42:
00000332 41e2           1753 	add	1,r28
                        1754 --1236:         reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
00000334 3d0f4900       1755 	ld.w	72[r29],r1
                        1756 --1237:         reg_value = (reg_value & LOC_YD_SFMA_CMNSR_SSLF) >> LOC_YD_SFMA_CMNSR_SSLF_SHIFT;
00000338 c1760200       1757 	andi	2,r1,r14
0000033c 8172           1758 	shr	1,r14
0000033e 0e08           1759 	mov	r14,r1
00000340 e009           1760 	cmp	zero,r1
00000342 9af5*          1761 	bne	.L708
                        1762 .L711:
                        1763 --1238:     } while (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_SSL_NEGATE);
                        1764 --1240:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNCR);
                        1765 --line1240
                        1766 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.43::
                        1767 .LDWlin43:
00000344 3d0f0100       1768 	ld.w	0[r29],r1
                        1769 --1241:     reg_value = (reg_value | LOC_YD_SFMA_CMNCR_MD);
00000348 40760080       1770 	movhi	hi(-2147483648),zero,r14
0000034c 0e09           1771 	or	r14,r1
                        1772 --1242:     YD_SFMA_Write32((base + LOC_YD_SFMA_CMNCR), reg_value);
0000034e 7d0f0100       1773 	st.w	r1,0[r29]
                        1774 --1244:     return ret;
00000352 1b50           1775 	mov	r27,r10
                        1776 --	    .ef
                        1777 .LDW62:
00000354 4006ff30       1778 	dispose	0,{r26,r27,r28,r29,r31},[lp]
                        1779 	.type	_YD_SFMA_SpibscClose,@function
                        1780 	.size	_YD_SFMA_SpibscClose,.-_YD_SFMA_SpibscClose
                        1781 	.align	2
                        1782 .LDW72:
                        1783 --_ret	r27	local
                        1784 --_reg_value	r1	local
                        1785 --_base	r29	local
                        1786 --_wait	r28	local
                        1787 
                        1788 --_Unit	r26	param
                        1789 
                        1790 	.section ".bss","awb"
                        1791 .L758:
                        1792 	.type	.L758,@object
                        1793 	.size	.L758,0
                        1794 	.data
                        1795 	.text
                        1796 
                        1797 --1245: }
                        1798 
                        1799 --1247: /***************************************************************************
                        1800 --1248:   Function: YD_SFMA_SpibscCommandTransfer
                        1801 --1250:   see: <yd_sfma_spibsc.h>

                                                                      Page 31
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1802 --1251: */
                        1803 --1252: yd_sfma_Error_t YD_SFMA_SpibscCommandTransfer(const uint32_t                        Unit,
                        1804 	.align	2
                        1805 	.align	2
                        1806 	.global	_YD_SFMA_SpibscCommandTransfer
                        1807 _YD_SFMA_SpibscCommandTransfer:
00000358 8607e170       1808 	prepare	{r25,r26,r27,r28,r29,r31},3
0000035c 63370900       1809 	st.w	r6,8[sp]
00000360 07e8           1810 	mov	r7,r29
                        1811 --	    .bf
                        1812 .LDW82:
                        1813 --1253:                                                   yd_sfma_SpibscSpimdReg_t * const Regset)
                        1814 --1254: {
                        1815 --1255:     yd_sfma_Error_t ret = YD_SFMA_ERR_OK;
00000362 63070100       1816 	st.w	zero,0[sp]
00000366 005a           1817 	mov	0,r11
                        1818 --1256:     uint32_t       reg_value;
                        1819 --1257:     uint32_t       write_value;
                        1820 --1258:     uint32_t       smenr_value;
                        1821 --1259:     uint32_t       smcmr_value;
                        1822 --1260:     uint32_t       base;
                        1823 --1262:     if (Regset == R_NULL)
00000368 e0e9           1824 	cmp	zero,r29
0000036a ea05*          1825 	bne	.L817
                        1826 --1263:     {
                        1827 --1264:         ret = YD_SFMA_ERR_PARAM_INCORRECT;
                        1828 --line1264
                        1829 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.44::
                        1830 .LDWlin44:
0000036c 025a           1831 	mov	2,r11
0000036e 635f0100       1832 	st.w	r11,0[sp]
00000372 8007ee01*      1833 	br	.L819
                        1834 .L817:
                        1835 --1265:     }
                        1836 --1266:     else
                        1837 --1267:     {
                        1838 --1268:         if ((Regset->Spidb != YD_SFMA_SPIBSC_1BIT) &&
                        1839 --line1268
                        1840 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.45::
                        1841 .LDWlin45:
00000376 3d0f1100       1842 	ld.w	16[r29],r1
0000037a e009           1843 	cmp	zero,r1
0000037c 8215*          1844 	be	.L820
0000037e 3d0f2500       1845 	ld.w	36[r29],r1
00000382 e009           1846 	cmp	zero,r1
00000384 c20d*          1847 	be	.L820
                        1848 --1269:             (Regset->Spide != YD_SFMA_SPIBSC_OUTPUT_DISABLE))
                        1849 --1270:         {
                        1850 --1271:             if ((Regset->Spire  == YD_SFMA_SPIBSC_SPIDATA_ENABLE) &&
                        1851 --line1271
                        1852 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.46::
                        1853 .LDWlin46:
00000386 3d0f2d00       1854 	ld.w	44[r29],r1
0000038a 610a           1855 	cmp	1,r1
0000038c 8a0d*          1856 	bne	.L820
0000038e 3d0f3100       1857 	ld.w	48[r29],r1
00000392 610a           1858 	cmp	1,r1
00000394 ca05*          1859 	bne	.L820
                        1860 --1272:                 (Regset->Spiwe  == YD_SFMA_SPIBSC_SPIDATA_ENABLE))
                        1861 --1273:             {
                        1862 --1274:                 /* When the data size is set to 2 or 4 bits by using the SPIDB[1:0] bits,

                                                                      Page 32
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        1863 --1275:                    only one of the SPIRE and SPIWE bits should be enabled.*/
                        1864 --1276:                 ret = YD_SFMA_ERR_PARAM_INCORRECT;
                        1865 --line1276
                        1866 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.47::
                        1867 .LDWlin47:
00000396 025a           1868 	mov	2,r11
00000398 635f0100       1869 	st.w	r11,0[sp]
                        1870 .L820:
                        1871 --1277:             }
                        1872 --1278:         }
                        1873 --1280:         if (ret == YD_SFMA_ERR_OK)
0000039c 235f0100       1874 	ld.w	0[sp],r11
000003a0 e059           1875 	cmp	zero,r11
000003a2 ea07bf01*      1876 	bne	.L819
                        1877 --1281:         {
                        1878 --1282:             base = YD_SFMA_BASE_ADD;
                        1879 --line1282
                        1880 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.48::
                        1881 .LDWlin48:
000003a6 40cefff2       1882 	movhi	hi(-218169344),zero,r25
                        1883 --1283:             reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNCR);
000003aa 39d70100       1884 	ld.w	0[r25],r26
                        1885 --1284:             reg_value = (reg_value & LOC_YD_SFMA_CMNCR_MD) >> LOC_YD_SFMA_CMNCR_MD_SHIFT;
000003ae 400e0080       1886 	movhi	32768,zero,r1
000003b2 5a09           1887 	and	r26,r1
000003b4 9f0a           1888 	shr	31,r1
000003b6 01d0           1889 	mov	r1,r26
                        1890 --1285:             if (reg_value != LOC_YD_SFMA_SPIBSC_CMNCR_MD_SPI)
000003b8 61d2           1891 	cmp	1,r26
000003ba d215*          1892 	be	.L828
                        1893 --1286:             {
                        1894 --1287:                 reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
                        1895 --line1287
                        1896 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.49::
                        1897 .LDWlin49:
000003bc 39d74900       1898 	ld.w	72[r25],r26
                        1899 --1288:                 reg_value = (reg_value & LOC_YD_SFMA_CMNSR_SSLF) >> LOC_YD_SFMA_CMNSR_SSLF_SHIFT;
000003c0 da0e0200       1900 	andi	2,r26,r1
000003c4 810a           1901 	shr	1,r1
000003c6 01d0           1902 	mov	r1,r26
                        1903 --1289:                 if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_SSL_NEGATE)
000003c8 e0d1           1904 	cmp	zero,r26
000003ca d205*          1905 	be	.L830
                        1906 --1290:                 {
                        1907 --1291:                     ret = YD_SFMA_ERR_FATAL_HW;
                        1908 --line1291
                        1909 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.50::
                        1910 .LDWlin50:
000003cc 075a           1911 	mov	7,r11
000003ce 635f0100       1912 	st.w	r11,0[sp]
000003d2 950d*          1913 	br	.L828
                        1914 .L830:
                        1915 --1292:                 }
                        1916 --1293:                 else
                        1917 --1294:                 {
                        1918 --1295:                     /* SPI Mode */
                        1919 --1296:                     YD_SFMA_Modify32((base + LOC_YD_SFMA_CMNCR),
                        1920 --line1296
                        1921 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.51::
                        1922 .LDWlin51:
000003d4 1930           1923 	mov	r25,r6

                                                                      Page 33
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
000003d6 013a           1924 	mov	1,r7
000003d8 20461f00       1925 	movea	31,zero,r8
000003dc 404e0080       1926 	movhi	hi(-2147483648),zero,r9
                        1927 	jarl	_YD_SFMA_Modify32,lp
                        1927 <EXPANSION BEGIN>
                        1927 jarl22 _YD_SFMA_Modify32 , lp 
000003e0 bfff20fc*      1927 <EXPANSION END>
                        1928 .L828:
                        1929 --1297:                                       LOC_YD_SFMA_SPIBSC_CMNCR_MD_SPI,
                        1930 --1298:                                       LOC_YD_SFMA_CMNCR_MD_SHIFT,
                        1931 --1299:                                       LOC_YD_SFMA_CMNCR_MD);
                        1932 --1300:                 }
                        1933 --1301:             }
                        1934 --1303:             if (ret == YD_SFMA_ERR_OK)
                        1935 --line1303
                        1936 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.52::
                        1937 .LDWlin52:
000003e4 235f0100       1938 	ld.w	0[sp],r11
000003e8 e059           1939 	cmp	zero,r11
000003ea ea077701*      1940 	bne	.L819
                        1941 --1304:             {
                        1942 --1305:                 reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
                        1943 --line1305
                        1944 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.53::
                        1945 .LDWlin53:
000003ee 39d74900       1946 	ld.w	72[r25],r26
                        1947 --1306:                 reg_value = (reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT;
000003f2 dad60100       1948 	andi	1,r26,r26
                        1949 --1307:                 if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END)
000003f6 61d2           1950 	cmp	1,r26
000003f8 e205*          1951 	be	.L835
                        1952 --1308:                 {
                        1953 --1309:                     ret = YD_SFMA_ERR_FATAL_HW;
                        1954 --line1309
                        1955 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.54::
                        1956 .LDWlin54:
000003fa 075a           1957 	mov	7,r11
000003fc 635f0100       1958 	st.w	r11,0[sp]
00000400 80076001*      1959 	br	.L819
                        1960 .L835:
                        1961 --1310:                 }
                        1962 --1311:                 else
                        1963 --1312:                 {
                        1964 --1313:                     /* ---- Command ---- */
                        1965 --1314:                     /* Option Data */
                        1966 --1315:                     smenr_value = ((Regset->Cde   << LOC_YD_SFMA_SMENR_CDE_SHIFT)   |
                        1967 --line1315
                        1968 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.55::
                        1969 .LDWlin55:
00000404 3d0f1500       1970 	ld.w	20[r29],r1
00000408 3d771900       1971 	ld.w	24[r29],r14
0000040c ce0a           1972 	shl	14,r1
0000040e cc72           1973 	shl	12,r14
00000410 0171           1974 	or	r1,r14
00000412 3d0f1d00       1975 	ld.w	28[r29],r1
00000416 c80a           1976 	shl	8,r1
00000418 0e09           1977 	or	r14,r1
0000041a 3d772100       1978 	ld.w	32[r29],r14
0000041e c472           1979 	shl	4,r14
00000420 0171           1980 	or	r1,r14
00000422 3d0f3500       1981 	ld.w	52[r29],r1

                                                                      Page 34
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
00000426 cf0a           1982 	shl	15,r1
00000428 0e09           1983 	or	r14,r1
0000042a 3d772500       1984 	ld.w	36[r29],r14
0000042e 0171           1985 	or	r1,r14
00000430 3d0f1100       1986 	ld.w	16[r29],r1
00000434 d00a           1987 	shl	16,r1
00000436 01d8           1988 	mov	r1,r27
00000438 0ed9           1989 	or	r14,r27
                        1990 --1316:                                    (Regset->Ocde  << LOC_YD_SFMA_SMENR_OCDE_SHIFT)  |
                        1991 --1317:                                    (Regset->Ade   << LOC_YD_SFMA_SMENR_ADE_SHIFT)   |
                        1992 --1318:                                    (Regset->Opde  << LOC_YD_SFMA_SMENR_OPDE_SHIFT)  |
                        1993 --1319:                                    (Regset->Dme   << LOC_YD_SFMA_SMENR_DME_SHIFT)   |
                        1994 --1320:                                    (Regset->Spide << LOC_YD_SFMA_SMENR_SPIDE_SHIFT) |
                        1995 --1321:                                    (Regset->Spidb << LOC_YD_SFMA_SMENR_SPIDB_SHIFT));
                        1996 --1322:                     smcmr_value = 0;
0000043a 63070500       1997 	st.w	zero,4[sp]
0000043e 005a           1998 	mov	0,r11
                        1999 --1324:                     if (Regset->Cde != YD_SFMA_SPIBSC_OUTPUT_DISABLE)
00000440 3d0f1500       2000 	ld.w	20[r29],r1
00000444 e009           2001 	cmp	zero,r1
00000446 d20d*          2002 	be	.L838
                        2003 --1325:                     {
                        2004 --1326:                         /* Command */
                        2005 --1327:                         smcmr_value |= ((uint32_t)Regset->Cmd << LOC_YD_SFMA_SMCMR_CMD_SHIFT);
                        2006 --line1327
                        2007 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.56::
                        2008 .LDWlin56:
00000448 9d0f5b00       2009 	ld.bu	90[r29],r1
0000044c 235f0500       2010 	ld.w	4[sp],r11
00000450 d00a           2011 	shl	16,r1
00000452 0159           2012 	or	r1,r11
00000454 635f0500       2013 	st.w	r11,4[sp]
                        2014 --1328:                         /* Single/Dual/Quad */
                        2015 --1329:                         smenr_value |= (Regset->Cdb << LOC_YD_SFMA_SMENR_CDB_SHIFT);
00000458 3d0f0100       2016 	ld.w	0[r29],r1
0000045c de0a           2017 	shl	30,r1
0000045e 01d9           2018 	or	r1,r27
                        2019 .L838:
                        2020 --1330:                     }
                        2021 --1332:                     /* ---- Option Command ---- */
                        2022 --1333:                     if (Regset->Ocde != YD_SFMA_SPIBSC_OUTPUT_DISABLE)
00000460 3d0f1900       2023 	ld.w	24[r29],r1
00000464 e009           2024 	cmp	zero,r1
00000466 c20d*          2025 	be	.L840
                        2026 --1334:                     {
                        2027 --1335:                         /* Option Command */
                        2028 --1336:                         smcmr_value |= ((uint32_t)Regset->Ocmd << LOC_YD_SFMA_SMCMR_OCMD_SHIFT);
                        2029 --line1336
                        2030 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.57::
                        2031 .LDWlin57:
00000468 bd0f5b00       2032 	ld.bu	91[r29],r1
0000046c 235f0500       2033 	ld.w	4[sp],r11
00000470 0159           2034 	or	r1,r11
00000472 635f0500       2035 	st.w	r11,4[sp]
                        2036 --1337:                         /* Single/Dual/Quad */
                        2037 --1338:                         smenr_value |= (Regset->Ocdb << LOC_YD_SFMA_SMENR_OCDB_SHIFT);
00000476 3d0f0500       2038 	ld.w	4[r29],r1
0000047a dc0a           2039 	shl	28,r1
0000047c 01d9           2040 	or	r1,r27
                        2041 .L840:
                        2042 --1339:                     }

                                                                      Page 35
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        2043 --1341:                     /* ---- Address ---- */
                        2044 --1342:                     if (Regset->Ade != YD_SFMA_SPIBSC_OUTPUT_DISABLE)
0000047e 3d0f1d00       2045 	ld.w	28[r29],r1
00000482 e009           2046 	cmp	zero,r1
00000484 920d*          2047 	be	.L842
                        2048 --1343:                     {
                        2049 --1344:                         /* Address */
                        2050 --1345:                         YD_SFMA_Write32((base + LOC_YD_SFMA_SMADR), Regset->Addr);
                        2051 --line1345
                        2052 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.58::
                        2053 .LDWlin58:
00000486 3d0f4500       2054 	ld.w	68[r29],r1
0000048a 790f2900       2055 	st.w	r1,40[r25]
                        2056 --1346:                         /* Single/Dual/Quad */
                        2057 --1347:                         smenr_value |= (Regset->Adb << LOC_YD_SFMA_SMENR_ADB_SHIFT);
0000048e 3d0f0900       2058 	ld.w	8[r29],r1
00000492 d80a           2059 	shl	24,r1
00000494 01d9           2060 	or	r1,r27
                        2061 .L842:
                        2062 --1348:                     }
                        2063 --1350:                     /* ---- Option Data ---- */
                        2064 --1351:                     if (Regset->Opde != YD_SFMA_SPIBSC_OUTPUT_DISABLE)
00000496 3d0f2100       2065 	ld.w	32[r29],r1
0000049a e009           2066 	cmp	zero,r1
0000049c e215*          2067 	be	.L844
                        2068 --1352:                     {
                        2069 --1353:                         /* Option Data */
                        2070 --1354:                         write_value = (((uint32_t)Regset->Opd[YD_SFMA_OPTION_DATA_0] <<
                        2071 --line1354
                        2072 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.59::
                        2073 .LDWlin59:
0000049e bd0f5d00       2074 	ld.bu	93[r29],r1
000004a2 9d775d00       2075 	ld.bu	92[r29],r14
000004a6 c80a           2076 	shl	8,r1
000004a8 0e09           2077 	or	r14,r1
000004aa 9d775f00       2078 	ld.bu	94[r29],r14
000004ae d072           2079 	shl	16,r14
000004b0 0171           2080 	or	r1,r14
000004b2 bd0f5f00       2081 	ld.bu	95[r29],r1
000004b6 d80a           2082 	shl	24,r1
000004b8 01e0           2083 	mov	r1,r28
000004ba 0ee1           2084 	or	r14,r28
                        2085 --1355:                                         LOC_YD_SFMA_SMOPR_OPD0_SHIFT) |
                        2086 --1356:                                        ((uint32_t)Regset->Opd[YD_SFMA_OPTION_DATA_1] <<
                        2087 --1357:                                         LOC_YD_SFMA_SMOPR_OPD1_SHIFT) |
                        2088 --1358:                                        ((uint32_t)Regset->Opd[YD_SFMA_OPTION_DATA_2] <<
                        2089 --1359:                                         LOC_YD_SFMA_SMOPR_OPD2_SHIFT) |
                        2090 --1360:                                        ((uint32_t)Regset->Opd[YD_SFMA_OPTION_DATA_3] <<
                        2091 --1361:                                         LOC_YD_SFMA_SMOPR_OPD3_SHIFT));
                        2092 --1362:                         YD_SFMA_Write32((base + LOC_YD_SFMA_SMOPR), write_value);
000004bc 79e72d00       2093 	st.w	r28,44[r25]
                        2094 --1363:                         /* Single/Dual/Quad */
                        2095 --1364:                         smenr_value |= (Regset->Opdb << LOC_YD_SFMA_SMENR_OPDB_SHIFT);
000004c0 3d0f0d00       2096 	ld.w	12[r29],r1
000004c4 d40a           2097 	shl	20,r1
000004c6 01d9           2098 	or	r1,r27
                        2099 .L844:
                        2100 --1365:                     }
                        2101 --1367:                     /* ---- Dummy ---- */
                        2102 --1368:                     if (Regset->Dme != YD_SFMA_SPIBSC_DUMMY_CYC_DISABLE)
000004c8 3d0f3500       2103 	ld.w	52[r29],r1

                                                                      Page 36
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
000004cc e009           2104 	cmp	zero,r1
000004ce a20d*          2105 	be	.L846
                        2106 --1369:                     {
                        2107 --1370:                         write_value = (((uint32_t)Regset->Dmdb  << LOC_YD_SFMA_SMDMCR_DMDB_SHIFT) |
                        2108 --line1370
                        2109 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.60::
                        2110 .LDWlin60:
000004d0 bd775900       2111 	ld.bu	89[r29],r14
000004d4 9d0f5900       2112 	ld.bu	88[r29],r1
000004d8 d00a           2113 	shl	16,r1
000004da 0ee0           2114 	mov	r14,r28
000004dc 01e1           2115 	or	r1,r28
                        2116 --1371:                                        ((uint32_t)Regset->Dmcyc << LOC_YD_SFMA_SMDMCR_DMCYC_SHIFT));
                        2117 --1372:                         YD_SFMA_Write32((base + LOC_YD_SFMA_SMDMCR), write_value);
000004de 79e76100       2118 	st.w	r28,96[r25]
                        2119 .L846:
                        2120 --1373:                     }
                        2121 --1375:                     /* ---- Data ---- */
                        2122 --1376:                     if (Regset->Spide != YD_SFMA_SPIBSC_OUTPUT_DISABLE)
000004e2 3d0f2500       2123 	ld.w	36[r29],r1
000004e6 e009           2124 	cmp	zero,r1
000004e8 920d*          2125 	be	.L848
                        2126 --1377:                     {
                        2127 --1378:                         YD_SFMA_Write32((base + LOC_YD_SFMA_SMWDR0),
                        2128 --line1378
                        2129 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.61::
                        2130 .LDWlin61:
000004ea 3d0f5100       2131 	ld.w	80[r29],r1
000004ee 790f4100       2132 	st.w	r1,64[r25]
                        2133 --1379:                                          Regset->Smwdr[YD_SFMA_SMWDR_DATA_0]);
                        2134 --1380:                         YD_SFMA_Write32((base + LOC_YD_SFMA_SMWDR1),
000004f2 3d0f5500       2135 	ld.w	84[r29],r1
000004f6 790f4500       2136 	st.w	r1,68[r25]
                        2137 .L848:
                        2138 --1381:                                          Regset->Smwdr[YD_SFMA_SMWDR_DATA_1]);
                        2139 --1382:                     }
                        2140 --1383:                     /* SPI mode */
                        2141 --1384:                     YD_SFMA_Write32((base + LOC_YD_SFMA_SMENR), smenr_value);
000004fa 79df3100       2142 	st.w	r27,48[r25]
                        2143 --1385:                     YD_SFMA_Write32((base + LOC_YD_SFMA_SMCMR), smcmr_value);
000004fe 235f0500       2144 	ld.w	4[sp],r11
00000502 795f2500       2145 	st.w	r11,36[r25]
                        2146 --1387:                     /* SDR Transmission/DDR Transmission Setting */
                        2147 --1388:                     write_value = ((Regset->Addre  << LOC_YD_SFMA_SMDRENR_ADDRE_SHIFT) |
00000506 3d0f3900       2148 	ld.w	56[r29],r1
0000050a 3d773d00       2149 	ld.w	60[r29],r14
0000050e 3de74100       2150 	ld.w	64[r29],r28
00000512 c80a           2151 	shl	8,r1
00000514 c472           2152 	shl	4,r14
00000516 0171           2153 	or	r1,r14
00000518 0ee1           2154 	or	r14,r28
                        2155 --1389:                                    (Regset->Opdre  << LOC_YD_SFMA_SMDRENR_OPDRE_SHIFT) |
                        2156 --1390:                                    (Regset->Spidre << LOC_YD_SFMA_SMDRENR_SPIDRE_SHIFT));
                        2157 --1391:                     YD_SFMA_Write32((base + LOC_YD_SFMA_SMDRENR), write_value);
0000051a 79e76500       2158 	st.w	r28,100[r25]
                        2159 --1393:                     /* execute after setting SPNDL bit */
                        2160 --1394:                     write_value = ((Regset->Sslkp << LOC_YD_SFMA_SMCR_SSLKP_SHIFT) |
0000051e 3d0f2900       2161 	ld.w	40[r29],r1
00000522 3d772d00       2162 	ld.w	44[r29],r14
00000526 c80a           2163 	shl	8,r1
00000528 c272           2164 	shl	2,r14

                                                                      Page 37
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
0000052a 0171           2165 	or	r1,r14
0000052c 3d0f3100       2166 	ld.w	48[r29],r1
00000530 c10a           2167 	shl	1,r1
00000532 0e09           2168 	or	r14,r1
00000534 81e60100       2169 	ori	1,r1,r28
                        2170 --1395:                                    (Regset->Spire << LOC_YD_SFMA_SMCR_SPIRE_SHIFT) |
                        2171 --1396:                                    (Regset->Spiwe << LOC_YD_SFMA_SMCR_SPIWE_SHIFT) |
                        2172 --1397:                                    (LOC_YD_SFMA_SPIBSC_SPI_ENABLE << LOC_YD_SFMA_SMCR_SPIE_SHIFT));
                        2173 --1398:                     YD_SFMA_Write32((base + LOC_YD_SFMA_SMCR), write_value);
00000538 79e72100       2174 	st.w	r28,32[r25]
                        2175 --1400:                     /* wait for transfer-start */
                        2176 --1401:                     ret = YD_SpibscWaitTend(Unit);
0000053c 23370900       2177 	ld.w	8[sp],r6
                        2178 	jarl	_YD_SpibscWaitTend,lp
                        2178 <EXPANSION BEGIN>
                        2178 jarl22 _YD_SpibscWaitTend , lp 
00000540 bfffdafa*      2178 <EXPANSION END>
00000544 63570100       2179 	st.w	r10,0[sp]
                        2180 --1403:                     if (ret == YD_SFMA_ERR_OK)
                        2181 --line1403
                        2182 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.62::
                        2183 .LDWlin62:
00000548 235f0100       2184 	ld.w	0[sp],r11
0000054c e059           2185 	cmp	zero,r11
0000054e 9a0d*          2186 	bne	.L819
                        2187 --1404:                     {
                        2188 --1405:                         Regset->Smrdr[YD_SFMA_SMRDR_DATA_0] =
                        2189 --line1405
                        2190 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.63::
                        2191 .LDWlin63:
00000550 390f3900       2192 	ld.w	56[r25],r1
00000554 7d0f4900       2193 	st.w	r1,72[r29]
                        2194 --1406:                                                 YD_SFMA_Read32(base + LOC_YD_SFMA_SMRDR0);
                        2195 --1407:                         /* valid in two serial-flash */
                        2196 --1408:                         Regset->Smrdr[YD_SFMA_SMRDR_DATA_1] =
00000558 390f3d00       2197 	ld.w	60[r25],r1
0000055c 7d0f4d00       2198 	st.w	r1,76[r29]
                        2199 .L819:
                        2200 --1409:                                                 YD_SFMA_Read32(base + LOC_YD_SFMA_SMRDR1);
                        2201 --1410:                     }
                        2202 --1411:                 }
                        2203 --1412:             }
                        2204 --1413:         }
                        2205 --1414:     }
                        2206 --1416:     return ret;
00000560 23570100       2207 	ld.w	0[sp],r10
                        2208 --	    .ef
                        2209 .LDW92:
00000564 4606ff70       2210 	dispose	3,{r25,r26,r27,r28,r29,r31},[lp]
                        2211 	.type	_YD_SFMA_SpibscCommandTransfer,@function
                        2212 	.size	_YD_SFMA_SpibscCommandTransfer,.-_YD_SFMA_SpibscCommandTransfer
                        2213 	.align	2
                        2214 .LDW03:
                        2215 --_ret	0[sp]	local
                        2216 --_reg_value	r26	local
                        2217 --_write_value	r28	local
                        2218 --_smenr_value	r27	local
                        2219 --_smcmr_value	4[sp]	local
                        2220 --_base	r25	local
                        2221 
                        2222 --_Unit	8[sp]	param

                                                                      Page 38
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        2223 --_Regset	r29	param
                        2224 
                        2225 	.section ".bss","awb"
                        2226 .L980:
                        2227 	.type	.L980,@object
                        2228 	.size	.L980,0
                        2229 	.data
                        2230 	.text
                        2231 
                        2232 --1417: }
                        2233 
                        2234 --1420: /***************************************************************************
                        2235 --1421:   Function: YD_SFMA_SpibscWriteTransfer
                        2236 --1423:   see: <yd_sfma_spibsc.h>
                        2237 --1424: */
                        2238 --1425: yd_sfma_Error_t YD_SFMA_SpibscWriteTransfer(const uint32_t                        Unit,
                        2239 	.align	2
                        2240 	.align	2
                        2241 	.global	_YD_SFMA_SpibscWriteTransfer
                        2242 _YD_SFMA_SpibscWriteTransfer:
00000568 8207e170       2243 	prepare	{r25,r26,r27,r28,r29,r31},1
0000056c 63370100       2244 	st.w	r6,0[sp]
00000570 07d0           2245 	mov	r7,r26
                        2246 --	    .bf
                        2247 .LDW13:
                        2248 --1426:                                           const yd_sfma_SpibscSpimdReg_t * const Regset)
                        2249 --1427: {
                        2250 --1428:     yd_sfma_Error_t ret;
                        2251 --1429:     uint32_t       reg_value;
                        2252 --1430:     uint32_t       write_value;
                        2253 --1431:     uint32_t       base;
                        2254 --1433:     if (Regset == R_NULL)
00000572 e0d1           2255 	cmp	zero,r26
00000574 ba05*          2256 	bne	.L1156
                        2257 --1434:     {
                        2258 --1435:         ret = YD_SFMA_ERR_PARAM_INCORRECT;
                        2259 --line1435
                        2260 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.64::
                        2261 .LDWlin64:
00000576 02ca           2262 	mov	2,r25
00000578 d535*          2263 	br	.L1158
                        2264 .L1156:
                        2265 --1436:     }
                        2266 --1437:     else
                        2267 --1438:     {
                        2268 --1439:         base = YD_SFMA_BASE_ADD;
                        2269 --line1439
                        2270 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.65::
                        2271 .LDWlin65:
0000057a 40defff2       2272 	movhi	hi(-218169344),zero,r27
                        2273 --1440:         reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
0000057e 3be74900       2274 	ld.w	72[r27],r28
                        2275 --1441:         reg_value = (reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT;
00000582 dce60100       2276 	andi	1,r28,r28
                        2277 --1442:         if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END)
00000586 61e2           2278 	cmp	1,r28
00000588 b205*          2279 	be	.L1159
                        2280 --1443:         {
                        2281 --1444:             ret = YD_SFMA_ERR_FATAL_HW;
                        2282 --line1444
                        2283 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.66::

                                                                      Page 39
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        2284 .LDWlin66:
0000058a 07ca           2285 	mov	7,r25
0000058c b52d*          2286 	br	.L1158
                        2287 .L1159:
                        2288 --1445:         }
                        2289 --1446:         else
                        2290 --1447:         {
                        2291 --1448:             reg_value   = YD_SFMA_Read32(base + LOC_YD_SFMA_SMENR);
                        2292 --line1448
                        2293 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.67::
                        2294 .LDWlin67:
0000058e 3be73100       2295 	ld.w	48[r27],r28
                        2296 --1449:             /* command/address disable */
                        2297 --1450:             write_value = (reg_value &
00000592 2106ffb0fcff   2298 	mov	-216833,r1
00000598 1ce8           2299 	mov	r28,r29
0000059a 41e9           2300 	and	r1,r29
                        2301 --1451:                           ~(LOC_YD_SFMA_SMENR_CDE |
                        2302 --1452:                             LOC_YD_SFMA_SMENR_ADE |
                        2303 --1453:                             LOC_YD_SFMA_SMENR_SPIDB));
                        2304 --1454:             write_value |= ((Regset->Spidb << LOC_YD_SFMA_SMENR_SPIDB_SHIFT) |
0000059c 3a0f1100       2305 	ld.w	16[r26],r1
000005a0 3a772500       2306 	ld.w	36[r26],r14
000005a4 d00a           2307 	shl	16,r1
000005a6 0171           2308 	or	r1,r14
000005a8 0ee9           2309 	or	r14,r29
                        2310 --1455:                             (Regset->Spide << LOC_YD_SFMA_SMENR_SPIDE_SHIFT));
                        2311 --1456:             YD_SFMA_Write32((base + LOC_YD_SFMA_SMENR), write_value);
000005aa 7bef3100       2312 	st.w	r29,48[r27]
                        2313 --1457:             /* data set */
                        2314 --1458:             YD_SFMA_Write32((base + LOC_YD_SFMA_SMWDR0), Regset->Smwdr[YD_SFMA_SMWDR_DATA_0]);
000005ae 3a0f5100       2315 	ld.w	80[r26],r1
000005b2 7b0f4100       2316 	st.w	r1,64[r27]
                        2317 --1459:             YD_SFMA_Write32((base + LOC_YD_SFMA_SMWDR1), Regset->Smwdr[YD_SFMA_SMWDR_DATA_1]);
000005b6 3a0f5500       2318 	ld.w	84[r26],r1
000005ba 7b0f4500       2319 	st.w	r1,68[r27]
                        2320 --1461:             /* write enable */
                        2321 --1462:             write_value = ((YD_SFMA_SPIBSC_SPIDATA_ENABLE << LOC_YD_SFMA_SMCR_SPIWE_SHIFT) |
000005be 03ea           2322 	mov	3,r29
                        2323 --1463:                            (LOC_YD_SFMA_SPIBSC_SPI_ENABLE     << LOC_YD_SFMA_SMCR_SPIE_SHIFT));
                        2324 --1464:             /* signal level set */
                        2325 --1465:             if (Regset->Sslkp == YD_SFMA_SPIBSC_SPISSL_KEEP)
000005c0 3a0f2900       2326 	ld.w	40[r26],r1
000005c4 610a           2327 	cmp	1,r1
000005c6 ca05*          2328 	bne	.L1162
                        2329 --1466:             {
                        2330 --1467:                 write_value |= (YD_SFMA_SPIBSC_SPISSL_KEEP << LOC_YD_SFMA_SMCR_SSLKP_SHIFT);
                        2331 --line1467
                        2332 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.68::
                        2333 .LDWlin68:
000005c8 9dee0001       2334 	ori	256,r29,r29
000005cc c505*          2335 	br	.L1164
                        2336 .L1162:
                        2337 --1468:             }
                        2338 --1469:             else
                        2339 --1470:             {
                        2340 --1471:                 write_value &= ~LOC_YD_SFMA_SMCR_SSLKP;
                        2341 --line1471
                        2342 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.69::
                        2343 .LDWlin69:
000005ce 200efffe       2344 	movea	-257,zero,r1

                                                                      Page 40
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
000005d2 41e9           2345 	and	r1,r29
                        2346 .L1164:
                        2347 --1472:             }
                        2348 --1474:             /* execute after setting SPNDL bit */
                        2349 --1475:             YD_SFMA_Write32((base + LOC_YD_SFMA_SMCR), write_value);
000005d4 7bef2100       2350 	st.w	r29,32[r27]
                        2351 --1477:             /* wait for transfer-start */
                        2352 --1478:             ret = YD_SpibscWaitTend(Unit);
000005d8 23370100       2353 	ld.w	0[sp],r6
                        2354 	jarl	_YD_SpibscWaitTend,lp
                        2354 <EXPANSION BEGIN>
                        2354 jarl22 _YD_SpibscWaitTend , lp 
000005dc bfff3efa*      2354 <EXPANSION END>
000005e0 0ac8           2355 	mov	r10,r25
                        2356 .L1158:
                        2357 --1479:         }
                        2358 --1480:     }
                        2359 --1482:     return ret;
                        2360 --line1482
                        2361 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.70::
                        2362 .LDWlin70:
000005e2 1950           2363 	mov	r25,r10
                        2364 --	    .ef
                        2365 .LDW23:
000005e4 4206ff70       2366 	dispose	1,{r25,r26,r27,r28,r29,r31},[lp]
                        2367 	.type	_YD_SFMA_SpibscWriteTransfer,@function
                        2368 	.size	_YD_SFMA_SpibscWriteTransfer,.-_YD_SFMA_SpibscWriteTransfer
                        2369 	.align	2
                        2370 .LDW33:
                        2371 --_ret	r25	local
                        2372 --_reg_value	r28	local
                        2373 --_write_value	r29	local
                        2374 --_base	r27	local
                        2375 
                        2376 --_Unit	0[sp]	param
                        2377 --_Regset	r26	param
                        2378 
                        2379 	.section ".bss","awb"
                        2380 .L1214:
                        2381 	.type	.L1214,@object
                        2382 	.size	.L1214,0
                        2383 	.data
                        2384 	.text
                        2385 
                        2386 --1483: }
                        2387 
                        2388 --1485: /***************************************************************************
                        2389 --1486:   Function: YD_SFMA_SpibscReadTransfer
                        2390 --1488:   see: <yd_sfma_spibsc.h>
                        2391 --1489: */
                        2392 --1490: yd_sfma_Error_t YD_SFMA_SpibscReadTransfer(const uint32_t                        Unit,
                        2393 	.align	2
                        2394 	.align	2
                        2395 	.global	_YD_SFMA_SpibscReadTransfer
                        2396 _YD_SFMA_SpibscReadTransfer:
000005e8 8207e170       2397 	prepare	{r25,r26,r27,r28,r29,r31},1
000005ec 63370100       2398 	st.w	r6,0[sp]
000005f0 07c8           2399 	mov	r7,r25
                        2400 --	    .bf
                        2401 .LDW43:
                        2402 --1491:                                                yd_sfma_SpibscSpimdReg_t * const Regset)

                                                                      Page 41
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        2403 --1492: {
                        2404 --1493:     yd_sfma_Error_t ret;
                        2405 --1494:     uint32_t       reg_value;
                        2406 --1495:     uint32_t       write_value;
                        2407 --1496:     uint32_t       base;
                        2408 --1498:     if (Regset == R_NULL)
000005f2 e0c9           2409 	cmp	zero,r25
000005f4 ba05*          2410 	bne	.L1285
                        2411 --1499:     {
                        2412 --1500:         ret = YD_SFMA_ERR_PARAM_INCORRECT;
                        2413 --line1500
                        2414 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.71::
                        2415 .LDWlin71:
000005f6 02e2           2416 	mov	2,r28
000005f8 f535*          2417 	br	.L1287
                        2418 .L1285:
                        2419 --1501:     }
                        2420 --1502:     else
                        2421 --1503:     {
                        2422 --1504:         base = YD_SFMA_BASE_ADD;
                        2423 --line1504
                        2424 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.72::
                        2425 .LDWlin72:
000005fa 40d6fff2       2426 	movhi	hi(-218169344),zero,r26
                        2427 --1505:         reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
000005fe 3adf4900       2428 	ld.w	72[r26],r27
                        2429 --1506:         reg_value = (reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT;
00000602 dbde0100       2430 	andi	1,r27,r27
                        2431 --1507:         if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END)
00000606 61da           2432 	cmp	1,r27
00000608 b205*          2433 	be	.L1288
                        2434 --1508:         {
                        2435 --1509:             ret = YD_SFMA_ERR_FATAL_HW;
                        2436 --line1509
                        2437 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.73::
                        2438 .LDWlin73:
0000060a 07e2           2439 	mov	7,r28
0000060c d52d*          2440 	br	.L1287
                        2441 .L1288:
                        2442 --1510:         }
                        2443 --1511:         else
                        2444 --1512:         {
                        2445 --1513:             reg_value   = YD_SFMA_Read32(base + LOC_YD_SFMA_SMENR);
                        2446 --line1513
                        2447 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.74::
                        2448 .LDWlin74:
0000060e 3adf3100       2449 	ld.w	48[r26],r27
                        2450 --1514:             /* command/address disable */
                        2451 --1515:             write_value = (reg_value &
00000612 2106ff30fcff   2452 	mov	-249601,r1
00000618 1be8           2453 	mov	r27,r29
0000061a 41e9           2454 	and	r1,r29
                        2455 --1516:                           ~(LOC_YD_SFMA_SMENR_CDE |
                        2456 --1517:                             LOC_YD_SFMA_SMENR_ADE |
                        2457 --1518:                             LOC_YD_SFMA_SMENR_DME |
                        2458 --1519:                             LOC_YD_SFMA_SMENR_SPIDB));
                        2459 --1520:             write_value |= ((Regset->Spidb << LOC_YD_SFMA_SMENR_SPIDB_SHIFT) |
0000061c 390f1100       2460 	ld.w	16[r25],r1
00000620 39772500       2461 	ld.w	36[r25],r14
00000624 d00a           2462 	shl	16,r1
00000626 0171           2463 	or	r1,r14

                                                                      Page 42
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
00000628 0ee9           2464 	or	r14,r29
                        2465 --1521:                             (Regset->Spide << LOC_YD_SFMA_SMENR_SPIDE_SHIFT));
                        2466 --1522:             YD_SFMA_Write32((base + LOC_YD_SFMA_SMENR), write_value);
0000062a 7aef3100       2467 	st.w	r29,48[r26]
                        2468 --1524:             /* read enable */
                        2469 --1525:             write_value = ((YD_SFMA_SPIBSC_SPIDATA_ENABLE << LOC_YD_SFMA_SMCR_SPIRE_SHIFT) |
0000062e 05ea           2470 	mov	5,r29
                        2471 --1526:                            (LOC_YD_SFMA_SPIBSC_SPI_ENABLE     << LOC_YD_SFMA_SMCR_SPIE_SHIFT));
                        2472 --1527:             /* signal level set */
                        2473 --1528:             if (Regset->Sslkp == YD_SFMA_SPIBSC_SPISSL_KEEP)
00000630 390f2900       2474 	ld.w	40[r25],r1
00000634 610a           2475 	cmp	1,r1
00000636 ca05*          2476 	bne	.L1291
                        2477 --1529:             {
                        2478 --1530:                 write_value |= (YD_SFMA_SPIBSC_SPISSL_KEEP << LOC_YD_SFMA_SMCR_SSLKP_SHIFT);
                        2479 --line1530
                        2480 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.75::
                        2481 .LDWlin75:
00000638 9dee0001       2482 	ori	256,r29,r29
0000063c c505*          2483 	br	.L1293
                        2484 .L1291:
                        2485 --1531:             }
                        2486 --1532:             else
                        2487 --1533:             {
                        2488 --1534:                 write_value &= ~LOC_YD_SFMA_SMCR_SSLKP;
                        2489 --line1534
                        2490 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.76::
                        2491 .LDWlin76:
0000063e 200efffe       2492 	movea	-257,zero,r1
00000642 41e9           2493 	and	r1,r29
                        2494 .L1293:
                        2495 --1535:             }
                        2496 --1537:             /* execute after setting SPNDL bit */
                        2497 --1538:             YD_SFMA_Write32((base + LOC_YD_SFMA_SMCR), write_value);
00000644 7aef2100       2498 	st.w	r29,32[r26]
                        2499 --1540:             /* wait for transfer-start */
                        2500 --1541:             ret = YD_SpibscWaitTend(Unit);
00000648 23370100       2501 	ld.w	0[sp],r6
                        2502 	jarl	_YD_SpibscWaitTend,lp
                        2502 <EXPANSION BEGIN>
                        2502 jarl22 _YD_SpibscWaitTend , lp 
0000064c bfffcef9*      2502 <EXPANSION END>
00000650 0ae0           2503 	mov	r10,r28
                        2504 --1543:             if (ret == YD_SFMA_ERR_OK)
                        2505 --line1543
                        2506 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.77::
                        2507 .LDWlin77:
00000652 e0e1           2508 	cmp	zero,r28
00000654 9a0d*          2509 	bne	.L1287
                        2510 --1544:             {
                        2511 --1545:                 Regset->Smrdr[YD_SFMA_SMRDR_DATA_0] = YD_SFMA_Read32(base + LOC_YD_SFMA_SMRDR0);
                        2512 --line1545
                        2513 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.78::
                        2514 .LDWlin78:
00000656 3a0f3900       2515 	ld.w	56[r26],r1
0000065a 790f4900       2516 	st.w	r1,72[r25]
                        2517 --1546:                 /* valid in two serial-flash */
                        2518 --1547:                 Regset->Smrdr[YD_SFMA_SMRDR_DATA_1] = YD_SFMA_Read32(base + LOC_YD_SFMA_SMRDR1);
0000065e 3a0f3d00       2519 	ld.w	60[r26],r1
00000662 790f4d00       2520 	st.w	r1,76[r25]
                        2521 .L1287:

                                                                      Page 43
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        2522 --1548:             }
                        2523 --1549:         }
                        2524 --1550:     }
                        2525 --1552:     return ret;
00000666 1c50           2526 	mov	r28,r10
                        2527 --	    .ef
                        2528 .LDW53:
00000668 4206ff70       2529 	dispose	1,{r25,r26,r27,r28,r29,r31},[lp]
                        2530 	.type	_YD_SFMA_SpibscReadTransfer,@function
                        2531 	.size	_YD_SFMA_SpibscReadTransfer,.-_YD_SFMA_SpibscReadTransfer
                        2532 	.align	2
                        2533 .LDW63:
                        2534 --_ret	r28	local
                        2535 --_reg_value	r27	local
                        2536 --_write_value	r29	local
                        2537 --_base	r26	local
                        2538 
                        2539 --_Unit	0[sp]	param
                        2540 --_Regset	r25	param
                        2541 
                        2542 	.section ".bss","awb"
                        2543 .L1344:
                        2544 	.type	.L1344,@object
                        2545 	.size	.L1344,0
                        2546 	.data
                        2547 	.text
                        2548 
                        2549 --1553: }
                        2550 
                        2551 --1555: /***************************************************************************
                        2552 --1556:   Function: YD_SFMA_SpibscDrAddr
                        2553 --1558:   see: <yd_sfma_spibsc.h>
                        2554 --1559: */
                        2555 --1560: yd_sfma_Error_t YD_SFMA_SpibscDrAddr(const uint32_t Unit,
                        2556 	.align	2
                        2557 	.align	2
                        2558 	.global	_YD_SFMA_SpibscDrAddr
                        2559 _YD_SFMA_SpibscDrAddr:
0000066c 8207e170       2560 	prepare	{r25,r26,r27,r28,r29,r31},1
00000670 c75eff00       2561 	andi	255,r7,r11
00000674 c866ff00       2562 	andi	255,r8,r12
00000678 435f0200       2563 	st.b	r11,2[sp]
0000067c 06c8           2564 	mov	r6,r25
0000067e 43670300       2565 	st.b	r12,3[sp]
                        2566 --	    .bf
                        2567 .LDW73:
                        2568 --1561:                                    const uint8_t  Eav,
                        2569 --1562:                                    const uint8_t  Eac)
                        2570 --1563: {
                        2571 --1564:     yd_sfma_Error_t ret = YD_SFMA_ERR_OK;
00000682 00da           2572 	mov	0,r27
                        2573 --1565:     uint32_t       reg_value;
                        2574 --1566:     uint32_t       write_value;
                        2575 --1567:     uint32_t       base;
                        2576 --1569:     base      = YD_SFMA_BASE_ADD;
00000684 40d6fff2       2577 	movhi	hi(-218169344),zero,r26
                        2578 --1570:     reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_CMNSR);
00000688 3aef4900       2579 	ld.w	72[r26],r29
                        2580 --1571:     reg_value = (reg_value & LOC_YD_SFMA_CMNSR_TEND) >> LOC_YD_SFMA_CMNSR_TEND_SHIFT;
0000068c ddee0100       2581 	andi	1,r29,r29
                        2582 --1572:     if (reg_value != LOC_YD_SFMA_SPIBSC_CMNSR_TRANS_END)

                                                                      Page 44
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
00000690 61ea           2583 	cmp	1,r29
00000692 b205*          2584 	be	.L1418
                        2585 --1573:     {
                        2586 --1574:         ret = YD_SFMA_ERR_FATAL_HW;
                        2587 --line1574
                        2588 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.79::
                        2589 .LDWlin79:
00000694 07da           2590 	mov	7,r27
00000696 a50d*          2591 	br	.L1420
                        2592 .L1418:
                        2593 --1575:     }
                        2594 --1576:     else
                        2595 --1577:     {
                        2596 --1578:         write_value = (((uint32_t)Eac << LOC_YD_SFMA_DREAR_EAC_SHIFT) |
                        2597 --line1578
                        2598 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.80::
                        2599 .LDWlin80:
00000698 830f0300       2600 	ld.bu	2[sp],r1
0000069c a35f0300       2601 	ld.bu	3[sp],r11
000006a0 d00a           2602 	shl	16,r1
000006a2 01e0           2603 	mov	r1,r28
000006a4 0be1           2604 	or	r11,r28
                        2605 --1579:                        ((uint32_t)Eav << LOC_YD_SFMA_DREAR_EAV_SHIFT));
                        2606 --1580:         YD_SFMA_Write32((base + LOC_YD_SFMA_DREAR), write_value);
000006a6 7ae71500       2607 	st.w	r28,20[r26]
                        2608 .L1420:
                        2609 --1581:     }
                        2610 --1582: 	
                        2611 --1583:     YD_SpibscWaitTend(Unit);
000006aa 1930           2612 	mov	r25,r6
                        2613 	jarl	_YD_SpibscWaitTend,lp
                        2613 <EXPANSION BEGIN>
                        2613 jarl22 _YD_SpibscWaitTend , lp 
000006ac bfff6ef9*      2613 <EXPANSION END>
                        2614 --1584: 	
                        2615 --1585: 	reg_value = YD_SFMA_Read32(base + LOC_YD_SFMA_DREAR);
                        2616 --line1585
                        2617 ..lin.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv.81::
                        2618 .LDWlin81:
000006b0 3aef1500       2619 	ld.w	20[r26],r29
                        2620 --1586: 	
                        2621 --1587:     return ret;
000006b4 1b50           2622 	mov	r27,r10
                        2623 --	    .ef
                        2624 .LDW83:
000006b6 4206ff70       2625 	dispose	1,{r25,r26,r27,r28,r29,r31},[lp]
                        2626 	.type	_YD_SFMA_SpibscDrAddr,@function
                        2627 	.size	_YD_SFMA_SpibscDrAddr,.-_YD_SFMA_SpibscDrAddr
                        2628 	.align	2
                        2629 .LDW93:
                        2630 --_ret	r27	local
                        2631 --_reg_value	r29	local
                        2632 --_write_value	r28	local
                        2633 --_base	r26	local
                        2634 
                        2635 --_Unit	r25	param
                        2636 --_Eav	2[sp]	param
                        2637 --_Eac	3[sp]	param
                        2638 
                        2639 	.section ".bss","awb"
                        2640 .L1452:

                                                                      Page 45
                                                              C:\Users\YINGAO~1\AppData\Local\Temp\gh_00008d81.si
                        2641 	.type	.L1452,@object
                        2642 	.size	.L1452,0
                        2643 	.data
                        2644 	.text
                        2645 
                        2646 --1588: }
                        2647 	.align	2
                        2648 
                        2649 	.data
                        2650 	.ghsnote version,14
                        2651 	.ghsnote tools,3
                        2652 	.ghsnote options,144
                        2653 	.text
                        2654 	.align	2
                        2655 ..eof.D.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs.5Cobj.5Cyd_sfma_spibsc_drv...44.3A.5CRenesas_Electronics.5CD1x_RGL.5Crgl_ghs_D1Lx_obj_V1.2E2.2E0.5Cvlib.5Capp.5Cgfx_apps.5Csimple_draw_d1l2.5Ctarget.5Cd1lx_mango_ghs..5A74037A..0::
                        2656 .rh850_flags REGMODE22,DATA_ALIGN8,GP_FIX,EP_NONFIX,TP_FIX,REG2_RESERVE,G3M
