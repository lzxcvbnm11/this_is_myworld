/* RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h File: RangeToEmptyAlgorithm_V2.h * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Code generated for Simulink model 'RangeToEmptyAlgorithm_V2'. * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Model version : 1.348 RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Simulink Coder version : 8.6 (R2014a) 27-Dec-2013 RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h C/C++ source code generated on : Tue Nov 22 15:25:32 2016 * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Target selection: ert.tlc RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Embedded hardware selection: Generic->32-bit Embedded Processor RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Code generation objectives: Unspecified RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Validation result: Not run */  #ifndef RTW_HEADER_RangeToEmptyAlgorithm_V2_h_ #define RTW_HEADER_RangeToEmptyAlgorithm_V2_h_ #include <math.h> #include <stddef.h> #include <string.h> #ifndef RangeToEmptyAlgorithm_V2_COMMON_INCLUDES_ # define RangeToEmptyAlgorithm_V2_COMMON_INCLUDES_ #include "rtwtypes.h" #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RangeToEmptyAlgorithm_V2_COMMON_INCLUDES_ */  #include "RangeToEmptyAlgorithm_V2_types.h" #include "rt_nonfinite.h" #include "rtGetInf.h"  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macros for accessing real-time model data structure */ #ifndef rtmGetErrorStatus # define rtmGetErrorStatus(rtm) ((rtm)->errorStatus) #endif  #ifndef rtmSetErrorStatus # define rtmSetErrorStatus(rtm, val) ((rtm)->errorStatus = (val)) #endif  #ifndef rtmGetStopRequested # define rtmGetStopRequested(rtm) ((void*) 0) #endif  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Block signals (auto storage) */ typedef struct { DBL FuelSum; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ DBL FullFuelConsumption; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ DBL RecentFuelConsumption; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ } B_RangeToEmptyAlgorithm_V2_T;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Block states (auto storage) for system '<Root>' */ typedef struct { DBL FuelConsumptionRate; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ DBL LastFuel; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ DBL LastFuelConsumption; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ DBL NewFuelConsumption; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ U32 LastOdometer; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ U8 InitializeCount; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ } DW_RangeToEmptyAlgorithm_V2_T;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Parameters (auto storage) */ struct P_RangeToEmptyAlgorithm_V2_T_ { U16 K_FullFuelOdometer; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_FullFuelOdometer RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ U16 K_HysteresisDistance; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_HysteresisDistance RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ U8 K_BottomFuel; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_BottomFuel RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ U8 K_EmptyFuelOdometer; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_EmptyFuelOdometer RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ U8 K_FuelConsumption; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_FuelConsumption RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ U8 K_OdometerInterval; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_OdometerInterval RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ U8 K_StepDistance; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Variable: K_StepDistance RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Referenced by: '<Root>/Range To Empty Algorithm' */ };  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Real-time Model Data Structure */ struct tag_RTM_RangeToEmptyAlgorithm_T { const char_T *errorStatus; };  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Block parameters (auto storage) */ extern P_RangeToEmptyAlgorithm_V2_T RangeToEmptyAlgorithm_V2_P;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Block signals (auto storage) */ extern B_RangeToEmptyAlgorithm_V2_T RangeToEmptyAlgorithm_V2_B;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Block states (auto storage) */ extern DW_RangeToEmptyAlgorithm_V2_T RangeToEmptyAlgorithm_V2_DW;  /* RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Exported Global Signals * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Note: Exported global signals are block signals with an exported global RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h storage class designation. Code generation will declare the memory for RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h these signals and export their symbols. * */ extern U32 gASI_VehicleOdometer; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/gASI_VehicleOdometer' */ extern U8 gASI_K_FullFuelConsumption;/* '<Root>/gASI_K_FullFuelConsumption' */ extern U8 gASI_K_RecentFuelConsumption;/* '<Root>/gASI_K_RecentFuelConsumption' */ extern U8 gASI_K_OdometerSum; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/gASI_K_OdometerSum' */ extern U16 gASI_K_FuelSum; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/gASI_K_FuelSum' */ extern U32 gASI_K_RangeToEmpty; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/gASI_K_RangeToEmpty' */ extern U8 gASI_VehicleOdometerV; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/gASI_VehicleOdometerV' */ extern U32 prmRangeToEmpty; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ extern U16 prmFuelSum; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Data Type Conversion4' */ extern U16 prmDisplayRangeToEmpty;/* '<Root>/Range To Empty Algorithm' */ extern U8 prmFullFuelConsumption; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Data Type Conversion' */ extern U8 prmRecentFuelConsumption;/* '<Root>/Data Type Conversion1' */ extern U8 prmOdometerSum; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr '<Root>/Range To Empty Algorithm' */ extern BOOL prmRangeToEmptyWarning;/* '<Root>/Range To Empty Algorithm' */  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Model entry point functions */ extern void RangeToEmptyAlgorithm_V2_initialize(void); extern void RangeToEmptyAlgorithm_V2_step(void); extern void RangeToEmptyAlgorithm_V2_terminate(void); extern void RANG_Input(void); extern void RANG_Output(void); extern void RANG_Printf(void);  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Real-time Model object */ extern RT_MODEL_RangeToEmptyAlgorith_T *const RangeToEmptyAlgorithm_V2_M;  /*- RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h The generated code includes comments that allow you to trace directly RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h back to the appropriate location in the model. The basic format RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h is <system>/block_name, where system is the system number (uniquely RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h assigned by Simulink) and block_name is the name of the block. * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Use the MATLAB hilite_system command to trace the generated code back RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h to the model. For example, * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h hilite_system('<S3>') - opens system 3 RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3 * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h Here is the system hierarchy for this model * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h '<Root>' : 'RangeToEmptyAlgorithm_V2' RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h '<S1>' : 'RangeToEmptyAlgorithm_V2/Range To Empty Algorithm' */ #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RTW_HEADER_RangeToEmptyAlgorithm_V2_h_ */  /* RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h File trailer for generated code. * RANGE_Input.c RANGE_Output.c RangeToEmptyAlgorithm_V2.c RangeToEmptyAlgorithm_V2.h RangeToEmptyAlgorithm_V2_data.c RangeToEmptyAlgorithm_V2_private.h RangeToEmptyAlgorithm_V2_types.h [EOF] */
