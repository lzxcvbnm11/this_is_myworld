/***************************************************************************** bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx Copyright (C) 2016 ShenZhen Yeedon Media co.,LTD. All rights reserved. * bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx File Name : bat_private.h bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx Description : the private datas of the Bat bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx Author: Hejianjun bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx Date: 2016-12-05 ******************************************************************************/  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr check of multiple include */ #ifndef _BAT_PRIVATE_H_  #define _BAT_PRIVATE_H_   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro defines */ #define BAT_LEVEL_HIGH 3268/*3480*/ #define BAT_LEVEL_LOW 1843/*1810*/  #define BAT_PROCESS_PERIOD 10 #define BAT_VOLATE_PERIOD 2000 //#define BAT_FACTOR_100MV 18.1  #define BAT_RANGE_TDFLT_HIGHVOL_ON 3000//(160*BAT_FACTOR_100MV) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 16V =3276.8 */ #define BAT_RANGE_TDFLT_HIGHVOL_OFF 2870//(155*BAT_FACTOR_100MV) /*15.5V =3174.4 */ #define BAT_RANGE_TDFLT_LOWVOL_ON 1560//(90*BAT_FACTOR_100MV) /*9V =1843.2 */ #define BAT_RANGE_TDFLT_LOWVOL_OFF 1670//(95*BAT_FACTOR_100MV) /*9.5V =1945.6 */ #define BAT_TDVOLATE_CNT (BAT_VOLATE_PERIOD/BAT_PROCESS_PERIOD)  #define BAT_RANGE_CLASSA_FLT_HIGHVOL_ON 3080//(165*BAT_FACTOR_100MV) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 16.5V =3300 */ #define BAT_RANGE_CLASSA_FLT_HIGHVOL_OFF 3000//(160*BAT_FACTOR_100MV) /*16V =3174.4 */ #define BAT_RANGE_CLASSA_FLT_LOWVOL_ON 1470//(85*BAT_FACTOR_100MV) /*8.5V =1700 */ #define BAT_RANGE_CLASSA_FLT_LOWVOL_OFF 1560//(90*BAT_FACTOR_100MV) /*9V =1843.2 */ #define BAT_CLASSA_VOLATE_CNT (BAT_VOLATE_PERIOD/BAT_PROCESS_PERIOD)  #define BAT_RANGE_LIN_FLT_HIGHVOL_ON 3285//(175*BAT_FACTOR_100MV) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 17.5V =3500 */ #define BAT_RANGE_LIN_FLT_HIGHVOL_OFF 3393//(180*BAT_FACTOR_100MV) /*18V =3600 */ #define BAT_RANGE_LIN_FLT_LOWVOL_ON 1360//(80*BAT_FACTOR_100MV) /*8V =1600 */ #define BAT_RANGE_LIN_FLT_LOWVOL_OFF 1470//(85*BAT_FACTOR_100MV) /*8.5V =1700 */ #define BAT_LIN_VOLATE_CNT (BAT_VOLATE_PERIOD/BAT_PROCESS_PERIOD)   #define BAT_RANGE_CAN_FLT_HIGHVOL_ON 3200//(170*BAT_FACTOR_100MV) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 17.5V =3500 */ #define BAT_RANGE_CAN_FLT_HIGHVOL_OFF 3285//175*BAT_FACTOR_100MV) /*18V =3600 */ #define BAT_RANGE_CAN_FLT_LOWVOL_ON 980//(60*BAT_FACTOR_100MV) /*8V =1600 */ #define BAT_RANGE_CAN_FLT_LOWVOL_OFF 1065//(65*BAT_FACTOR_100MV) /*8.5V =1700 */ #define BAT_CAN_VOLATE_CNT (BAT_VOLATE_PERIOD/BAT_PROCESS_PERIOD)    #define BCMBAT_CNT (100/BAT_PROCESS_PERIOD)  #define BCMBAT_DEBOUNCECNT 3 #define BCM_DEBOUNCE_OFFSET 200   #define BCM_BAT_NET_THRESHHOLD 15361 #define BCM_BAT_NET_FACTOR 0.009766 #define BCM_BAT_NET_OFFSET 30 /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Private data structures defines */   typedef enum BAT_STATUS_Tag { STATUS_BAT_COUNT_NONE = (0u), /*count status*/ STATUS_BAT_COUNT_HIGH, STATUS_BAT_COUNT_LOW, STATUS_BAT_COUNT_HIGH_CANCEL, /*高电压故障取消计数状态*/ STATUS_BAT_COUNT_LOW_CANCEL, STATUS_BAT_COUNT_RESERVED, STATUS_BAT_COUNT_ALL }BAT_STATUS_ENUM;   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Private data structures defines */ typedef struct stBatDect_tag { U8 status; U8 status_bak; U8 fltSts; U16 Detect_cnt; U16 Remove_cnt; }stBatDect_ST;   typedef struct stBatVoltageValue_tag { U16 highoff; U16 highon; U16 lowoff; U16 lowon; U16 fltMaxCnt; }stBatVoltageValue_ST;  typedef struct batVolDetectTab_tag { //BatDect_Type_ENUM Type; stBatDect_ST* pdata; }batVolDetectTab_ST;   typedef struct BatGatherData_Tag { U8 res; /*去抖动结果*/ U8 cnt; /*采样计数器*/ U16 value; /*当前采样的值*/ U32 sum; /*连续采样有效值的加和，存放6次*/ U16 debounceValue; /*去抖动之后的采样值*/ }BatGatherData_ST;   static BOOL bat_InitSts = FALSE; static U16 bat_ADCValue; static U16 bcmBatValue = 0; static stBatDect_ST bat_TD; static stBatDect_ST bat_ClassA; static stBatDect_ST bat_Lin; static stBatDect_ST bat_Can; static BatGatherData_ST bat_stBcmBat; const static stBatVoltageValue_ST batVolRangTab[TYPE_BATDET_ALL]= { { BAT_RANGE_TDFLT_HIGHVOL_OFF, BAT_RANGE_TDFLT_HIGHVOL_ON, BAT_RANGE_TDFLT_LOWVOL_OFF, BAT_RANGE_TDFLT_LOWVOL_ON, BAT_TDVOLATE_CNT },  { BAT_RANGE_CLASSA_FLT_HIGHVOL_OFF, BAT_RANGE_CLASSA_FLT_HIGHVOL_ON, BAT_RANGE_CLASSA_FLT_LOWVOL_OFF, BAT_RANGE_CLASSA_FLT_LOWVOL_ON, BAT_CLASSA_VOLATE_CNT }, { BAT_RANGE_LIN_FLT_HIGHVOL_OFF, BAT_RANGE_LIN_FLT_HIGHVOL_ON, BAT_RANGE_LIN_FLT_LOWVOL_OFF, BAT_RANGE_LIN_FLT_LOWVOL_ON, BAT_LIN_VOLATE_CNT }, { BAT_RANGE_CAN_FLT_HIGHVOL_OFF, BAT_RANGE_CAN_FLT_HIGHVOL_ON, BAT_RANGE_CAN_FLT_LOWVOL_OFF, BAT_CAN_VOLATE_CNT }, };  static stBatDect_ST* batDectTab[TYPE_BATDET_ALL]= { &bat_TD, &bat_ClassA, &bat_Lin, &bat_Can }; /*constant define*/  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Private static functions declare */ static void bat_voltageRange_Process(U8 Type,stBatDect_ST *pData); static void bat_voltageRange_check(U8 Type,stBatDect_ST *pData); static void bat_ClassA_Process(void); static void bat_ClassA_check(void); static void bat_LIN_Process(void); static void bat_LIN_check(void); #endif /*_bat_PRIVATE_H_*/  /*------------------end of file----------------------------*/  /*=========================================================================== bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx File Revision History(bottom to top:first revision to last revision) *============================================================================ bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx $Log:$ * bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx Rev: Userid: Date: Description *-------- ---------- --------- ------------------------------ * bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx V1.0 Hejianjun 2016-12-05 Initial bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx V1.1 Liuyingying 2017-0118 modify BAT_HIGH ADC VALUE modify BAT_LOW ADC VALUE according TO Hardware REQUIREMENT  bat.c bat_cfg.h bat_info.inc bat_private.h bat_public.h ZS12_BAT_ADC_TAB.xlsx V2.0 ZXX 2017-6-28 ADD FAULT DETECT *===========================================================================*/
