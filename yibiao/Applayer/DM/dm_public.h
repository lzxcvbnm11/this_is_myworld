/***************************************************************************** dm.c dm_cfg.h dm_info.inc dm_private.h dm_public.h Copyright (C) 2016 ShenZhen Yeedon Media co.,LTD. All rights reserved. * dm.c dm_cfg.h dm_info.inc dm_private.h dm_public.h File Name : slf_public.h dm.c dm_cfg.h dm_info.inc dm_private.h dm_public.h Description :  dm.c dm_cfg.h dm_info.inc dm_private.h dm_public.h Author: zhangxianxiang dm.c dm_cfg.h dm_info.inc dm_private.h dm_public.h Date: 2017-6-22 ******************************************************************************/  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr check of multiple include */ #ifndef _DM_PUBLIC_H_ #define _DM_PUBLIC_H_  #include "stsmg_public.h" #include "rtc_public.h" #include "acc_public.h" /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Public Macros defines */  //#define NavDircn_InvaildValue 63 //#define NavDist_InvaildValue 32767   #define DM_DISPLAYSPEED_CNT (100/50) #define DM_AUTOSTART_CNT (1000/50) #define DM_AUTORST_CNT (1000/50) #define DM_AVRGFUELCONPN_MAX 200 //AvrgFuelConpnMax    /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Public data structures defines */ typedef enum Dm_PageType_Tag { INDEX_NULL = ( 0u ), INDEX_LOGO, INDEX_FUNCTION, INDEX_POPUP }Dm_PageType_ENUM;  typedef enum Dm_MainFuction_Tag { MAINFUCTION_TC = ( 0u ), MAINFUCTION_SET, MAINFUCTION_ENTERTAINMENT, MAINFUCTION_FAULT }Dm_MainFuction_ENUM;  typedef enum Dm_POPUP_MainFuction_Tag { POPUP_MAINFUNCTION_MSG = ( 0u ), POPUP_MAINFUNCTION_NAVI, POPUP_MAINFUNCTION_ALL }Dm_POPUP_MainFuction_ENUM;  typedef enum Dm_SubFuction_TC_Tag { SUBFUCTION_TC_SPEED= ( 0u ), SUBFUCTION_TC_INSFUELCOMP, SUBFUCTION_TC_RANGE, SUBFUCTION_TC_BAT, SUBFUCTION_TC_AUTOSTART, SUBFUCTION_TC_AUTORST, SUBFUCTION_TC_TIREPRESS, }Dm_SubFuction_TC_ENUM;  typedef enum Dm_SubPage_SET_Tag { SUBFUCTION_SETTING = ( 0u ), SUBFUCTION_SET_ILLU, SUBFUCTION_SET_SPEEDLIMIT, SUBFUCTION_SET_SCS, }Dm_SubPage_SET_ENUM;  typedef enum Dm_SetMainPage_Item_Tag { ITEM_SETMAIN_NULL = ( 0u ), ITEM_SETMAIN_ILLU, ITEM_SETMAIN_LIMIT, ITEM_SETMAIN_SCSOFF, ITEM_ALL, }Dm_SetMainPage_Item_ENUM;  typedef enum Dm_SubFuction_EnterTainment_Tag { SUBFUCTION_MEDIA_MUSIC = ( 0u ), //SUBFUCTION_MEDIA_FM, //SUBFUCTION_MEDIA_AM, //SUBFUCTION_NAVI, }Dm_SubFuction_EnterTainment_ENUM;  typedef enum Dm_MEDIA_Tag { INDEX_MEDIA_OFF = ( 0u ),  INDEX_MEDIA_AM, INDEX_MEDIA_FM, }Dm_MEDIA_EENUM;   typedef enum Dm_NAVI_Tag { INDEX_NAVI_PARKING = ( 0u ), INDEX_NAVI_LEFT, INDEX_NAVI_RIGHT, INDEX_NAVI_LEFTFRONT, INDEX_NAVI_RIGHTFONT, INDEX_NAVI_LEFTREAR, INDEX_NAVI_RIGHTREAR, INDEX_NAVI_BACK, INDEX_NAVI_STRAIGHT, INDEX_NAVI_ARRIVEDPOINT, INDEX_NAVI_ENTERCYCLE, INDEX_NAVI_OUTCYCLE, INDEX_NAVI_ARRIVEDSERVICE, INDEX_NAVI_ARRIVEDTOLLSTATION, INDEX_NAVI_ARRIVEDDEST, INDEX_NAVI_ENTERTUNNEL, }Dm_NAVI_ENUM;   typedef enum Dm_SubFuction_Fault_Tag { SUBFUCTION_FAULT_LIST = ( 0u ), }Dm_SubFuction_Fault_ENUM;   typedef enum Dm_ILLU_Tag { INDEX_ILLU_OFF = ( 0u ), INDEX_ILLU_lEVEL1, INDEX_ILLU_lEVEL2, INDEX_ILLU_lEVEL3, }Dm_ILLU_ENUM;  typedef enum Dm_MsgType_Tag { INDEX_MSG_NORMAL, INDEX_MSG_TIREPRESS, INDEX_MSG_RANGE, }Dm_MsgType_ST;   typedef enum Dm_SpeedLimit_Tag { INDEX_SPEEDLIMIT_OFF = ( 0u ), INDEX_SPEEDLIMIT_5, INDEX_SPEEDLIMIT_10, INDEX_SPEEDLIMIT_15, INDEX_SPEEDLIMIT_20, INDEX_SPEEDLIMIT_25, INDEX_SPEEDLIMIT_30, INDEX_SPEEDLIMIT_35, INDEX_SPEEDLIMIT_40, INDEX_SPEEDLIMIT_45, INDEX_SPEEDLIMIT_50, INDEX_SPEEDLIMIT_55, INDEX_SPEEDLIMIT_60, INDEX_SPEEDLIMIT_65, INDEX_SPEEDLIMIT_70, INDEX_SPEEDLIMIT_75, INDEX_SPEEDLIMIT_80, INDEX_SPEEDLIMIT_85, INDEX_SPEEDLIMIT_90, INDEX_SPEEDLIMIT_95, INDEX_SPEEDLIMIT_100, INDEX_SPEEDLIMIT_105, INDEX_SPEEDLIMIT_110, INDEX_SPEEDLIMIT_115, INDEX_SPEEDLIMIT_120, INDEX_SPEEDLIMIT_125, INDEX_SPEEDLIMIT_130, INDEX_SPEEDLIMIT_135, INDEX_SPEEDLIMIT_140, INDEX_SPEEDLIMIT_145, INDEX_SPEEDLIMIT_150, INDEX_SPEEDLIMIT_155, INDEX_SPEEDLIMIT_160, INDEX_SPEEDLIMIT_165, INDEX_SPEEDLIMIT_170, INDEX_SPEEDLIMIT_175, INDEX_SPEEDLIMIT_180, INDEX_SPEEDLIMIT_185, INDEX_SPEEDLIMIT_190, INDEX_SPEEDLIMIT_195, INDEX_SPEEDLIMIT_200, INDEX_SPEEDLIMIT_205, INDEX_SPEEDLIMIT_210, INDEX_SPEEDLIMIT_215, INDEX_SPEEDLIMIT_220, INDEX_SPEEDLIMIT_ALL, }Dm_SpeedLimit_ENUM;  typedef enum Dm_Logo_Tag { INDEX_LOGO1 = ( 0u ), INDEX_LOGO2, INDEX_LOGO3, INDEX_LOGO4, INDEX_LOGO5, INDEX_LOGO6, INDEX_LOGO7, INDEX_LOGO8, INDEX_LOGO9, INDEX_LOGO10, INDEX_LOGO11, INDEX_LOGO12, INDEX_LOGO13, INDEX_LOGO14, INDEX_LOGO15, INDEX_LOGO16, INDEX_LOGO17, INDEX_LOGO18, INDEX_LOGO19, INDEX_LOGO20, INDEX_LOGO21, INDEX_LOGO22, INDEX_LOGO23, INDEX_LOGO24, INDEX_LOGO25, INDEX_LOGO26, INDEX_LOGO27, INDEX_LOGO28, INDEX_LOGO29, INDEX_LOGO30, INDEX_LOGO31, INDEX_LOGO32, INDEX_LOGO33, INDEX_LOGO34, INDEX_LOGO35, INDEX_LOGO36, INDEX_LOGO37, INDEX_LOGO38, INDEX_LOGO39, INDEX_LOGO40, INDEX_LOGO41, INDEX_LOGO42, INDEX_LOGO43, INDEX_LOGO44, INDEX_LOGO45, INDEX_LOGO46, INDEX_LOGO47, INDEX_LOGO48, INDEX_LOGO49, INDEX_LOGO50, INDEX_LOGO51, INDEX_LOGO52, INDEX_LOGO53, INDEX_LOGO54, INDEX_LOGO55, INDEX_LOGO56, INDEX_LOGO57, INDEX_LOGO58, INDEX_LOGO59, INDEX_LOGO60, INDEX_LOGO61, INDEX_LOGO62, INDEX_LOGO63, INDEX_LOGO64, INDEX_LOGO_ALL, }Dm_Logo_ENUM;  typedef struct Dm_TC_InsFuelConpn_Tag { float InsFuelConpn; U8 UnitType; }Dm_TC_InsFuelConpn_ST;   typedef struct Dm_TC_AutoStart_Tag { U32 AvrgSpeed1; U32 ODOValue1; U32 AvrgFuelConpn1; U32 AvrgFuelConpnV1; U32 DrivenTime1; }Dm_TC_AutoStart_ST;  typedef struct Dm_TC_AutoRst_Tag { U32 AvrgSpeed2; U32 ODOValue2; U32 AvrgFuelConpn2; U32 AvrgFuelConpnV2; U32 DrivenTime2; }Dm_TC_AutoRst_ST;  typedef struct Dm_TC_TirePress_Tag { U8 FLTirePressV; U8 FLTireTempV; U8 FRTirePressV; U8 FRTireTempV; U8 RLTirePressV; U8 RLTireTempV; U8 RRTirePressV; U8 RRTireTempV; U16 FLTirePress; S16 FLTireTemp; U16 FRTirePress; S16 FRTireTemp; U16 RLTirePress; S16 RLTireTemp; U16 RRTirePress; S16 RRTireTemp; U8 FLTireSts; U8 FRTireSts; U8 RLTireSts; U8 RRTireSts; }Dm_TC_TirePress_ST;  typedef struct Dm_Setting_Tag { U8 Item[3]; U8 Sel; }Dm_Setting_ST;  typedef struct Dm_NAVIValue_Tag { U8 NavDircn; U8 NaviUnit; U16 NavDist; }Dm_NAVI_ST;   typedef struct Dm_Fault_List_Tag { U16 total; U16 index; MSG_EVENT_ENUM Item[4]; }Dm_Fault_List_ST;  typedef struct Dm_MsgTirePress_Tag { Dm_TC_TirePress_ST TirePress; U16 TitleIndex; }Dm_MsgTirePress_ST;  typedef struct Dm_MsgRange_Tag { U16 RangeToEmpty; }Dm_MsgRange_ST;  typedef struct Dm_MsgDoorNotClose_Tag { U8 DrvDoorSts; U8 PnsgDoorSts; }Dm_MsgDoorNotClose_ST;  typedef struct Dm_TCBatData_Tag { U16 Value; BOOL Valid; }Dm_TCBatData_ST;  typedef union Dm_Msg_Tag { Dm_TC_TirePress_ST TirePress; Dm_MsgRange_ST Range; Dm_MsgDoorNotClose_ST door; }Dm_Msg_ST;  typedef struct Dm_MsgData_Tag { MSG_EVENT_ENUM MsgType; Dm_Msg_ST MsgData; }Dm_MsgData_ST;   typedef union Dm_PageValue_Tag { U8 buf[16]; U8 Logo_index; U32 DisplaySpeed; AccInstantFuelcsump_ST InsFuel; U16 RangeToEmpty; Dm_TCBatData_ST bat; //U16 BatValue; Dm_TC_AutoStart_ST AutoStart_Show; Dm_TC_AutoRst_ST AutoRst_Show; Dm_MsgTirePress_ST Tire; Dm_Setting_ST SetMain; U8 IlluLevel; U8 SpeadLimit; BOOL SCSEn; Dm_NAVI_ST Navi; U8 MusicSrc; Dm_Fault_List_ST Fault; //U8 CurFaultList; Dm_MsgData_ST msg; }Dm_PageValue_UN;  typedef struct Dm_CMD_Tag { U8 PageType; U8 MainPage; U8 SubPage; }Dm_CMD_ST; typedef struct Dm_OdoCrusTgtSpd_Tag { U8 isCrusTgt; U8 show; U32 value; }Dm_OdoCrusTgtSpd_ST; typedef struct Dm_DATA_Tag { PTime_ST time; Dm_OdoCrusTgtSpd_ST odoTgt; AccGearInfo_ST GearType; Dm_PageValue_UN Buffer; }Dm_DATA_ST;  typedef struct DM_Send_PageValue_Tag { Dm_CMD_ST CMD; Dm_DATA_ST DATA; }DM_Send_PageValue_ST;   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Public extern functions declare */ extern void DM_Init(void); extern void DM_Process_50ms(void); extern U8 DM_GetScsSwEn(PU8 status); extern void DM_SetScsSwEn(U8 status); extern U8 DM_GetDisplayInfo(DM_Send_PageValue_ST *pInfo); extern U8 DM_UpdatePageInfo(Dm_CMD_ST *data); extern U8 DM_GetSetMainIndex(PU8 pIndex); extern U8 DM_GetFltListIndex(PU8 pIndex); extern U8 DM_GetIlluLevel(PU8 Level); #endif /*=========================================================================================================== dm.c dm_cfg.h dm_info.inc dm_private.h dm_public.h File Revision History (bottom to top:first revision to last revision) * *============================================================================================================ *$Log:$ *  *Rev: Userid: date: description *----- ----- ----------- ----------- *Rev 1 zhangxianxiang 2017-06-22 initial ======================================================================================*/
