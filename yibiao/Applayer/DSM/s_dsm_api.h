/****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c CETC-MOTOR All rights reserved * ****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c File name: s_dsm_api.h * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: Diagnostic Service Module application header file. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Author: zhangwj * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Modify by: huangxy * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Version: v1.00.10 * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c modification history * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c -------------------- * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v0.01.00 2010/07/28, zhangwj create this file. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v0.01.01 2010/08/05, Q AC validation passed. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.00 2010/08/06, submission to test. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.01 2010/08/20, sa & iocbi service modified and submission to test. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.02 2010/08/30, run_iteration reset & SA NRC_7E bugs fixed. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.03 2010/09/24, modify sa&iocbi service, s_dsm_indication() and * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_dsm_task() function. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.04 2010/10/27, Modify DSM configuration file, and Q AC validation * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c passed. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.05 2010/11/17, Modify SA service callout and s_dsm_ckeck_cfg * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c function. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.06 2010/12/20, DSM functions add S_FUNC_PRE and S_FUNC_SUF * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c macro definition. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.07 2011/04/07, Modify s_dsm_get_buffer() using and move the * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_dsm_reset(DSM_RESET_TYPE) function form callout * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c to s_dsm_task. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.08 2011/08/05, Add RSDBI/RDBPI/DDDI/ATP/SDT/ROE/LC service * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c function. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.09 2012/08/17, 1)Replace all const struct handle declaration with * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const struct *. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c 2)Add S_DSM_ROM macro definition before const * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c declaration. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c 3)Change macro definition S_ROM_PTR to S_DSM_ROM_PTR* lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c v1.00.10 2012/08/28, 1)Implementing reading multi data identifier in one * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c RDBI service request. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c * ******************************************************************************/ #ifndef __S_DSM_API_H__ #define __S_DSM_API_H__  #include "s_tpm.h"  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr structure definition *****************************/ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr data description structure define */ typedef struct { const volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c address; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr data address */ s_uint16 size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr data size */ } s_dsm_block, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_dsm_block_handle;   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service structure define */ typedef struct { s_uint8 serv_sid; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service ID */ S_DSM_ROM s_uint8* S_DSM_ROM_PTR serv_sa_levels_entry;/* service sa level */ s_uint8 serv_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr number of service sa level */ s_uint8 serv_addr_mode; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr address mode of the service */ }s_dsm_service_info, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_service_info_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session structure define */ typedef struct  { s_uint8 sesn_diag_mode; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session diagnostic mode */ s_uint16 sesn_p2_server_max; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr P2 timer value */ s_uint16 sesn_p2s_server_max; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr P2* timer value */ s_uint16 sesn_p2_extended_server_max; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr P2 timer value */ s_uint16 sesn_p2s_extended_server_max; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr P2* timer value */ S_DSM_ROM s_dsm_service_info* sesn_services_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service list */ s_uint8 sesn_services_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of service list */ S_DSM_ROM s_uint8* sesn_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session sa level list */ s_uint8 sesn_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session sa level number */ } s_dsm_session, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_session_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr SA data structure define */ typedef struct { s_uint16 cfg_sa_delay; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa delay value */ s_uint8 cfg_sa_max_attempts; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa max attempts value */ s_uint8 cfg_sa_level_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa level number lib/  s_uint8* cfg_sa_level_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa level buffer */ s_uint8* cfg_sa_seed_size_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa seed size buffer */ s_uint8* cfg_sa_key_size_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa key size buffer */ s_uint8* cfg_sa_key_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa key buffer */ s_uint8* cfg_sa_security_access_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa data security access data record size */ }s_dsm_sa_info, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_sa_info_handle;   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr data identifier structure define */ typedef struct  { s_uint16 did; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr data identifier */ s_uint16 did_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the size of the data */ S_DSM_ROM s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR did_rd_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr reading sa level list */ s_uint8 did_rd_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of reading sa level */ S_DSM_ROM s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR did_wr_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr writing sa level list */ s_uint8 did_wr_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of writing sa level */ s_bool did_scaling_support; } s_dsm_data_identifier, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_data_identifier_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr iocbi identifier structure define */ typedef struct  { s_uint16 ioid; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr iocbi identifier */ s_uint16 ioid_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the size of the iocbi data */ S_DSM_ROM s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR ioid_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa level list */ s_uint8 ioid_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of sa level list */ s_bool ioid_bitmap_flag; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr bitmap identifier flag */ } s_dsm_iocbi_identifier, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_iocbi_identifier_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr rc identifier structure define */ typedef struct { s_uint16 rcid; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr rc identifier */ S_DSM_ROM s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR rcid_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr sa level list */ s_uint8 rcid_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of sa level list */ } s_dsm_rc_identifier, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_rc_identifier_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr memory range */ typedef struct { s_uint32 mem_address; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr start address of the memory */ s_uint32 mem_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr memory size */ S_DSM_ROM s_uint8* S_DSM_ROM_PTR mem_rd_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr reading sa level list */ s_uint8 mem_rd_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of reading sa level */ S_DSM_ROM s_uint8* S_DSM_ROM_PTR mem_wr_sa_levels_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr writing sa level list */ s_uint8 mem_wr_sa_levels_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of writing sa level */ } s_dsm_mem_range, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_mem_range_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service information structure define */ typedef struct { s_uint8 service; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service id */ S_FUNC_PRE s_uint8 S_FUNC_SUF(* fixed_size) ( void ); /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr fixed_size function pointer */ S_FUNC_PRE void S_FUNC_SUF(* rx_fixed) ( s_uint16, volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c volatile lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const, volatile s_uint16 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const ); /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr fixed function pointer */ S_FUNC_PRE void S_FUNC_SUF(* rx_done) ( void ); /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr done function pointer */ S_FUNC_PRE void S_FUNC_SUF(* tx_finished) ( void );  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr finished function pointer */ S_FUNC_PRE void S_FUNC_SUF(*tx_continue) ( volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c volatile lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const , volatile s_uint16* const ); }s_dsm_service, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_ROM_PTR s_dsm_service_handle;  /*Periodic Data Define Struct*/ typedef struct /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RAM */ { s_uint8 period_id; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the periodic data identifier */ s_uint8 period_transmission_mode; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr periodic data transmission mode */ s_uint8 period_out_frame; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the UUDT frame index */ s_uint16 period_tx_counter; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the counter of periodic data transmission */ } s_dsm_periodic_data, *s_dsm_periodic_data_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ROE Data Define Struct */ typedef struct { s_uint8 roe_event_type; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr roe event type */ s_uint8 roe_event_window_time; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr roe event window time */ s_bool roe_start_flag; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr roe event start flag */ s_bool roe_event_store_flag;/* roe event store flag */ s_bool roe_event_occur_flag; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the flag for indicate event occur */ s_uint32 roe_current_time; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the time of current actived event lib/  s_uint8* roe_event_record_buf_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr roe event type buffer entry */ s_uint8 roe_event_record_buf_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the size of event type buffer */ s_uint8 roe_event_type_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the size of event type */ s_uint8* roe_event_service_buf_entry;/* the event service buffer entry */ s_uint8 roe_event_service_buf_size;/* the size of event service buffer */ s_uint8 roe_event_service_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the size of event service */ }s_dsm_roe_description, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_dsm_roe_description_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr main structure define */ typedef struct  {  s_uint8 cfg_default_mode; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr default session mode */ s_uint16 cfg_dsmpp; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr processing period */ S_DSM_ROM s_uint8* cfg_session_sa_check_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session check */ S_DSM_ROM s_dsm_session* cfg_sessions_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session list */ s_uint8 cfg_sessions_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr session list size*/ volatile s_uint8* cfg_buf_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RAM buffer */ s_uint16 cfg_buf_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RAM buffer size */ S_DSM_ROM s_dsm_service* const lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c cfg_services_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service list */ s_uint8 cfg_services_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of service list */ s_uint16 cfg_s3_server_timeout; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr S3 timeout value */ S_DSM_ROM s_dsm_sa_info* cfg_sa_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr SA configuration entry */ S_DSM_ROM s_dsm_data_identifier* cfg_did_list_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr dataIdentifier list */ s_uint16 cfg_did_list_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the number of DID */ volatile s_uint8* cfg_rcid_state_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr rc state list */ S_DSM_ROM s_dsm_rc_identifier* cfg_rcid_list_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr rc id list */ s_uint16 cfg_rcid_list_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr number of rc id */ S_DSM_ROM s_dsm_iocbi_identifier* cfg_ioid_list_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr iocbi id list */ s_uint16 cfg_ioid_list_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr number of iocbi id lib/  S_DSM_ROM s_dsm_mem_range* cfg_mem_range_list_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr memory range list */ s_uint16 cfg_mem_range_list_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr number of memory */ volatile s_uint8* cfg_dynamic_buf_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr dynamic buffer list */ s_uint16 cfg_dynamic_buf_size; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of dynamic buffer */ volatile s_dsm_periodic_data* cfg_periodic_schedule_table;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr periodic schedule table */ s_uint8 cfg_periodic_schtable_size;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr size of periodic schedule table */ s_uint16 cfg_tm_periods[3]; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr peridos transmit speed */ s_dsm_roe_description* cfg_roe_list_entry;/* roe event buffer list */ s_uint8 cfg_roe_list_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr number of roe register event */ s_uint8 cfg_roe_etp; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr roe event time precision, if the  value is 0x01 = millisecond(ms); 0x02 = second;0x04 = minute ;0x08 =hour */ volatile s_uint8* cfg_did_buf_entry;/* RDBI service temp DID buffer entry */ volatile s_dsm_block* cfg_did_resp_buf_entry; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RDBI service response buffer entry */ s_uint16 cfg_max_req_did_num; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr max supported DID number */ } s_dsm_cfg, *s_dsm_cfg_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr variable declaration ****************************/ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr configuration structure declaration */ extern const s_dsm_cfg dsm_cfg;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr service node declaration */ extern const s_dsm_service s_dsm_service_DSC; extern const s_dsm_service s_dsm_service_ER; extern const s_dsm_service s_dsm_service_SA; extern const s_dsm_service s_dsm_service_CC; extern const s_dsm_service s_dsm_service_TP; extern const s_dsm_service s_dsm_service_CDTCS; extern const s_dsm_service s_dsm_service_RDBI; extern const s_dsm_service s_dsm_service_RMBA; extern const s_dsm_service s_dsm_service_WDBI; extern const s_dsm_service s_dsm_service_WMBA; extern const s_dsm_service s_dsm_service_CDI; extern const s_dsm_service s_dsm_service_RDTCI; extern const s_dsm_service s_dsm_service_IOCBI; extern const s_dsm_service s_dsm_service_RC; extern const s_dsm_service s_dsm_service_UNKNOWN; extern const s_dsm_service s_dsm_service_CCR;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr marco definition ******************************/ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Service identifiers */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Diagnostic and Communication Management Functional Unit */ #define S_DSM_SID_DSC (0x10u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr DiagnosticSessionControl */ #define S_DSM_SID_ER (0x11u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ECUReset */ #define S_DSM_SID_SA (0x27u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr SecurityAccess */ #define S_DSM_SID_TP (0x3Eu) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr TesterPresent */ #define S_DSM_SID_CDTCS (0x85u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ControlDTCSetting */ #define S_DSM_SID_LC (0x87u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr LinkControl */ #define S_DSM_SID_ATP (0x83u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr AccessTimingParameter */ #define S_DSM_SID_SDT (0x84u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr SecuredDataTransmission*/ #define S_DSM_SID_ROE (0x86u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ResponseOnEvent */  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Data Transmission Functional Unit */ #define S_DSM_SID_RDBI (0x22u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ReadDataByIdentifier */ #define S_DSM_SID_RMBA (0x23u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ReadMemoryByAddress */ #define S_DSM_SID_RSDBI (0x24u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ReadScalingDataByIdentifier */ #define S_DSM_SID_RDBPI (0x2Au) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ReadDataByPeriodicIdentifier */ #define S_DSM_SID_DDDI (0x2Cu) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr DynamicallyDefineDataIdentifier */ #define S_DSM_SID_WDBI (0x2Eu) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr WriteDataByIdentifier */ #define S_DSM_SID_WMBA (0x3Du) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr WriteMemoryByAddress */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Stored Data Transmission Functional Unit */ #define S_DSM_SID_CDI (0x14u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ClearDiagnosticInformation */ #define S_DSM_SID_RDTCI (0x19u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr ReadDTCInformation */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr InputOutput Control Functional Unit */ #define S_DSM_SID_IOCBI (0x2Fu) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr InputOutputControlByIdentifier */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Remote Activation of Routine Functional Unit */ #define S_DSM_SID_RC (0x31u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr RoutineControl */ #define S_DSM_SID_CC (0x28u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr CommunicationControl */  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Services macro definition */ #define S_DSM_SERVICE_DSC (s_dsm_service*)(&s_dsm_service_DSC) #define S_DSM_SERVICE_ER (s_dsm_service*)(&s_dsm_service_ER) #define S_DSM_SERVICE_SA (s_dsm_service*)(&s_dsm_service_SA) #define S_DSM_SERVICE_RC (s_dsm_service*)(&s_dsm_service_RC) #define S_DSM_SERVICE_CC (s_dsm_service*)(&s_dsm_service_CC) #define S_DSM_SERVICE_RDBI (s_dsm_service*)(&s_dsm_service_RDBI) #define S_DSM_SERVICE_CDI (s_dsm_service*)(&s_dsm_service_CDI) #define S_DSM_SERVICE_CDTCS (s_dsm_service*)(&s_dsm_service_CDTCS) #define S_DSM_SERVICE_IOCBI (s_dsm_service*)(&s_dsm_service_IOCBI) #define S_DSM_SERVICE_RDTCI (s_dsm_service*)(&s_dsm_service_RDTCI) #define S_DSM_SERVICE_WDBI (s_dsm_service*)(&s_dsm_service_WDBI) #define S_DSM_SERVICE_RMBA (s_dsm_service*)(&s_dsm_service_RMBA) #define S_DSM_SERVICE_WMBA (s_dsm_service*)(&s_dsm_service_WMBA) #define S_DSM_SERVICE_TP (s_dsm_service*)(&s_dsm_service_TP)  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Special return codes */ #define S_DSM_RC_OK (0x0100u)/* process ok */ #define S_DSM_RC_PENDING (0x0200u)/* pending */  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Negative return codes */ #define S_DSM_RC_GR (0x0010u)/* generalReject */ #define S_DSM_RC_SNS (0x0011u)/* serviceNotSupported */ #define S_DSM_RC_SFNS (0x0012u)/* subFunctionNotSupported */ #define S_DSM_RC_IMLOIF (0x0013u)/* incorrectMessageLengthOrInvalidFormat */ #define S_DSM_RC_RTL (0x0014u)/* responseTooLong */ #define S_DSM_RC_BRR (0x0021u)/* busyRepeatRequest */ #define S_DSM_RC_CNC (0x0022u)/* conditionsNotCorrect */ #define S_DSM_RC_RSE (0x0024u)/* requestSequenceError */ #define S_DSM_RC_FPERA (0x0026u)/* failurePreventsExecutionOfRequestedAction*/ #define S_DSM_RC_ROOR (0x0031u)/* requestOutOfRange */ #define S_DSM_RC_SAD (0x0033u)/* securityAccessDenied */ #define S_DSM_RC_IK (0x0035u)/* invalidKey */ #define S_DSM_RC_ENOA (0x0036u)/* exceedNumberOfAttempts */ #define S_DSM_RC_RTDNE (0x0037u)/* requiredTimeDelayNotExpired */ #define S_DSM_RC_UDNA (0x0070u)/* uploadDownloadNotAccepted */ #define S_DSM_RC_TDS (0x0071u)/* transferDataSuspended */ #define S_DSM_RC_GPF (0x0072u)/* generalProgrammingFailure */ #define S_DSM_RC_WBSC (0x0073u)/* wrongBlockSequenceCounter */ #define S_DSM_RC_RCRRP (0x0078u)/* requestCorrectlyReceived-ResponsePending */ #define S_DSM_RC_SFNSIAS (0x007Eu)/* subFunctionNotSupportedInActiveSession */ #define S_DSM_RC_SNSIAS (0x007Fu)/* serviceNotSupportedInActiveSession */ #define S_DSM_RC_RPMTH (0x0081u)/* rpmTooHigh */ #define S_DSM_RC_RPMTL (0x0082u)/* rpmTooLow */ #define S_DSM_RC_EIR (0x0083u)/* engineIsRunning */ #define S_DSM_RC_EINR (0x0084u)/* engineIsNotRunning */ #define S_DSM_RC_ERTTL (0x0085u)/* engineRunTimeTooLow */ #define S_DSM_RC_TEMPTH (0x0086u)/* temperatureTooHigh */ #define S_DSM_RC_TEMPTL (0x0087u)/* temperatureTooLow */ #define S_DSM_RC_VSTH (0x0088u)/* vehicleSpeedTooHigh */ #define S_DSM_RC_VSTL (0x0089u)/* vehicleSpeedTooLow */ #define S_DSM_RC_TPTH (0x008Au)/* throttle/PedalTooHigh */ #define S_DSM_RC_TPTL (0x008Bu)/* throttle/PedalTooLow */ #define S_DSM_RC_TRNIN (0x008Cu)/* transmissionRangeNotInNeutral */ #define S_DSM_RC_BSNC (0x008Fu)/* brakeSwitch(es)NotClosed */ #define S_DSM_RC_SLNIP (0x0090u)/* shifterLeverNotInPark */ #define S_DSM_RC_TCCL (0x0091u)/* torqueConverterClutchLocked */ #define S_DSM_RC_VTH (0x0092u)/* voltageTooHigh */ #define S_DSM_RC_VTL (0x0093u)/* voltageTooLow */  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_bypass_indication lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to reset S3 timer. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c channel[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Current TPM's channel information. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE void S_FUNC_SUF  s_dsm_bypass_indication( const s_tpm_channel* channel );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_indication lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is called by TPM to get the buffer to stored request lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c message from lower layer. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c channel[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Current TPM's channel information. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c status[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM's receive state. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c rem_length[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The size of the request message information. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c buffer[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The pointer points to the buffer which request message will be stored lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c in.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c buffer_length[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The buffer's length. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_TPM_RX_BUFFER_MODE_SINGLE: Request message is signal frame. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_TPM_RX_BUFFER_MODE_MANY: Request message is mulitple frame. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_TPM_RX_BUFFER_MODE_CANCEL: To cancel current request message receive. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_uint8 S_FUNC_SUF  s_dsm_indication( const s_tpm_channel* channel, s_uint8 status, s_uint16 rem_length,  volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c volatile lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const buffer, volatile s_uint16 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const buffer_length );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_confirm lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to send response message from DSM to TPM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c channel[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Current TPM's channel information. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c status[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM's send state. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c rem_length[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The length of response message which hasn't been sent. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c buffer[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The pointer points to the buffer which response message will be sent. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c buffer_length[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The length of response message which will be sent. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_TPM_TX_BUFFER_MODE_MANY: Response message is mulitple frame. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_uint8 S_FUNC_SUF  s_dsm_confirm( const s_tpm_channel* channel,  s_uint8 status, s_uint16 rem_length, volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c volatile lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const buffer, volatile s_uint16 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c const buffer_length );  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr control function declaration for application ****************/  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_check_cfg  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to check whether the configuration information  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c designed by the user is valid. It shall be called before the lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c initialization of DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c config[IN]:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c current configuration information. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CFG_CHECK_OK: The configuration is OK. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CFG_CHECK_NULL: The configuration structure is NULL. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_NULL_SESSIONS: The session list is NULL. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_NULL_RAM: The RAM buffer configuration is NULL. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_RAM_WR_FAIL: The RAM buffer is read only. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_NULL_SERVICES: The service list is NULL. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_NULL_DEFAULT_MODE: The default session is NULL. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_DIAG_MODE_OVERLAP: The default session is not equal to any lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c session configurated by the user. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_VERSION_FAIL: The version in configuration is invalid. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_CHECK_CPU_COMPLIER_FAIL: The complier information in configuration lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c is invalid. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ #define S_DSM_CFG_CHECK_OK (0x00u) #define S_DSM_CFG_CHECK_NULL (0x01u) #define S_DSM_CHECK_NULL_SESSIONS (0x02u) #define S_DSM_CHECK_NULL_RAM (0x03u) #define S_DSM_CHECK_RAM_WR_FAIL (0x04u) #define S_DSM_CHECK_NULL_SERVICES (0x05u) #define S_DSM_CHECK_NULL_DEFAULT_MODE (0x06u) #define S_DSM_CHECK_DIAG_MODE_OVERLAP (0x07u) #define S_DSM_CHECK_VERSION_FAIL (0x08u) #define S_DSM_CHECK_CPU_COMPLIER_FAIL (0x09u)  extern S_FUNC_PRE s_uint8 S_FUNC_SUF s_dsm_cfg_check(const s_dsm_cfg.c s_dsm_cfg.h config );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_init  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to initialize the internal parameters and lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c variables of DSM. It shall be called before using DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c config[IN]:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The configuration information of DSM. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_INIT_OK: DSM initialization successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_INIT_FAILED: DSM initialization failed. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ #define S_DSM_INIT_OK (0x00u) #define S_DSM_INIT_FAILED (0x01u)  extern S_FUNC_PRE s_uint8 S_FUNC_SUF s_dsm_init( s_dsm_cfg.c s_dsm_cfg.h config );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_task  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to process the DSM main functionality(request lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c process and sending response). It shall be called periodically according lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c to the DSMPP configurated by the user. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE void S_FUNC_SUF s_dsm_task( void );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_get_diag_mode  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to get current diagnostic mode which is according lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c to the configuration designed by the user. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_uint8: Current diagnostic mode of DSM.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_uint8 S_FUNC_SUF s_dsm_get_diag_mode( void );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_get_sa_level  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to get the current security access level which lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c is related with the access of service and resource (data identifier, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c rc identifier, iocbi identifier and memory range). lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_uint8:Current security access level of DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_uint8 S_FUNC_SUF s_dsm_get_sa_level( void );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_set_ext_nrc_cnc lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c When the negative response code is NRC 0x22(conditionsNotCorrect), it lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c need to call this function to tell DSM the specific cause of why the lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c ECU rejects the request message transmitted by the tester. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c specific_cause_code[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The specific cause code. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE void S_FUNC_SUF  s_dsm_set_ext_nrc_cnc( s_uint8 specific_cause_code );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_reset lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to reset the internal parameters and variables lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c of DSM according the reset mode(eg. switch to the default session,  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c reset the timer, etc.). lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c reset_mode[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM reset type. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/  extern S_FUNC_PRE void S_FUNC_SUF s_dsm_reset( s_uint8 reset_mode );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_get_buffer lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to get the remaining free RAM buffer address  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c which is configurated by user for the request and response message. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_uint8*: The free buffer address. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern volatile S_FUNC_PRE s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_FUNC_SUF s_dsm_get_buffer( void );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_get_buffer_size lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to get the remaining free RAM buffer size which  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c is configurated by user for the request and response message. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_uint16: The size of remaining free buffer. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF s_dsm_get_buffer_size( void );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_is_pending lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used query whether current state is in pending state. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_TRUE: Current state is pending. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_FALSE: Current state is not pending. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_bool S_FUNC_SUF s_dsm_is_pending( void );  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr DSM service callout function declaration ******************/  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_dsc  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM will call this function when receiving a valid DSC service lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request. The function will be called twice. The first time DSM will lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c inform application that the client requests session switch operation, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c and the second time it will perform the switch operation. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c diag_mode[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Current request diagnostic mode. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c mode_change_now[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Session switch flag. When it is false, the DSM informs the application lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c that the client requests session switch operation. And if it is true, lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c it will perform any action that is related to the session switch lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c (e.g. Jump to the boot loader, reset actived settings, etc). lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The session switch operation can be performed. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SFNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Subfunction is not supported, and the requested diagnostic session is  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c not supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents the  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c diagnostic session switch. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_dsc( s_uint8 diag_mode, s_bool mode_change_now );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_er lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM will call this function when receiving a valid ECU Reset service lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request. This function will be called twice. The first time DSM will lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c inform application that client requests ECU reset operation, and the lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c second time it will perform the reset operation. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c reset_mode[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c ECU reset type. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c reset_now[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c ECU reset flag. When it is false, the DSM informs the application that lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the client requests ECU reset, and if it is true, it can perform any lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c action that is related to the ECU reset (e.g. reset the DSM to default lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c session). * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The ECU reset operation can be performed. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SFNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Subfunction is not supported, and the ECU reset type is not  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents the ECU  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c reset.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_er( s_uint8 reset_mode, s_dsm_block_handle data,  s_bool reset_now );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_sa lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid Security Access service request  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c has been received. The application generates a seed and its corresponding  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c key which will be transferred to DSM. Then DSM will transfer the seed to  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c client and compare the key received from the client later. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c access_mode[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Access security level that the client wants to unlock. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c seed[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Seed value received from application. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c key[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Key value received from application. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Getting seed operation is successful. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SFNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Subfunction is not supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents requesting  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c seed. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_sa( s_uint8 access_mode,  s_dsm_block_handle seed, s_dsm_block_handle seed_record, s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c key );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_sa_save_current_result lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to save the result of the current valid Security lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Access service request. The result must be saved in a non-volatile lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c success[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This security access result. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Save current security access result successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents saving lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c this security access result. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_sa_save_current_result( s_bool success );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_sa_get_previous_result lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to load the result of the last Security Access lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c service request. It is called only for the first time after power up/ECU lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c reset. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c success[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The pointer to the last security access result that should be loaded. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Get last security access result successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents getting  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c last security access result.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_sa_get_previous_result( s_bool lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c success );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_cc lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to transfer communication control request to lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c application. This function will be called twice. The first time DSM lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c will inform application that client requests communication control, and lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the second time it will perform the communication control operation. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c subfunction[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The subfunction parameter contains information on how the server shall lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c control the communication type referenced in the communicationType lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c parameter. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c communicationType[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is used to reference the kind of communication to be lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c controlled. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c on_off[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Communication control flag. If it is false, DSM informs application that  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c client requests communication control. And if it is true, application  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c can perform communication control operation. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Communication control operation can be performed. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SFNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Subfunction is not supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c communication control operation. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and communication type is invalid. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF s_dsm_co_cc( s_uint8 subfunction, s_uint8 communicationType, s_uint16 nodeIdentificationNumber, s_bool on_off );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_cdtcs lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Control DTC setting service callout function. This function is used to lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c stop or resume the setting of Diagnostic Trouble Codes in an ECU. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c subfunction[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is used to indicate to the servers whether Diagnostic lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Trouble Code setting shall be stopped or resumed. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Controlling DTC setting is successful. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SFNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Subfunction is not supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c controlling DTC setting. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF s_dsm_co_cdtcs( s_uint8 subfunction );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rdbi_ask lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid RDBI service request has been lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c received. The identifier is a reference to the data parameter that the  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c client wants to access. This function shall ensure that the referred lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data is available in a directly accessible memory area. If the data is  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c already in RAM then it can just return S_DSM_RC_OK. Alternatively it can lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c initiate copy-process from slow memory areas (e.g. SPI, EEPROM) to RAM.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The identifier is a reference to the data parameter of interest to  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the client.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c size[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The number of requested data bytes. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c iteration[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is relevant only if the function returns S_DSM_RC_PENDING.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM will increase the iteration value each time when the function  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c returns S_DSM_RC_PENDING. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The parameter referenced by the identifier can be read by the client. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current DID isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents data  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c pre-read. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF s_dsm_co_rdbi_ask( s_uint16 identifier,  s_uint16 size, s_uint16 iteration );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rdbi_read lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid RDBI service request has been lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c received. It is called only after that s_dsm_co_rdbi_ask returns lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK. The identifier is a reference to the data parameter that the lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c client wants to access. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The identifier is a reference to the data parameter of interest to  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the client. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c position[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Offset of the data specified by data identifier. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c size[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The number of requested data bytes. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data[OUT]:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter holds the length and address of the requested data which lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c is given by the application. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The parameter referenced by the identifier has been read successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current DID isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents reading  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rdbi_read( s_uint16 identifier, s_uint16 position, s_uint16 size, s_dsm_block_handle data );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rmba_ask lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid RMBA service request has been lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c received. The memory address and size is a reference to the data that lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the client wants to access. This function is used to ensure that the  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c referred data is available in a directly accessible memory area. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c If the data is already in RAM then it can just return S_DSM_RC_OK. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Alternatively it can initiate copy-process from slow memory areas lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c (e.g. SPI, EEPROM) to RAM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory_addr[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The address is the start address of interest to the client. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory_size[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The number of requested data bytes. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c iteration[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is relevant only if the function returns S_DSM_RC_PENDING.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM will increase the iteration value each time when the function  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c returns S_DSM_RC_PENDING. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The data referenced by the address can be read by the client  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current memory address isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents data  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c pre-read. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rmba_ask( s_uint32 memory_addr,  s_uint32 memory_size, s_uint16 iteration );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rmba_read lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The diagnostic service module calls this function when a valid RMBA lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c service request has been received. It is called only after that  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_dsm_co_rmba_ask returns S_DSM_RC_OK. The address is a reference to  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the data that the client wants to access. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory_addr[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The memory address which data will be read from. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory_size[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The number of requested data bytes. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter holds the length and address of the data given by the  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c application. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The data referenced by the address has been read successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current memory address isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents reading  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rmba_read( s_uint32 memory_addr,  s_uint32 memory_size, s_dsm_block_handle data );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_wdbi lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid WDBI service request has been  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c received. The application should check whether the request is valid.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c If the request is valid, it should write the data to the memory  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c referenced by the identifier. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The identifier is the reference to the data parameter that should  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c be updated.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter holds the length and address of the data that lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c should be written to the memory referenced by the identifier. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The data can be written to the buffer referenced by the identifier. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current DID isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents data  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c writing. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_wdbi( s_uint16 identifier, s_dsm_block_handle data );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_wmba lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid WMBA service request has been lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c received. The application should check whether the request is valid.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c If the request is valid, it shall write the data to the memory. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory_addr[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is the writing start address of interest to the client. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c memory_size[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The number of data bytes to be written. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c data[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter holds the length and address of the data that lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c should be written to memory. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The data can be written to the buffer referenced by the address. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current memory address isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents requesting  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c seed. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_wmba( s_uint32 memory_addr,  s_uint32 memory_size, s_dsm_block_handle data );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_cdi lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid CDI service has been received. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application is responsible for the clearing of the Diagnostic  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Trouble Codes identified by the group parameter. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c dtc_group[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter indicates the group of DTC. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Clearing DTC information is successful. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The group of DTC is not supported by this server. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents clearing  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c DTC information. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF s_dsm_co_cdi( s_uint32 dtc_group );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rdtci  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid RDTCI service request has been lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c received. And this function is used to read the status of ECU-resident lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Diagnostic Trouble Code information from any ECU or group of ECUs within lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c a vehicle.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c subfunction[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is used to select one of the DTC report types. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c iteration[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is relevant only if the function returns S_DSM_RC_PENDING.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM will increase the iteration value each time when the function  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c returns S_DSM_RC_PENDING. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter contains a s_dsm_block structure with the address and  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c size of the data supplied in the request message after the subfunction. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Read DTC information successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SFNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Current subfunction is not supported by this service. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents getting  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c DTC information. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rdtci( s_uint8 subfunction, s_uint16 iteration, s_dsm_block_handle request, s_dsm_block_handle response );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_iocbi_bitmapped lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid IOCBI service request including  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c a bitmapped identifier has been received. The application should check  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c whether the request is valid and whether the IO control action can be lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c performed. If the request is valid and the IO control operation can be lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c performed, it should perform the required IO control action and return lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the result in the response. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter identifies local input signal(s), internal parameter(s) lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c or output signal(s) in the server, and the current identifier is a lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c bitmapped identifier. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c control_type[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Input output control parameter, its values are 0x00, 0x01, 0x02, 0x03. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c state_record[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is used as either an input output control parameter that lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c describes how the server shall control its inputs or outputs, or as an lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c additional control state byte. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c state_record_len[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Control option record length. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c mask_record[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The value of each bit shall determine whether the corresponding lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c parameter in the IOCBI identifier will be affected by the request. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c mask_record_len[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Control enable mask record length. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Input output control operation is successful. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current IOCBI identifier isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents input  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c output controlling. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_iocbi_bitmapped( s_uint16 identifier, s_uint8 control_type, const volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c state_record, s_uint8 state_record_len, const volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c mask_record, s_uint8 mask_record_len, s_dsm_block_handle response );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_iocbi_non_bitmapped lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The DSM calls this function when a valid IOCBI service request including  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c a non-bitmapped identifier has been received. The application should lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c check whether the request is valid and whether the IO control action can lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c be performed. If the request is valid and the IO control operation can be lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c performed, it should perform the required IO control action and return lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the result in the response. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter identifies local input signal(s), internal parameter(s) lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c or output signal(s) in the server, and the current identifier is a lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c non-bitmapped identifier. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c control_type[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Input output control parameter, its values are 0x00, 0x01, 0x02, 0x03. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c state_record[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter is used as either an input output control parameter that lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c describes how the server shall control its inputs or outputs, or as an lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c additional control state byte. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c state_record_len[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Control option record length. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Input output control operation is successful. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current IOCBI identifier isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents input  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c output controlling. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_iocbi_non_bitmapped( s_uint16 identifier, s_uint8 control_type,  const volatile s_uint8 lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c state_record, s_uint8 state_record_len,  s_dsm_block_handle response );       extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rc_ask(s_uint8 subfunction); /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rc_start lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Routine control service callout function. This function is used to start lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c routines referenced by the RC identifiers. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The identifier identifies the routine that the application should start.  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter contains the routine control option record field. If  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c there was no routine control option record supplied, then the size  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c of the request is zero. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Start routine successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current RC identifier isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents starting  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c routine. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rc_start( s_uint16 identifier, s_dsm_block_handle request, s_dsm_block_handle response );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rc_stop lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Routine control service callout function. This function is used lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c to stop routines referenced by the RC identifiers. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The identifier identifies the routine that the application should stop. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter contains the routine control option record field. If  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c there was no routine control option record supplied, then the size  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c of the request is zero. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Stop a routine successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current RC identifier isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Conditions is not correct, and some vehicle condition prevents stopping  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c routine. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rc_stop( s_uint16 identifier, s_dsm_block_handle request, s_dsm_block_handle response );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_rc_req_result lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Routine control service callout function. This function is used to lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request the results of the routines referenced by the RC identifiers. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c identifier[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The identifier identifies the routine that the application should request lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c the result from. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c request[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This parameter contains the routine control option record field. If  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c there was no routine control option record supplied, then the size  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c of the request is zero. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request routine result successfully. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_ROOR: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Request is out of range, and current RC Identifier isn't supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents requesting  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c routine result. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. * ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_rc_req_result( s_uint16 identifier, s_dsm_block_handle request, s_dsm_block_handle response );  /***************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_unknown_service lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to transfer user-defined service request to the lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c application and its response message to DSM. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c service_id[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Unknown service identifier. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c requestIN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Unknown service request message from client. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c response[OUT]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The response message which will be transferred to DSM. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_OK: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Unknown service request processing is successful. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_SNS: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Service is not supported. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_CNC: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Condition is not correct, and some vehicle condition prevents processing lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c unknown service request. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c S_DSM_RC_PENDING: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The application initiates a pending response. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE s_uint16 S_FUNC_SUF  s_dsm_co_unknown_service( s_uint8 service_id, s_dsm_block_handle request, s_dsm_block_handle response );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_S3Timeout_process lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c When S3 is timeout, DSM will call this function to reset DSM to the lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c default session. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE void S_FUNC_SUF s_dsm_co_S3Timeout_process( void );  /**************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_disable_ints lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to disable interrupt and return the value of the  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c previous interrupt level. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c s_uint8:  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The value of the current interrupt level. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  *****************************************************************************/ extern S_FUNC_PRE s_uint8 S_FUNC_SUF s_dsm_co_disable_ints( void );  /****************************************************************************** lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Function: s_dsm_co_enable_ints lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Description: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c This function is used to resume the interrupt level to the previous lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c level which is indicated by the input parameter. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Parameter: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c previous[IN]: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c The value of the previous interrupt level. * lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c Return: lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c None. lib s_dsm_api.h s_dsm_callout.c s_dsm_cfg.c s_dsm_cfg.h s_dsm_check_copyright.c s_dsm_check_copyright.h s_dsm_dtc.h s_sa.c  ******************************************************************************/ extern S_FUNC_PRE void S_FUNC_SUF s_dsm_co_enable_ints( s_uint8 previous );   extern U64 GENERIC_ALGORITHM(U64 wSeed, U64 SECURITYCONSTANT); #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr __S_DSM_API_H__ lib/
