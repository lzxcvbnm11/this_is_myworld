/bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Mentor Graphics Corporation */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr All rights reserved */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr File: v_core.h */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Description: Contains target-independent, user visible items */  #ifndef __V_CORE_H__ #define __V_CORE_H__  #include "v_target.h"  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr error code (and type) definition */ typedef v_uint8 v_errcode;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr v_ioctl_op is the 'operation' type. */ typedef v_uint8 v_ioctl_op;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr This structure type specifies the NWM RX callout data structure */ typedef struct { /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Source address, that is the 29 bits of */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the CAN ID */ v_uint32 address; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr NWM data, that is the data field of the CAN */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr frame */ v_uint8 data[8]; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr the length of the CAN frame */ v_uint8 length; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Unique identifier number for each network */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr interface. The identifiers are defined in */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr v_gen.h */ v_uint8 controller_id; } v_nwm_recdata ;  #ifdef DEBUG_MODE  void v_error_hook(v_errcode);  #define V_ERROR_BASE (0x00u) #define V_E_C_BASE (V_ERROR_BASE) #define V_E_F_BASE (V_ERROR_BASE+0x10u) #define V_E_S_BASE (V_ERROR_BASE+0x20u) #define V_E_X_BASE (V_ERROR_BASE+0x30u)  #define V_E_C_HANDLE (V_E_C_BASE+0x00u)  #define V_E_S_HANDLE (V_E_S_BASE+0x00u) #define V_E_S_INTEGER8 (V_E_S_BASE+0x01u) #define V_E_S_INTEGER16 (V_E_S_BASE+0x02u) #define V_E_S_BOOL (V_E_S_BASE+0x03u) #define V_E_S_BYTE (V_E_S_BASE+0x04u) #define V_E_S_LATE_READ (V_E_S_BASE+0x05u) #define V_E_S_BYTE_OVERRUN (V_E_S_BASE+0x06u) #define V_E_S_PUBLISHED (V_E_S_BASE+0x07u) #define V_E_S_INTEGER32 (V_E_S_BASE+0x08u)  #define V_E_X_REENTRANCY (V_E_X_BASE+0x00u)  #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr DEBUG_MODE */  #define V_IMF_NOT_OWNED (0u) #define V_IMF_NOT_IN_QUEUE (0u) #define V_IMF_IN_QUEUE (1u) #define V_IMF_NOT_IN_MODE (2u) #define V_IMF_MODE_CHANGE (3u)   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr v_sys_init() return codes: */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Missing configuration. */ #define V_CONFIG_MISSING (0x01u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Mismatch of core version compared to */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr volcano version of the .tgt file */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr and the library that is used now */ #define V_CORE_VERSION_MISMATCH (0x02u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Different checksums of fixed file in */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr network and private run. */ #define V_FIXED_CHECKSUM_MISMATCH (0x03u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Different checksums of target file */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr in "v_nvram.c" and "v_gen.c". */ #define V_TARGET_CHECKSUM_MISMATCH (0x04u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr error in RAM pool decompression */ #define V_RAM_POOL_COMPRESSION_FAULT (0x05u)  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr v_ctl_init() return codes: */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr General initalization failure */ #define V_TARGET_DRV_INIT_FAILURE (0x01u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Different driver version number */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr in .tgt attributes field and in */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr driver library */ #define V_TARGET_DRV_VER_MISMATCH (0x02u)  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr These are the methods using for ID to frame searching in the target side */ #define V_NO_METHOD (0) #define V_PRIO8_TABLE (1) #define V_PRIO11_TABLES (2) #define V_SEARCH_ON_IDS (3)  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Types pointing to application ROM */ typedef V_AROM struct v_controller_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_AROM_PM v_c_handle; typedef V_AROM struct v_fl_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_AROM_PM v_fl_handle; typedef V_AROM struct v_t_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_AROM_PM v_t_handle; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Types pointing to Volcano NVRAM */ typedef V_NVRAM struct v_fmd_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_fmd_handle; typedef V_NVRAM struct v_s_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_handle; typedef V_NVRAM struct v_s_copy_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_copy_handle; typedef V_NVRAM struct v_cfg_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_cfg_handle; typedef V_NVRAM struct v_imf_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_imf_handle; typedef V_NVRAM struct v_act_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_act_handle; typedef V_NVRAM struct v_layout_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_layout_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Type pointing to Volcano RAM */ typedef V_RAM struct v_c_ram nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_RAM_PM v_c_ram_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Type definitions for void NVRAM and RAM pointers */ typedef V_NVRAM void nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM voidnv_handle; typedef V_NVRAM voidnv_handle nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM voidnv_list_handle; typedef V_RAM void nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_RAM_PM voidram_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Type definitions for pointer to frame map in RAM and NVRAM */ typedef V_RAM v_frame_map nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_RAM_PM v_frame_map_handle; typedef V_NVRAM v_frame_map nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_const_frame_map_handle;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointers to Volcano RAM */ typedef V_RAM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_RAM_PM v_u8vr_ptr; typedef V_RAM v_uint16 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_RAM_PM v_u16vr_ptr;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointers to Volcano NVRAM */ typedef V_NVRAM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_u8vnv_ptr; typedef V_NVRAM v_uint16 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_u16vnv_ptr;  /*lint -save -e960 */ typedef union { /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA S 0750 */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr union is OK here */ V_AROM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_AROM_PM bytes; V_AROM v_uint32 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_AROM_PM pu32; v_uint8 u8; v_uint16 u16; v_bool boolean; } v_t_modifier; /*lint -restore */   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr pointer to notification callout functions */ typedef void (* v_fptr)(void);  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr prototype of the checksum calculation callout */ v_uint8 v_co_tx_frame_checksum(v_uint8 checksum_id, V_ARAM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM buff, v_uint8 len, v_uint32 frame_id); v_uint8 v_co_rx_frame_checksum(v_uint8 checksum_id, V_ARAM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM buff, v_uint8 len, v_uint32 frame_id, v_uint8 checksum);  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr controller descriptor structure */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr resides in FIXED */ struct v_controller_descriptor { /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr null frame mode for this controller. */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to RAM area (for modifiable */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr controller attributes). */ v_fmd_handle null_frame_mode; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Controller RAM */ v_c_ram_handle ram; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to device-specific structu- */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr res. */ voidnv_handle dev_cb; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to protocol-specific */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr structures. */ voidnv_handle protocol_cb; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Function pointers forming device */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr driver interface. */ v_bool (*send_frame) (v_c_handle c, voidnv_handle tx_frame); void (*send_frames) (v_c_handle c, v_frame_map_handle tx_completion, v_frame_map_handle tx_overrun); v_bool (*read_frame) (v_c_handle c, voidnv_handle rx_frame); void (*read_frames) (v_c_handle c); v_bool (*tx_pending) (v_c_handle c); void (*set_mode) (v_c_handle c, v_fmd_handle mode); v_imf_handle (*rx_interrupt_handler) (v_c_handle c); v_uint8 (*init_controller) (v_c_handle c); void (*connect_controller) (v_c_handle c); void (*disconnect_controller) (v_c_handle c); v_bool (*controller_active) (v_c_handle c); v_uint16 (*controller_ioctl) (v_c_handle c,v_ioctl_op op, void V_ARAM nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM p); v_imf_handle (*tx_interrupt_handler) (v_c_handle c); void (*busoff_interrupt_handler) (v_c_handle c); v_uint8 (*check_frame) (v_c_handle c, voidnv_handle frame); void (*app_nm_message_received) (v_nwm_recdata V_ARAM nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM nwm_frame); /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to device-specific RAM */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr structures. */ voidram_handle dev_cb_ram; v_uint8 flags; v_uint8 c_id; };    /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr flag descriptor structure */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr resides in FIXED */ struct v_fl_descriptor { /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to the signal descriptor, to which this flag is bound. */ v_s_handle signal_ptr; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to byte containing flag bit. nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a (in application RAM) */ V_ARAM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM flag_ptr; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to the callback function. */ v_fptr func_ptr; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to the next flag bount to the*/ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr same event. */ v_fl_handle next_flag; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to the corresponding */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr immediate frame. */ v_imf_handle imf_ptr;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Mask selecting flag bit in *flag_ptr */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr byte. */ v_uint8 flag_mask; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Is flag latched by frame or signal */ v_bool is_frame_latch;  };  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr timeout descriptor structure */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr resides in FIXED */ struct v_t_descriptor { /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to the signal descriptor, to which this flag is bound. */ v_s_handle signal_ptr; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Handle (address of descriptor) of */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr signal to be set by timeout event. */ v_s_handle dest_signal; v_fl_handle dest_flag; v_t_modifier modifier; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer/mask pair for selecting enable nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a bit (only applies to enhanced timeout) */ V_ARAM v_uint8 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM is_enabled_ptr; v_uint8 is_enabled_mask; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr (re)set value for counter when sig- */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nal is seen. */ v_uint16 initial_time; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Pointer to countdown value (in application RAM). */ V_ARAM v_uint16 nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_ARAM_PM counter; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Is timeout latched by frame or signal*/ v_bool is_frame_latch; };  #ifdef V_TARGET_SPECIFIC_SEGMENT_MODIFIER #include "v_target_pre_seg_mod.h" #endif  #define V_GEN_CONTROLLER_ARRAY_LABEL v_controllers #define V_GEN_FLAG_ARRAY_LABEL v_flags #define V_GEN_OVERRUN_FLAG_ARRAY_LABEL v_overrun_flags #define V_GEN_TIMEOUT_FLAG_ARRAY_LABEL v_timeout_flags #define V_GEN_TRANSMIT_FLAG_ARRAY_LABEL v_transmit_flags #define V_GEN_TIMEOUT_ARRAY_LABEL v_timeouts #define V_GEN_FIXED_CHECKSUM_LABEL v_fixed_checksum #define V_GEN_CONFIG_HANDLE_LABEL v_config_handle #define V_GEN_FLAG_BYTE_COUNT_LABEL v_flag_byte_count #define V_GEN_OVERRUN_FLAG_BYTE_COUNT_LABEL v_overrun_flag_byte_count #define V_GEN_TARGET_CHECKSUM_LABEL v_target_checksum #define V_GEN_IMF_INOT_ARRAY_LABEL v_imf_inot #define V_GEN_IMF_NOT_ARRAY_LABEL v_imf_not #define V_GEN_CTRL_CONNECTED_ARRAY_LABEL v_ctrl_connected #define V_GEN_USE_ENHANCED_TIMEOUTS_LABEL v_use_enhanced_timeouts  typedef const enum v_to_op_t { V_TO_RESET, V_TO_ARM, V_TO_DISARM } v_to_op;  #define v_timeout_reset(s) v_to_operation((v_s_handle)(s), V_TO_RESET) #define v_timeout_arm(s) v_to_operation((v_s_handle)(s), V_TO_ARM) #define v_timeout_disarm(s) v_to_operation((v_s_handle)(s), V_TO_DISARM) #define V_ALL_SIGNAL_TIMEOUT 0  /*lint -save -"esym(793,external identifiers)" */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA S 3684 V_CORE_H_01 */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Size of arrays is configuration dependent. */ extern V_AROM struct v_controller_descriptor V_GEN_CONTROLLER_ARRAY_LABEL[]; extern V_AROM struct v_fl_descriptor V_GEN_FLAG_ARRAY_LABEL[]; extern V_AROM struct v_fl_descriptor V_GEN_TIMEOUT_FLAG_ARRAY_LABEL[]; extern V_AROM struct v_fl_descriptor V_GEN_TRANSMIT_FLAG_ARRAY_LABEL[]; extern V_AROM struct v_fl_descriptor V_GEN_OVERRUN_FLAG_ARRAY_LABEL[]; extern V_AROM struct v_t_descriptor V_GEN_TIMEOUT_ARRAY_LABEL[]; extern V_AROM v_uint8 V_GEN_IMF_INOT_ARRAY_LABEL[]; extern V_AROM v_uint16 V_GEN_IMF_NOT_ARRAY_LABEL[]; extern V_ARAM v_uint8 V_GEN_CTRL_CONNECTED_ARRAY_LABEL[]; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA L:V_CORE_H_01 */  extern v_uint16 V_AROM V_GEN_FLAG_BYTE_COUNT_LABEL; extern v_uint16 V_AROM V_GEN_OVERRUN_FLAG_BYTE_COUNT_LABEL; extern v_uint32 V_AROM V_GEN_FIXED_CHECKSUM_LABEL; extern v_uint32 V_AROM V_GEN_TARGET_CHECKSUM_LABEL; extern v_bool V_AROM V_GEN_USE_ENHANCED_TIMEOUTS_LABEL;  extern v_fmd_handle V_AROM v_fmd_array; extern v_imf_handle V_AROM v_imf_array;  #ifdef V_TARGET_SPECIFIC_SEGMENT_MODIFIER #include "v_target_post_seg_mod.h" #endif   #define V_GEN_FLAG_BUFFER_ARRAY_LABEL v_flag_buffer #define V_GEN_OVERRUN_FLAG_BUFFER_ARRAY_LABEL v_overrun_flag_buffer  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA S 3684 V_CORE_H_02 */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Size of arrays is configuration dependent. */ extern V_ARAM v_uint8 V_NEAR V_GEN_FLAG_BUFFER_ARRAY_LABEL[]; extern V_ARAM v_uint8 V_NEAR V_GEN_OVERRUN_FLAG_BUFFER_ARRAY_LABEL[]; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA L:V_CORE_H_02 */  /*lint -restore */   /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Signal read/write handle types. */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA S 3313 V_CORE_H_03 */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr These struct tags are deliberately not visible here. */ typedef V_NVRAM struct v_s_8_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_8_handle; typedef V_NVRAM struct v_s_16_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_16_handle; typedef V_NVRAM struct v_s_32_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_32_handle; typedef V_NVRAM struct v_s_bytes_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_bytes_handle; typedef V_NVRAM struct v_s_bool_descriptor nwm.a nwm_core.h v_core.h v_ioctl.h v_nwm.h v_rlin3.h v_rscan.h v_subbus.h v_target.h volcano.h volcano7.a V_NVRAM_PM v_s_bool_handle; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr PRQA L:V_CORE_H_03 */  #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr __V_CORE_H__ */
