/bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Mentor Graphics Corporation */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr All rights reserved */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr File: target.h */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Description: target specifics */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp */ #ifndef __TARGET_H__ #define __TARGET_H__  #include "device.h"  #define DRFIT_CLOCK_CYCLES (5000u) #define CLOCK_KHZ (1000u)  #define NVRAM_BASE (v_config_handle) #define NVRAM_BASE_BAD ((v_cfg_handle)((v_uint32)v_config_handle + 4))  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Intrinsic function for enabling interrupts. */ #define ENABLE_INTS() __EI() #define CONFIG (v_config_handle) #define IMR_TO_IMASK(d) do{ \ d.imask[0] = INTC1IMR0; \ d.imask[1] = INTC2IMR1; \ d.imask[2] = INTC2IMR2; \ d.imask[3] = INTC2IMR3; \ d.imask[4] = INTC2IMR4; \ d.imask[5] = INTC2IMR5; \ d.imask[6] = INTC2IMR6; \ d.imask[7] = INTC2IMR7; \ }while(0)  #define IMASK_TO_IMR(s) do{ \ INTC1IMR0 = s.imask[0]; \ INTC2IMR1 = s.imask[1]; \ INTC2IMR2 = s.imask[2]; \ INTC2IMR3 = s.imask[3]; \ INTC2IMR4 = s.imask[4]; \ INTC2IMR5 = s.imask[5]; \ INTC2IMR6 = s.imask[6]; \ INTC2IMR7 = s.imask[7]; \ }while(0)  #define SET_IMASK_ONE() do{ \ INTC1IMR0 = (v_uint32)(0xffffffff); \ INTC2IMR1 = (v_uint32)(0xffffffff); \ INTC2IMR2 = (v_uint32)(0xffffffff); \ INTC2IMR3 = (v_uint32)(0xffffffff); \ INTC2IMR4 = (v_uint32)(0xffffffff); \ INTC2IMR5 = (v_uint32)(0xffffffff); \ INTC2IMR6 = (v_uint32)(0xffffffff); \ INTC2IMR7 = (v_uint32)(0xffffffff); \ }while(0)  #define SET_IMASK(d,s) do{ \ d.imask[0] = s.imask[0]; \ d.imask[1] = s.imask[1]; \ d.imask[2] = s.imask[2]; \ d.imask[3] = s.imask[3]; \ d.imask[4] = s.imask[4]; \ d.imask[5] = s.imask[5]; \ d.imask[6] = s.imask[6]; \ d.imask[7] = s.imask[7]; \ d.imask[8] = s.imask[8]; \ }while(0)  #define protected_write(preg, reg, value) preg = 0xa5;\ reg = value;\ reg = ~ value;\ reg = value;  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Timer runs at 1Mhz, so 1ms is 1000 */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr cycles. */ #define HW_DELAY (25*1000)  #define PET_WATCHDOG() #define TEST_FAILED() while(1){PET_WATCHDOG();} #define TEST_PASSED() while(1){PET_WATCHDOG();}  /* com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp Register Definitions for PBUS Guards Register (PBG0B) */ #define FSGD0BPROT0 *((volatile v_uint32 *)0xffc4c000ul) /* com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp Register Definitions for TAUB Register (TAUB0) */ #define TAUB0CMOR0 *((volatile v_uint16 *)0xffe30200ul) #define TAUB0TPS *((volatile v_uint16 *)0xffe30240ul) #define TAUB0CMUR0 *((volatile v_uint8 *)0xffe300c0ul) #define TAUB0CDR0 *((volatile v_uint16 *)0xffe30000ul) #define TAUB0TS *((volatile v_uint16 *)0xffe301c4ul) #define TAUB0CNT0 *((volatile v_uint16 *)0xffe30080UL) #define IMR0 *((volatile v_uint32 *)0xfffeeaf0ul)  /* com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp Register Definitions for Clock Controller Register */ #define PROTCMD0 *((volatile v_uint32 *)0xfff80000ul) #define PROTCMD1 *((volatile v_uint32 *)0xfff88000ul) #define PROTCMDD1 *((volatile v_uint32 *)0xfff87000ul) #define MOSCE *((volatile v_uint32 *)0xfff81100ul) #define MOSCS *((volatile v_uint32 *)0xfff81104ul) #define MOSCC *((volatile v_uint32 *)0xfff81108ul) #define MOSCST *((volatile v_uint32 *)0xfff8110cul) #define PLL0E *((volatile v_uint32 *)0xfff89000ul) #define PLL0C *((volatile v_uint32 *)0xfff89008ul) #define PLL0S *((volatile v_uint32 *)0xfff89004ul) #define CKSC_CPUCLKD_CTL *((volatile v_uint32 *)0xfff8a100ul) #define CKSC_CPUCLKD_ACT *((volatile v_uint32 *)0xfff8a108ul) #define PLL1C *((volatile v_uint32 *)0xfff89108ul) #define PLL1E *((volatile v_uint32 *)0xfff89100ul) #define PLL1S *((volatile v_uint32 *)0xfff89104ul) #define CKSC_CPUCLKS_CTL *((volatile v_uint32 *)0xfff8a000ul) #define CKSC_CPUCLKS_ACT *((volatile v_uint32 *)0xfff8a008ul) #define CKSC_IOSTM_CTL *((volatile v_uint32 *)0xfff85600ul) #define CKSC_IOSTM_ACT *((volatile v_uint32 *)0xfff85608ul) #define CKDV_IGENGIT_CTL *((volatile v_uint32 *)0xfff853c0ul) #define CKDV_IGENJIT_STAT *((volatile v_uint32 *)0xfff853c4ul) #define CKSC_IGENJIT_CTL *((volatile v_uint32 *)0xfff85400ul) #define CKSC_ITAUB1ST_CTL *((volatile v_uint32 *)0xfff85540ul) #define CKSC_ITAUB1ST_ACT *((volatile v_uint32 *)0xfff85548ul) #define CKSC_ITAUB1ST_ACT *((volatile v_uint32 *)0xfff85548ul) #define CKSC_ITAUB2ND_CTL *((volatile v_uint32 *)0xfff85580ul) #define CKSC_ITAUB2ND_ACT *((volatile v_uint32 *)0xfff85588ul) #define CKSC_ITAUJ_CTL *((volatile v_uint32 *)0xfff855c0ul) #define CKSC_ITAUJ_ACT *((volatile v_uint32 *)0xfff855c8ul) #define CKSC_IGENFIX_CTL *((volatile v_uint32 *)0xfff85740ul) #define CKSC_IGENFIX_ACT *((volatile v_uint32 *)0xfff85748ul) #define CKSC_ICAN_CTL *((volatile v_uint32 *)0xfff85780ul) #define CKSC_ICAN_ACT *((volatile v_uint32 *)0xfff85788ul) #define CKDV_IGENFIX_CTL *((volatile v_uint32 *)0xfff85700ul) #define CKSC_IGENFIX_ACT *((volatile v_uint32 *)0xfff85748ul) #define CKSC_ICAN_CTL *((volatile v_uint32 *)0xfff85780ul) #define CKSC_ICAN_ACT *((volatile v_uint32 *)0xfff85788ul) #define CKDV_IGENFIX_CTL *((volatile v_uint32 *)0xfff85700ul) #define CKDV_IGENFIX_STAT *((volatile v_uint32 *)0xfff85704ul) #define CKSC_IAPBCAN_CTL *((volatile v_uint32 *)0xfff85240ul) #define CKSC_IAPBCAN_ACT *((volatile v_uint32 *)0xfff85248ul)  /* com.c com_cfg.h com_info.inc com_private.h com_public.h NCF target.c target.h vtp Register Definitions for configuring ports (P0) */ #define PIPC0 *((volatile v_uint16 *)0xffc20008ul) #define PFC0 *((volatile v_uint16 *)0xff618018ul) #define PFCE0 *((volatile v_uint16 *)0xff61801cul) #define PM0 *((volatile v_uint16 *)0xff618010ul) #define PMC0 *((volatile v_uint16 *)0xff618014ul)  /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Bit operations */ #define SET(reg,bit) ((*(reg)) |= 1u << (bit)) #define CLEAR(reg,bit) ((*(reg)) &= ~(1u << (bit))) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Function prototypes */ void init_environment(void); void init_target(void); v_uint16 hw_get_clock(void); void v_ctl_ints_restore(v_imask); v_imask v_ctl_ints_disable(void); void start_up(void);  #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr __TARGET_H__ NCF/ vtp/
