/***************************************************************************** EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp Copyright (C) 2017 ShenZhen Yeedon Media co.,LTD. All rights reserved. * EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp File Name : evt_pubulic.h EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp Description :  EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp Author: liuyingying EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp Date: 2017-07-01 ******************************************************************************/ #ifndef _EVT_PUBLIC_H #define _EVT_PUBLIC_H  #include "stsmg_public.h" #include "dm_public.h"  #define PRIY_EVT_CLASS_PDC 1 #define PRIY_EVT_CLASS_B 2 #define PRIY_EVT_CLASS_C 3   #define JUDGE_EVENT_FLAG_TYPE 32 /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 32 bit */ #define EVT_ASS_JUDGE_PERIOD 50  #define MSG_TIMEOUT_CNT (5000/100) #define TGT_SPEED_MAX 220   typedef enum LEDSegTmpWarnType_Tag { TYPE_WARN_TEMP_OK = (0U),/*无报警*/ TYPE_WARN_TEMP_HIGH,/*水温高报警*/ TYPE_WARN_TEMP_CRITICAL,/*水温高严重报警*/ TYPE_WARN_TEMP_ALL } LEDSegTmpWarnType_ENUM;  typedef enum LEDSegFuelWarnType_Tag { TYPE_WARN_FUEL_OK,/*无报警*/ TYPE_WARN_FUEL_LOW,/*燃油低报警*/ TYPE_WARN_FUEL_CRITICAL,/*燃油低严重报警*/ TYPE_WARN_FUEL_ALL } LEDSegFuelWarnType_ENUM;   typedef enum EVT_GETJUDGE_Tag { INDEX_GJ_NULL = (0U), INDEX_GJ_PDC_FAULT, INDEX_GJ_PDC_AUD, /*INDEX OF CLASS B*/ INDEX_GJ_DOORANDLID_DOOR,/*门未关*/ INDEX_GJ_SEATBELT_DRV, INDEX_GJ_CLSDOORTOAUTOSTR, INDEX_GJ_FASNSBLTTOAUTOSTR, INDEX_GJ_SHFTNTRLTOAUTOSTR, INDEX_GJ_SSBENOFFRMNDR, INDEX_GJ_SHIFTERLCKRLSEBRKREQA, INDEX_GJ_TAKESMTKEYOUTOFSR, INDEX_GJ_DRVRWNDOPENRMNDR, INDEX_GJ_SRFOPENRMNDR, INDEX_GJ_EPBSYSDSPMSGREQ, INDEX_GJ_BCMGEARSHFTPARKNTRLESR, INDEX_GJ_NOKEYCLTHSTART, INDEX_GJ_NOKEYBRKSTART, INDEX_GJ_PUTSMTKEYTOBKUPPOSR, INDEX_GJ_AUTOHOLDMSG, INDEX_GJ_IGNKEY, INDEX_GJ_DOORANDLID_BONNET, /*INDEX OF CLASS A*/ INDEX_GJ_CRUISE, INDEX_GJ_ASS_ACTIVE, INDEX_GJ_ASS_FBD, INDEX_GJ_ASS_FAULT, INDEX_GJ_SCS_DSC_OFF, INDEX_GJ_SCS_DSC_ACTIVE, INDEX_GJ_SCS_DSC_FAULT, INDEX_GJ_SCS_TC_OFF, INDEX_GJ_SCS_TC_FAULT, INDEX_GJ_COOLANT, INDEX_GJ_FUEL, INDEX_GJ_FUEL_SENSOROUTRANG, INDEX_GJ_EMISSION, INDEX_GJ_ENGINE, INDEX_GJ_CHARGE_CHARGE, INDEX_GJ_CHARGE_ALTERNAT, INDEX_GJ_CHARGE_LOADSHED, INDEX_GJ_OILPRESURE, INDEX_GJ_EPS_EPS, INDEX_GJ_EPS_SASFAULT, INDEX_GJ_EPS_SASUNCAL, INDEX_GJ_EPS_ESCL, INDEX_GJ_TPMS_FAULT, INDEX_GJ_TPMS_IDFICNLRMCM, INDEX_GJ_TPMS_WNTRMDA, INDEX_GJ_TPMS_AUTOLOCTNCM, INDEX_GJ_TPMS_PRESURE_LOW, INDEX_GJ_TPMS_LEAKAGE, INDEX_GJ_TPMS_PRESURE_HIGH, INDEX_GJ_TPMS_TEMP_HIGH, INDEX_GJ_TPMS_BALANCE_FAIL, INDEX_GJ_TPMS_BAT_LOW, INDEX_GJ_ABS, INDEX_GJ_BRAKE_IO, INDEX_GJ_BRAKE_FLUDLOW, INDEX_GJ_BRAKE_FBD, INDEX_GJ_SRS, INDEX_GJ_SRSLGT, INDEX_GJ_HEADLAMP, INDEX_GJ_SIDELAMP, INDEX_GJ_FRONTFOGLAMP, INDEX_GJ_REARFOGLAMP, INDEX_GJ_LEFTDIRLAMP, INDEX_GJ_RIGHTDIRLAMP, INDEX_GJ_KEY, INDEX_GJ_ECO, INDEX_GJ_WELCOME, INDEX_GJ_LIGHT,  INDEX_GJ_DOORANDLID_LDSP, INDEX_GJ_OVERSPEED, INDEX_GJ_SEATBELT_LAMPON, INDEX_GJ_EPB, INDEX_GJ_AHD, INDEX_GJ_EPBFLT, INDEX_GJ_HDC, INDEX_GJ_PEPS_CLUTCH_MT, INDEX_GJ_PEPS_BRAKE, INDEX_GJ_PEPS_CLUTCH_FAULT, INDEX_GJ_ASSINHBTNLAMPON, INDEX_GJ_SHFTPARKRMNDR, INDEX_GJ_RUNCRKF, INDEX_GJ_BCMSSBFLTSTS, INDEX_GJ_LDIPDBEAMLGHTF, INDEX_GJ_RDIPDBEAMLGHTF, INDEX_GJ_LDIRCNINDLGHTF, INDEX_GJ_RDIRCNINDLGHTF, INDEX_GJ_LBRKLGHTF, INDEX_GJ_RBRKLGHTF, INDEX_GJ_LSIDELGHTF, INDEX_GJ_RSIDELGHTF, INDEX_GJ_DAYTIMERUNNINGLGHTF, INDEX_GJ_RRFOGLGHTF, INDEX_GJ_REVSLGHTF, INDEX_GJ_BATAGNGSTA, INDEX_GJ_DRVRPWLINITNRMNDR, INDEX_GJ_SRFINITNRMNDR, INDEX_GJ_PEPSANTFLT, INDEX_GJ_SIA, INDEX_GJ_NAVI, INDEX_GJ_ALL  }EVT_GETJUDGE_ENUM;   typedef struct JudgeEvtFlagData_Tag { EVT_GETJUDGE_ENUM index; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 当前发生的最高优先级事件 */ U32 FlagMap[(INDEX_GJ_ALL/JUDGE_EVENT_FLAG_TYPE) +1]; /*标记所有消息事件状态,每个bit对应一个事件,bit值=1表示故障发生，bit=0表示故障清除*/ }JudgeEvtFlagData_ST;  typedef struct JudgeEvtQueueData_Tag { EVT_GETJUDGE_ENUM IndexMap[INDEX_GJ_ALL]; U32 FlagMap[(INDEX_GJ_ALL/JUDGE_EVENT_FLAG_TYPE) +1]; /*标记所有消息事件状态,每个bit对应一个事件,bit值=1表示故障发生，bit=0表示故障清除*/ StsmgEvent_ST Queue[INDEX_GJ_ALL]; }JudgeEvtQueueData_ST;    typedef struct FAULT_LIST_Tag { U8 Count; U8 MsgChg; U8 PageIndex; EVT_GETJUDGE_ENUM IndexMap[INDEX_GJ_ALL]; MSG_EVENT_ENUM MsgMap[INDEX_GJ_ALL]; }FAULT_LIST_ST;   typedef struct JudgeEvtData_Tag { EVT_GETJUDGE_ENUM index; /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr 当前发生的最高优先级事件 */ StsmgEvent_ST event; }JudgeEvtData_ST;   typedef union evt_tickUni_Tag { U8 Value; struct { U8 Left:1; U8 Right:1; U8 Reserve:6; }; }evt_tickUni_UN;   typedef struct evt_TickTockType_Tag { evt_tickUni_UN type;  U16 cnt; }evt_TickTockType_ST;   extern void EVT_JudgeCruise(void); extern void EVT_GetCrusTgtSpd(PU8 isTgt,PU32 TgtSpd); extern void EVT_OPS_CCWrnng_100ms(void); extern U8 EVT_GetJudgeCruise(StsmgEvent_ST *event);   extern void EVT_JudgeCoolant(void); extern void EVT_OPS_ClntTemWrnng_100ms(void); extern U8 EVT_GetJudgeCoolant(StsmgEvent_ST *event);   extern void EVT_JudgeEmission(void); extern void EVT_OPS_MalfIndrLghtW_100ms(void); extern U8 EVT_GetJudgeEmission(StsmgEvent_ST *event);  extern void EVT_JudgeStopStartActive(void); extern void EVT_JudgeStopStartFault(void); extern void EVT_OPS_SpStWrnng_50ms(void); extern U8 EVT_GetJudgeStopStartActiveFBD(StsmgEvent_ST *event); extern U8 EVT_GetJudgeStopStartActive(StsmgEvent_ST *event); extern U8 EVT_GetJudgeStopStartFault(StsmgEvent_ST *event);  extern void EVT_JudgeFuelFlt(void); extern void EVT_OPS_FuelSnsrWrnng_100ms(void); extern U8 EVT_GetJudgeFuel(StsmgEvent_ST *event); extern void EVT_JudgeFuelSensorOutOfRange(void); extern U8 EVT_GetJudgeFuelSensorOutOfRange(StsmgEvent_ST *event);   extern void EVT_JudgeEngine(void); extern void EVT_OPS_EnDrvByWireW_100ms(void); extern U8 EVT_GetJudgeEngine(StsmgEvent_ST *event);   extern void EVT_JudgeCharge(void); extern void EVT_OPS_DspdAltrWrning_100ms(void); extern U8 EVT_GetJudgeCharge(StsmgEvent_ST *event); extern U8 EVT_GetJudgeLoadShed(StsmgEvent_ST *event); extern U8 EVT_GetJudgeAlternator(StsmgEvent_ST *event);  extern void EVT_JudgeOilPressure(void); extern void EVT_OPS_OilPrsLowW_100ms(void); extern U8 EVT_GetJudgeOilPressure(StsmgEvent_ST *event);   extern void EVT_JudgeEPS(void); extern void EVT_OPS_EPSWrnng_100ms(void); extern U8 EVT_GetJudgeEPS(StsmgEvent_ST *event);  extern void EVT_JudgeSASFault(void);  extern void EVT_OPS_SASWrnng_100ms(void); extern U8 EVT_GetJudgeSASFault(StsmgEvent_ST *event);  extern void EVT_JudgeSASUnCal(void); extern void EVT_OPS_SASUncalWrnng_100ms(void); extern U8 EVT_GetJudgeSASUnCal(StsmgEvent_ST *event);  extern void EVT_JudgeESCL(void); extern U8 EVT_GetJudgeESCL(StsmgEvent_ST *event);   extern void EVT_JudgeTPMS(void); extern void EVT_OPS_TyrePrsSts_100ms(void); extern U8 EVT_GetJudgeTPMS(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSIdficnLrnCm(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSWntrMdA(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSAutoLoctnCm(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSWarnIndicate(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSPresureLow(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSLeakage(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSPresureHigh(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSTempHigh(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSBalanceFail(StsmgEvent_ST *event); extern U8 EVT_GetJudgeTPMSBatLow(StsmgEvent_ST *event);    extern void EVT_JudgeABS(void); extern void EVT_OPS_ABSWrnng_100ms(void); extern U8 EVT_GetJudgeABS(StsmgEvent_ST *event);   extern void EVT_JudgeSCSFault(void); extern void EVT_OPS_TCSWrnng_100ms(void); extern void EVT_OPS_SCSWrnng_100ms(void); extern U8 EVT_GetJudgeSCSActive (StsmgEvent_ST *event); extern U8 EVT_GetJudgeTCFault (StsmgEvent_ST *event); extern U8 EVT_GetJudgeSCSFault (StsmgEvent_ST *event);  extern void EVT_JudgeSCSOff(void); extern U8 EVT_GetJudgeSCSOff(StsmgEvent_ST *event);  extern void EVT_JudgeTCOff(void); extern U8 EVT_GetJudgeTCOff(StsmgEvent_ST *event);    extern void EVT_JudgeBrake(void); extern void EVT_OPS_BrkSysWrnng_100ms(void); extern U8 EVT_GetJudgeBrake(StsmgEvent_ST *event); extern U8 EVT_GetJudgeBrakeFludLow(StsmgEvent_ST *event); extern U8 EVT_GetJudgeBrakeFBD(StsmgEvent_ST *event);   extern void EVT_JudgeSRS(void); extern void EVT_OPS_AirbagWrnng_100ms(void); extern U8 EVT_GetJudgeSRS(StsmgEvent_ST *event);  extern void EVT_JudgeSRSLEDFail(void); extern void EVT_OPS_AirbagWrnngindF_100ms(void); extern U8 EVT_GetJudgeSRSLedFail(StsmgEvent_ST *event);  extern void EVT_JudgeHeadLamp(void); extern U8 EVT_GetJudgeHeadLamp(StsmgEvent_ST *event);    extern void EVT_JudgeSideLamp(void); extern U8 EVT_GetJudgeSideLamp(StsmgEvent_ST *event);    extern void EVT_JudgeFrontFogLamp(void); extern U8 EVT_GetJudgeFrontFogLamp(StsmgEvent_ST *event);   extern void EVT_JudgeRearFogLamp(void); extern U8 EVT_GetJudgeRearFogLamp(StsmgEvent_ST *event);  extern void EVT_JudgeLeftDirLamp(void); extern U8 EVT_GetJudgeLeftDirLamp(StsmgEvent_ST *event);   extern void EVT_JudgeRightDirLamp(void); extern U8 EVT_GetJudgeRightDirLamp(StsmgEvent_ST *event);  extern void EVT_JudgeKey(void); extern void EVT_OPS_ScurtKeyBatLW_100ms(void); extern void EVT_OPS_InvdKeyWrnng_100ms(void); extern U8 EVT_GetJudgeKey(StsmgEvent_ST *event);  extern void EVT_JudgeECO(void); extern void EVT_OPS_IPCEcoDrvngSwA_100ms(void); extern U8 EVT_GetJudgeECO(StsmgEvent_ST *event);   extern void EVT_JudgeEPBStatus(void); extern U8 EVT_GetJudgeEPBStatus(StsmgEvent_ST *event);  extern void EVT_JudgeAutoHoldStatus(void); extern U8 EVT_GetJudgeAutoHoldStatus(StsmgEvent_ST *event);  extern void EVT_JudgeEPBFltWarnReq(void); extern U8 EVT_GetJudgeEPBFltWarnReq(StsmgEvent_ST *event);  extern void EVT_JudgeHDCStatus(void); extern U8 EVT_GetJudgeHDCStatus(StsmgEvent_ST *Event);  extern void EVT_JudgeLight(void); extern U8 EVT_GetJudgeWelcome(StsmgEvent_ST *event); extern U8 EVT_GetJudgeLight(StsmgEvent_ST *event);  extern void EVT_JudgeDoor(void); extern U8 EVT_GetJudgeDoor(StsmgEvent_ST *event); //extern U8 EVT_GetJudgeDoorPsg(StsmgEvent_ST *event); extern U8 EVT_GetJudgeDoorLdsp(StsmgEvent_ST *event); extern U8 EVT_GetJudgeDoorBonnet(StsmgEvent_ST *event);  extern void EVT_JudgeOverSpeed(void); extern U8 EVT_GetJudgeOverSpeed(StsmgEvent_ST *event);  extern void EVT_JudgePDC(void); extern U8 EVT_GetJudgePDCSts(StsmgEvent_ST *event); extern U8 EVT_GetJudgePDCAud(StsmgEvent_ST *event);  extern void EVT_JudgeIgnitionKey(void); extern U8 EVT_GetJudgeIgnitionKey(StsmgEvent_ST *event);   extern void EVT_JudgeSeatbelt(void); extern U8 EVT_GetJudgeSeatBelt(StsmgEvent_ST *event); extern U8 EVT_GetJudgeSeatBeltLampOn(StsmgEvent_ST *event);  /******20170626 START***************************************************************/ extern void EVT_JudgeClutchBrakeStart(void); extern U8 EVT_GetJudgePepsClutchStart(StsmgEvent_ST *event); extern U8 EVT_GetJudgePepsBrakeStart(StsmgEvent_ST *event);  extern void EVT_JudgeClutchSwitchFlt(void); extern U8 EVT_GetJudgeClutchSwitchFlt(StsmgEvent_ST *event);  extern void EVT_JudgeNoKeyClutchStart(void); extern U8 EVT_GetJudgeNoKeyClutchStart(StsmgEvent_ST *event);  extern void EVT_JudgeNoKeyBrakeStart(void); extern U8 EVT_GetJudgeNoKeyBrakeStart(StsmgEvent_ST *event);  extern void EVT_JudgeCloseDrvDoorStart(void); extern U8 EVT_GetJudgeCloseDrvDoorStart(StsmgEvent_ST *event);   extern void EVT_JudgeSeatBeltStart(void); extern U8 EVT_GetJudgeSeatBeltStart(StsmgEvent_ST *event);   extern void EVT_JudgeAutoStR(void); extern U8 EVT_GetJudgeAutoStR(StsmgEvent_ST *event);  extern void EVT_JudgeAssOnOffSts(void); extern U8 EVT_GetJudgeAssOnOffSts(StsmgEvent_ST *event);  extern void EVT_JudgeAutoHoldRmd(void); extern U8 EVT_GetJudgeAutoHoldRmd(StsmgEvent_ST *Event);  extern void EVT_JudgeSSBEnOffRmd(void); extern U8 EVT_GetJudgeSSBEnOffRmd(StsmgEvent_ST *Event);   extern void EVT_JudgeShifterLckRlseBrkReq(void); extern U8 EVT_GetJudgeShifterLckRlseBrkReq(StsmgEvent_ST *event);  extern void EVT_JudgeTakeSmartKey(void); extern U8 EVT_GetJudgeTakeSmartKey(StsmgEvent_ST *event);  extern void EVT_JudgeShiftParkRmd(void); extern U8 EVT_GetJudgeShiftParkRmd(StsmgEvent_ST *event);  extern void EVT_JudgePutSmtKeyRmd(void); extern U8 EVT_GetJudgePutSmtKeyRmd(StsmgEvent_ST *event);  extern void EVT_JudgePowerModeFlt(void); extern U8 EVT_GetJudgePowerModeFlt(StsmgEvent_ST *event);  extern void EVT_JudgeSSBFlt(void); extern U8 EVT_GetJudgeSSBFlt(StsmgEvent_ST *event);  extern void EVT_JudgeLBeamLgtFlt(void); extern U8 EVT_GetJudgeLBeamLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeRBeamLgtFlt(void); extern U8 EVT_GetJudgeRBeamLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeLDirLgtFlt(void); extern U8 EVT_GetJudgeLDirLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeRDirLgtFlt(void); extern U8 EVT_GetJudgeRDirLgtFlt(StsmgEvent_ST *event);  /********************************************************************/  extern void EVT_JudgeLBrakeLgtFlt(void); extern U8 EVT_GetJudgeLBrakeLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeRBrakeLgtFlt(void); extern U8 EVT_GetJudgeRBrakeLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeLSideLgtFlt(void); extern U8 EVT_GetJudgeLSideLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeRSideLgtFlt(void); extern U8 EVT_GetJudgeRSideLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeDayTimeRunLgtFlt(void); extern U8 EVT_GetJudgeDayTimeRunLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeRearFrogLgtFlt(void); extern U8 EVT_GetJudgeRearFrogLgtFlt(StsmgEvent_ST *event);   extern void EVT_JudgeReverseLgtFlt(void); extern U8 EVT_GetJudgeReverseLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeReverseLgtFlt(void); extern U8 EVT_GetJudgeReverseLgtFlt(StsmgEvent_ST *event);  extern void EVT_JudgeDrvrWndOpenRmndr(void); extern U8 EVT_GetJudgeDrvrWndOpenRmndr(StsmgEvent_ST *event);  extern void EVT_JudgeSrfOpenRmndr(void); extern U8 EVT_GetJudgeSrfOpenRmndr(StsmgEvent_ST *event);  extern void EVT_JudgeEPBSysDspMsgReq(void); extern U8 EVT_GetJudgeEPBSysDspMsgReq(StsmgEvent_ST *event);  extern void EVT_JudgeBatAgngSta(void); extern U8 EVT_GetJudgeBatAgngSta(StsmgEvent_ST *event);  extern void EVT_JudgeGearShftParkNtrlESR(void); extern U8 EVT_GetJudgeGearShftParkNtrlESR(StsmgEvent_ST *event);  extern void EVT_JudgeDrvrPWLInitnRmndr(void); extern U8 EVT_GetJudgeDrvrPWLInitnRmndr(StsmgEvent_ST *event);  extern void EVT_JudgeSrfInitnRmndr(void); extern U8 EVT_GetJudgeSrfInitnRmndr(StsmgEvent_ST *event);  extern void EVT_JudgePEPSAntFlt(void); extern U8 EVT_GetJudgePEPSAntFlt(StsmgEvent_ST *event);  extern void EVT_JudgeSIA(void); extern U8 EVT_GetJudgeSIA(StsmgEvent_ST *event);  extern void EVT_JudgeNaviStatus(void); extern U8 EVT_GetJudgeNaviStatus(StsmgEvent_ST *event);   extern void EVT_Init(void); extern void EVT_JudgeProcess_20ms(STSMG_EventDataAll_ST *evtSts);    extern U8 EVT_SetJudgeIndexFlagMap(EVT_GETJUDGE_ENUM index); extern U8 EVT_GetJudgeEvtVarFlagMap(EVT_GETJUDGE_ENUM index,PU8 pState);    extern U8 EVT_GetWarnPriorEvent(JudgeEvtData_ST *judgeevt); extern U8 EVT_GetMsgPriorEvent(JudgeEvtData_ST *judgeevt); extern U8 EVT_GetPriorEvent(JudgeEvtData_ST *judgeevt);   extern void EVT_JudgePushFaultEvt(JudgeEvtData_ST *judgeevt); extern U8 EVT_GetFltListItem(U8 listIndex,Dm_Fault_List_ST *pData,U8 size); #endif /*=========================================================================== EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp File Revision History(bottom to top:first revision to last revision) *============================================================================ EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp $Log:$ * EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp Rev: Userid: Date: Description *-------- ---------- --------- ------------------------------ * EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp V1.0 liuyingying 2017-06-20 Initial EVT.C evt_cfg.h evt_info.inc evt_private.h evt_public.h TFX417B.tmp V2.0 liuyingying 2017-07-04 modify *===========================================================================*/
