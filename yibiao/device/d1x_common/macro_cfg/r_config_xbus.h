/bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr r_config_adc.h r_config_awot.h r_config_clma.h r_config_csig.h r_config_csih.h r_config_csisw.h r_config_d1x.h r_config_dcra.h r_config_dma.h r_config_ecm.h r_config_g3dma.h r_config_gpio.h r_config_hwversion.h r_config_ism.h r_config_lcbi.h r_config_ostm.h r_config_pbg.h r_config_pcmp.h r_config_pin.h r_config_pwm.h r_config_riic.h r_config_rlin3.h r_config_rtca.h r_config_sfma.h r_config_sg.h r_config_spea.h r_config_ssif.h r_config_stbc.h r_config_taub.h r_config_tauj.h r_config_tick.h r_config_vdce.h r_config_vram.h r_config_wdta.h r_config_wm.h r_config_xbus.h PROJECT : VLIB macro device level config FILE : $Id: r_config_xbus.h 7402 2016-01-27 15:43:39Z florian.zimmermann $ ============================================================================ DESCRIPTION XBUS configuration for d1x ============================================================================ C O P Y R I G H T ============================================================================ Copyright (c) 2013 - 2014 by Renesas Electronics (Europe) GmbH. Arcadiastrasse 10 D-40472 Duesseldorf Germany All rights reserved. ============================================================================ Purpose: only for testing, not for mass production DISCLAIMER LICENSEE has read, understood and accepted the terms and conditions defined in the license agreement, especially the usage rights. In any case, it is LICENSEE's responsibility to make sure that any user of the software complies with the terms and conditions of the signed license agreement. SAMPLE CODE is not part of the licensed software, as such it must not be used in mass-production applications. It can only be used for evaluation and demonstration purposes at customer's premises listed in the signed license agreement. r_config_adc.h r_config_awot.h r_config_clma.h r_config_csig.h r_config_csih.h r_config_csisw.h r_config_d1x.h r_config_dcra.h r_config_dma.h r_config_ecm.h r_config_g3dma.h r_config_gpio.h r_config_hwversion.h r_config_ism.h r_config_lcbi.h r_config_ostm.h r_config_pbg.h r_config_pcmp.h r_config_pin.h r_config_pwm.h r_config_riic.h r_config_rlin3.h r_config_rtca.h r_config_sfma.h r_config_sg.h r_config_spea.h r_config_ssif.h r_config_stbc.h r_config_taub.h r_config_tauj.h r_config_tick.h r_config_vdce.h r_config_vram.h r_config_wdta.h r_config_wm.h r_config_xbus.h */ #ifndef CONFIG_XBUS_H_ #define CONFIG_XBUS_H_ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Title: XBUS device configuration Configuration of the device dependanant part of the XBUS macro */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Section: Global Defines */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XBUS_MACRO_NUM Number of macros in the device. */ #define R_XBUS_MACRO_NUM 1u /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XBUS_BASE Base address for the macro registers */ #define R_XBUS_BASE_ADDR 0xFFFEEE00u /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XBUS_CACHE_... Cache Geometry definitions */ #define R_XBUS_CACHE_BLK_NB 4u #define R_XBUS_CACHE_WAY_NB 4u #define R_XBUS_CACHE_IDX_NB 0x80u /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro: R_XBUS_WRITE_REG Write XBUSC register with predefined size. SIZE allowed values are 8, 16, 32 */ #ifdef R_DBG_PRINT_XBUS_REGS #define R_XBUS_WRITE_REG(SIZE, ADDR, VALUE) {R_DBG_PrintRegCmd((SIZE), (ADDR), (VALUE)); *((volatile uint##SIZE##_t*)(ADDR)) = (VALUE);} #else #define R_XBUS_WRITE_REG(SIZE, ADDR, VALUE) { *((volatile uint##SIZE##_t*)(ADDR)) = (VALUE);} #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro: R_XBUS_READ_REG Read XBUSC register with predefined size. SIZE allowed values are 8, 16, 32 */ #ifdef R_DBG_PRINT_XBUS_REGS #define R_XBUS_READ_REG(SIZE, ADDR) (R_DBG_PrintRegRead##SIZE##(ADDR)) #else #define R_XBUS_READ_REG(SIZE, ADDR) (*((volatile uint##SIZE##_t*)((ADDR)))) #endif #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr CONFIG_XBUS_H_ */
