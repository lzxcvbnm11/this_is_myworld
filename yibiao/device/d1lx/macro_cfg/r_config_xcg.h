/bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr r_config_drw2d.h r_config_vdce_num.h r_config_vdci.h r_config_vdco.h r_config_xcg.h r_config_xorchk.h PROJECT : VLIB macro device level config FILE : $Id: r_config_xcg.h 7180 2016-01-07 17:45:54Z tobyas.hennig $ ============================================================================ DESCRIPTION XC GUARD configuration for D1x ============================================================================ C O P Y R I G H T ============================================================================ Copyright (c) 2015 by Renesas Electronics (Europe) GmbH. Arcadiastrasse 10 D-40472 Duesseldorf Germany All rights reserved. ============================================================================ Purpose: only for testing DISCLAIMER This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all applicable laws, including copyright laws. THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of this software. By using this software, you agree to the additional terms and conditions found by accessing the following link: http://www.renesas.com/disclaimer r_config_drw2d.h r_config_vdce_num.h r_config_vdci.h r_config_vdco.h r_config_xcg.h r_config_xorchk.h Copyright (C) 2011 Renesas Electronics Corporation. All rights reserved. r_config_drw2d.h r_config_vdce_num.h r_config_vdci.h r_config_vdco.h r_config_xcg.h r_config_xorchk.h */ #ifndef CONFIG_XCG_H_ #define CONFIG_XCG_H_ #if defined (R_DBG_PRINT_XCG_REGS) || defined (R_DBG_PRINT_MSG) #include <stdio.h> #include "r_dbg_api.h" #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Title: XCG device configuration Configuration of the device dependanant part of the XCG macro */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Slaves Masters CPU Subsystem CPU I/F Global I/F Sprite Engine CPU DMA OCD RLE SP0 SP1 SP2 MSTID1 MSTID2 MSTID0 MSTID8 MSTID9 MSTID10 MSTID11 LRAM/CodeFlash – – – R R R R RRAM R/W R/W R/W – – – – SFMA R R R R R R R VRAM0 R/W R/W R/W R/W R/W R/W R/W VRAM1 R/W R/W R/W R/W R/W R/W R/W SDRB Port 0 – – – R/W R/W – – Port 1 – – – – – R/W R/W Port 2 R/W R/W R/W – – – – Port 3 – – – – – - - Mod. registers R/W – – – – – – */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Section: Global Defines */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XCG_MACRO_NUM Number of macros in the device. */ #define R_XCG_MACRO_NUM 9u /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XCG_WINDOW_NUM Number of guard windows in the macro. */ #define R_XCG_WINDOW_NUM 8u /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XCG_MASTERS_NUM Number of masters that can be configured per window. Not all masters are present in the device. */ #define R_XCG_MASTERS_NUM 12u /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XCG_BASE Base address for the macro registers */ /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG3 Retention RAM (RRAM) */ #define R_XCG_BASE_0 (0xFFFC0000u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG4 Video RAM 0 (VRAM0) */ #define R_XCG_BASE_1 (0xFFFC1000u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG6 Serial Flash Memory I/F (SFMA) */ #define R_XCG_BASE_3 (0xFFFC3000u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG8 Cross-connect XC1 module registers bridge */ #define R_XCG_BASE_5 (0xFFFC6000u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG9 DDR2-SDRAM Memory Controller (SDRB) port 2 (XC1) */ #define R_XCG_BASE_6 (0xFFFC4400u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG10 DDR2-SDRAM Memory Controller (SDRB) port 0 (XC0_0) */ #define R_XCG_BASE_7 (0xFFFC4800u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr XCG11 DDR2-SDRAM Memory Controller (SDRB) port 1 (XC0_1) */ #define R_XCG_BASE_8 (0xFFFC4C00u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XCG_WINDOW_GRANULARITY The window size must be a multiple of this value. A 2^n value is required here. 0x00001000: Granularity of 4k. */ #define R_XCG_WINDOW_GRANULARITY (0x1000u) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Constant: R_XCG_WINDOW_GRANULARITY_MASK This constant defines all bits that are valid to be used for the guard window configuration. A 2^n-1 value is required here. 0xFFFFF000: Granularity of 4k. */ #define R_XCG_WINDOW_GRANULARITY_VALID_MASK (~(R_XCG_WINDOW_GRANULARITY-1ul)) #define R_XCG_WINDOW_GRANULARITY_INVALID_MASK ( (R_XCG_WINDOW_GRANULARITY-1ul)) /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro: R_XCG_WRITE_REG Write XCGC register with predefined size. SIZE allowed values are 8, 16, 32 */ #ifdef R_DBG_PRINT_XCG_REGS #define R_XCG_WRITE_REG(SIZE, ADDR, VALUE) {R_DBG_PrintRegCmd((SIZE), (ADDR), (VALUE)); *((volatile uint##SIZE##_t*)(ADDR)) = (VALUE);} #else #define R_XCG_WRITE_REG(SIZE, ADDR, VALUE) { *((volatile uint##SIZE##_t*)(ADDR)) = (VALUE);} #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro: R_XCG_READ_REG Read XCG register with predefined size. SIZE allowed values are 8, 16, 32 */ #ifdef R_DBG_PRINT_XCG_REGS #define R_XCG_READ_REG(SIZE, ADDR) (R_DBG_PrintRegRead##SIZE##(ADDR)) #else #define R_XCG_READ_REG(SIZE, ADDR) (*((volatile uint##SIZE##_t*)((ADDR)))) #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro: R_XCG_WRITE32 Write XCG register 32 bit. */ #ifdef R_DBG_PRINT_XCG_REGS #define R_XCG_WRITE32(ADDR, VALUE) {R_DBG_PrintRegCmd(32, (ADDR), (VALUE)); *((volatile uint32_t*)(ADDR)) = (VALUE);} #else #define R_XCG_WRITE32(ADDR, VALUE) {(*((volatile uint32_t*)(ADDR)) = (VALUE));} #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr Macro: R_XCG_READ32 Read XCG register 32 bit. */ #ifdef R_DBG_PRINT_XCG_REGS #define R_XCG_READ32(ADDR) (R_DBG_PrintRegRead32((ADDR))) #else #define R_XCG_READ32(ADDR) ((*((volatile uint32_t*)((ADDR))))) #endif #endif /bin /cmd /dev /etc /git-bash.exe /git-cmd.exe /LICENSE.txt /mingw64 /proc /ReleaseNotes.html /tmp /unins000.dat /unins000.exe /unins000.msg /usr CONFIG_XCG_H_ */
